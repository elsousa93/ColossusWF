<appDefinition>
   <id>workflowPL</id>
   <version></version>
   <name>PL - Workflow</name>
   <packageDefinitionList>
      <packageDefinition>
         <appId>workflowPL</appId>
         <id>workflowPL</id>
         <name>PL - Workflow</name>
         <packageActivityFormMap>
            <entry>
               <string>DSTDistrates::preenchimentoProcesso2</string>
               <packageActivityForm>
                  <processDefId>DSTDistrates</processDefId>
                  <activityDefId>preenchimentoProcesso2</activityDefId>
                  <formId>distrates</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHAcompanhamentoOutorgas::validacaoInicial</string>
               <packageActivityForm>
                  <processDefId>CHAcompanhamentoOutorgas</processDefId>
                  <activityDefId>validacaoInicial</activityDefId>
                  <formId>ao_processos</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>DSTDistrates::preenchimentoProcesso4</string>
               <packageActivityForm>
                  <processDefId>DSTDistrates</processDefId>
                  <activityDefId>preenchimentoProcesso4</activityDefId>
                  <formId>distrates</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::PreenchimentoProcessoNB</string>
               <packageActivityForm>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <activityDefId>PreenchimentoProcessoNB</activityDefId>
                  <formId>processo</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>DSTDistrates::preenchimentoProcesso3</string>
               <packageActivityForm>
                  <processDefId>DSTDistrates</processDefId>
                  <activityDefId>preenchimentoProcesso3</activityDefId>
                  <formId>distrates</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::PreenchimentoProcessoABA</string>
               <packageActivityForm>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <activityDefId>PreenchimentoProcessoABA</activityDefId>
                  <formId>processo</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>alertasValidacao::runProcess</string>
               <packageActivityForm>
                  <processDefId>alertasValidacao</processDefId>
                  <activityDefId>runProcess</activityDefId>
                  <formId>alertaValidacaoListener</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::validacaoBancariaLegalBIC</string>
               <packageActivityForm>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <activityDefId>validacaoBancariaLegalBIC</activityDefId>
                  <formId>processo</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>poll_email::terminate</string>
               <packageActivityForm>
                  <processDefId>poll_email</processDefId>
                  <activityDefId>terminate</activityDefId>
                  <formId>terminate_listener</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::emissaoMinutas</string>
               <packageActivityForm>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <activityDefId>emissaoMinutas</activityDefId>
                  <formId>processo</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHProducaoComplexo::processamentoManualMinuta</string>
               <packageActivityForm>
                  <processDefId>CHProducaoComplexo</processDefId>
                  <activityDefId>processamentoManualMinuta</activityDefId>
                  <formId>processo</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>diligenciaAut::activity1</string>
               <packageActivityForm>
                  <processDefId>diligenciaAut</processDefId>
                  <activityDefId>activity1</activityDefId>
                  <formId>filtroObrigatorio</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>diligencias::runProcess</string>
               <packageActivityForm>
                  <processDefId>diligencias</processDefId>
                  <activityDefId>runProcess</activityDefId>
                  <formId>pedirEsclarecimento</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>diligencias::resolverDiligencia1</string>
               <packageActivityForm>
                  <processDefId>diligencias</processDefId>
                  <activityDefId>resolverDiligencia1</activityDefId>
                  <formId>esclarecer</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>diligencias::resolverDiligencia2</string>
               <packageActivityForm>
                  <processDefId>diligencias</processDefId>
                  <activityDefId>resolverDiligencia2</activityDefId>
                  <formId>D3ResolverDiligencia</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>DSTDistrates::validacaoProcesso</string>
               <packageActivityForm>
                  <processDefId>DSTDistrates</processDefId>
                  <activityDefId>validacaoProcesso</activityDefId>
                  <formId>distrates</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHProducaoComplexo::processamentoRobotMinuta</string>
               <packageActivityForm>
                  <processDefId>CHProducaoComplexo</processDefId>
                  <activityDefId>processamentoRobotMinuta</activityDefId>
                  <formId>processo</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>HIPContratacao::preenchimentoProcesso</string>
               <packageActivityForm>
                  <processDefId>HIPContratacao</processDefId>
                  <activityDefId>preenchimentoProcesso</activityDefId>
                  <formId>HIPProcesso</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHFiltroComplexo::analiseDocumental</string>
               <packageActivityForm>
                  <processDefId>CHFiltroComplexo</processDefId>
                  <activityDefId>analiseDocumental</activityDefId>
                  <formId>processo</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHRegistos::validacaoEntidadesAutonomas</string>
               <packageActivityForm>
                  <processDefId>CHRegistos</processDefId>
                  <activityDefId>validacaoEntidadesAutonomas</activityDefId>
                  <formId>registos</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHContratacaoNormal::validacaoDespacho</string>
               <packageActivityForm>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <activityDefId>validacaoDespacho</activityDefId>
                  <formId>processo</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>processoTesteAssync::activity1</string>
               <packageActivityForm>
                  <processDefId>processoTesteAssync</processDefId>
                  <activityDefId>activity1</activityDefId>
                  <formId>testeSubflow</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHRegistos::qualidade</string>
               <packageActivityForm>
                  <processDefId>CHRegistos</processDefId>
                  <activityDefId>qualidade</activityDefId>
                  <formId>registos</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>processoTesteAssync::activity2</string>
               <packageActivityForm>
                  <processDefId>processoTesteAssync</processDefId>
                  <activityDefId>activity2</activityDefId>
                  <formId>testeSubflow2</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::PreenchimentoProcessoBIC</string>
               <packageActivityForm>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <activityDefId>PreenchimentoProcessoBIC</activityDefId>
                  <formId>processo</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHContratacaoNormal::emissaoCarta</string>
               <packageActivityForm>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <activityDefId>emissaoCarta</activityDefId>
                  <formId>processo</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHContratacaoNormal::PreenchimentoProcessoBIC</string>
               <packageActivityForm>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <activityDefId>PreenchimentoProcessoBIC</activityDefId>
                  <formId>processo</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::validacaoBancariaLegalGEN</string>
               <packageActivityForm>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <activityDefId>validacaoBancariaLegalGEN</activityDefId>
                  <formId>processo</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::PreenchimentoProcessoMG</string>
               <packageActivityForm>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <activityDefId>PreenchimentoProcessoMG</activityDefId>
                  <formId>processo</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::validacaoBancariaLegalBCP</string>
               <packageActivityForm>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <activityDefId>validacaoBancariaLegalBCP</activityDefId>
                  <formId>processo</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHAcompanhamentoOutorgas::validacaoFinal</string>
               <packageActivityForm>
                  <processDefId>CHAcompanhamentoOutorgas</processDefId>
                  <activityDefId>validacaoFinal</activityDefId>
                  <formId>ao_processos</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHFiltroNormal::analiseDocumental</string>
               <packageActivityForm>
                  <processDefId>CHFiltroNormal</processDefId>
                  <activityDefId>analiseDocumental</activityDefId>
                  <formId>processo</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>DSTDistrates::realizarCobrancas</string>
               <packageActivityForm>
                  <processDefId>DSTDistrates</processDefId>
                  <activityDefId>realizarCobrancas</activityDefId>
                  <formId>distrates</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHRegistos::deposito</string>
               <packageActivityForm>
                  <processDefId>CHRegistos</processDefId>
                  <activityDefId>deposito</activityDefId>
                  <formId>registos</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>PCDProcuradoria::processamento</string>
               <packageActivityForm>
                  <processDefId>PCDProcuradoria</processDefId>
                  <activityDefId>processamento</activityDefId>
                  <formId>procuradoria</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>HIPProducao::atualizacao_minuta</string>
               <packageActivityForm>
                  <processDefId>HIPProducao</processDefId>
                  <activityDefId>atualizacao_minuta</activityDefId>
                  <formId>HIPProcesso</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::validacaoLegalNB</string>
               <packageActivityForm>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <activityDefId>validacaoLegalNB</activityDefId>
                  <formId>processo</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHProducaoNormal::processamentoManualMinuta</string>
               <packageActivityForm>
                  <processDefId>CHProducaoNormal</processDefId>
                  <activityDefId>processamentoManualMinuta</activityDefId>
                  <formId>processo</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHContratacaoNormal::PreenchimentoProcessoMG</string>
               <packageActivityForm>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <activityDefId>PreenchimentoProcessoMG</activityDefId>
                  <formId>processo</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHContratacaoNormal::validacaoLegalNB</string>
               <packageActivityForm>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <activityDefId>validacaoLegalNB</activityDefId>
                  <formId>processo</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHRegistos::pagamentoRegisto</string>
               <packageActivityForm>
                  <processDefId>CHRegistos</processDefId>
                  <activityDefId>pagamentoRegisto</activityDefId>
                  <formId>registos</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>notificacoes::terminateNotificacao</string>
               <packageActivityForm>
                  <processDefId>notificacoes</processDefId>
                  <activityDefId>terminateNotificacao</activityDefId>
                  <formId>notificacoesListener</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::validacaoBancariaLegalABA</string>
               <packageActivityForm>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <activityDefId>validacaoBancariaLegalABA</activityDefId>
                  <formId>processo</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHProducaoNormal::processamentoRobotMinuta</string>
               <packageActivityForm>
                  <processDefId>CHProducaoNormal</processDefId>
                  <activityDefId>processamentoRobotMinuta</activityDefId>
                  <formId>processo</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHArquivo::arquivo</string>
               <packageActivityForm>
                  <processDefId>CHArquivo</processDefId>
                  <activityDefId>arquivo</activityDefId>
                  <formId>processo</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHContratacaoNormal::validacaoBancariaLegalBIC</string>
               <packageActivityForm>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <activityDefId>validacaoBancariaLegalBIC</activityDefId>
                  <formId>processo</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::validacaoDespacho</string>
               <packageActivityForm>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <activityDefId>validacaoDespacho</activityDefId>
                  <formId>processo</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHValidacaoNormal::validacaoContratoDocumentacao</string>
               <packageActivityForm>
                  <processDefId>CHValidacaoNormal</processDefId>
                  <activityDefId>validacaoContratoDocumentacao</activityDefId>
                  <formId>processo</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>DSTDistrates::autenticacao</string>
               <packageActivityForm>
                  <processDefId>DSTDistrates</processDefId>
                  <activityDefId>autenticacao</activityDefId>
                  <formId>distrates</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::validacaoBancariaNB</string>
               <packageActivityForm>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <activityDefId>validacaoBancariaNB</activityDefId>
                  <formId>processo</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHModelo11::processamentoRobotModelo</string>
               <packageActivityForm>
                  <processDefId>CHModelo11</processDefId>
                  <activityDefId>processamentoRobotModelo</activityDefId>
                  <formId>registos</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::validacaoMinutas</string>
               <packageActivityForm>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <activityDefId>validacaoMinutas</activityDefId>
                  <formId>processo</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>DSTDistrates::validacaoProcesso3</string>
               <packageActivityForm>
                  <processDefId>DSTDistrates</processDefId>
                  <activityDefId>validacaoProcesso3</activityDefId>
                  <formId>distrates</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHRegistos::pagamentoDeposito</string>
               <packageActivityForm>
                  <processDefId>CHRegistos</processDefId>
                  <activityDefId>pagamentoDeposito</activityDefId>
                  <formId>registos</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>DSTDistrates::validacaoProcesso2</string>
               <packageActivityForm>
                  <processDefId>DSTDistrates</processDefId>
                  <activityDefId>validacaoProcesso2</activityDefId>
                  <formId>distrates</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHContratacaoNormal::PreenchimentoProcessoABA</string>
               <packageActivityForm>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <activityDefId>PreenchimentoProcessoABA</activityDefId>
                  <formId>processo</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>DSTDistrates::efetuarDeposito</string>
               <packageActivityForm>
                  <processDefId>DSTDistrates</processDefId>
                  <activityDefId>efetuarDeposito</activityDefId>
                  <formId>distrates</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>alertasValidacao::terminateCheck</string>
               <packageActivityForm>
                  <processDefId>alertasValidacao</processDefId>
                  <activityDefId>terminateCheck</activityDefId>
                  <formId>alertaListenerTerminate</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHContratacaoNormal::PreenchimentoProcessoNB</string>
               <packageActivityForm>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <activityDefId>PreenchimentoProcessoNB</activityDefId>
                  <formId>processo</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHContratacaoNormal::emissaoMinutas</string>
               <packageActivityForm>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <activityDefId>emissaoMinutas</activityDefId>
                  <formId>processo</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>DSTDistrates::autenticacao2</string>
               <packageActivityForm>
                  <processDefId>DSTDistrates</processDefId>
                  <activityDefId>autenticacao2</activityDefId>
                  <formId>distrates</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>HIPValidacao::validacaoContratoDocumentacao</string>
               <packageActivityForm>
                  <processDefId>HIPValidacao</processDefId>
                  <activityDefId>validacaoContratoDocumentacao</activityDefId>
                  <formId>HIPProcesso</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::validacaoBancariaLegalBST</string>
               <packageActivityForm>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <activityDefId>validacaoBancariaLegalBST</activityDefId>
                  <formId>processo</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>DSTDistrates::validacaoCobrancas</string>
               <packageActivityForm>
                  <processDefId>DSTDistrates</processDefId>
                  <activityDefId>validacaoCobrancas</activityDefId>
                  <formId>distrates</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>HIPProducao::verificacaoMinutaRobot</string>
               <packageActivityForm>
                  <processDefId>HIPProducao</processDefId>
                  <activityDefId>verificacaoMinutaRobot</activityDefId>
                  <formId>HIPProcesso</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::emissaoCarta</string>
               <packageActivityForm>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <activityDefId>emissaoCarta</activityDefId>
                  <formId>processo</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHValidacaoComplexo::set_user</string>
               <packageActivityForm>
                  <processDefId>CHValidacaoComplexo</processDefId>
                  <activityDefId>set_user</activityDefId>
                  <formId>setUserValidacao</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>true</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHRegistos::validacaoDeposito</string>
               <packageActivityForm>
                  <processDefId>CHRegistos</processDefId>
                  <activityDefId>validacaoDeposito</activityDefId>
                  <formId>registos</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHContratacaoNormal::validacaoBancariaLegalABA</string>
               <packageActivityForm>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <activityDefId>validacaoBancariaLegalABA</activityDefId>
                  <formId>processo</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>HIPProducao::processamentoManualMinuta</string>
               <packageActivityForm>
                  <processDefId>HIPProducao</processDefId>
                  <activityDefId>processamentoManualMinuta</activityDefId>
                  <formId>HIPProcesso</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHRegistos::insercaoChave</string>
               <packageActivityForm>
                  <processDefId>CHRegistos</processDefId>
                  <activityDefId>insercaoChave</activityDefId>
                  <formId>registos</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHRegistos::registo</string>
               <packageActivityForm>
                  <processDefId>CHRegistos</processDefId>
                  <activityDefId>registo</activityDefId>
                  <formId>registos</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHContratacaoNormal::validacaoBancariaNB</string>
               <packageActivityForm>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <activityDefId>validacaoBancariaNB</activityDefId>
                  <formId>processo</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::PreenchimentoProcessoBST</string>
               <packageActivityForm>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <activityDefId>PreenchimentoProcessoBST</activityDefId>
                  <formId>processo</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHContratacaoNormal::PreenchimentoProcessoBST</string>
               <packageActivityForm>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <activityDefId>PreenchimentoProcessoBST</activityDefId>
                  <formId>processo</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>HIPProducao::processamentoRobotMinuta</string>
               <packageActivityForm>
                  <processDefId>HIPProducao</processDefId>
                  <activityDefId>processamentoRobotMinuta</activityDefId>
                  <formId>HIPProcesso</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>DSTDistrates::preenchimentoProcesso</string>
               <packageActivityForm>
                  <processDefId>DSTDistrates</processDefId>
                  <activityDefId>preenchimentoProcesso</activityDefId>
                  <formId>distrates</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>HIPContratacao::PedidoAgendamento</string>
               <packageActivityForm>
                  <processDefId>HIPContratacao</processDefId>
                  <activityDefId>PedidoAgendamento</activityDefId>
                  <formId>HIPProcesso</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHValidacaoComplexo::validacaoContratoDocumentacao</string>
               <packageActivityForm>
                  <processDefId>CHValidacaoComplexo</processDefId>
                  <activityDefId>validacaoContratoDocumentacao</activityDefId>
                  <formId>processo</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHContratacaoNormal::validacaoBancariaLegalGEN</string>
               <packageActivityForm>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <activityDefId>validacaoBancariaLegalGEN</activityDefId>
                  <formId>processo</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHContratacaoNormal::validacaoBancariaLegalBCP</string>
               <packageActivityForm>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <activityDefId>validacaoBancariaLegalBCP</activityDefId>
                  <formId>processo</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::PreenchimentoProcessoBCP</string>
               <packageActivityForm>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <activityDefId>PreenchimentoProcessoBCP</activityDefId>
                  <formId>processo</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHContratacaoNormal::PreenchimentoProcessoBCP</string>
               <packageActivityForm>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <activityDefId>PreenchimentoProcessoBCP</activityDefId>
                  <formId>processo</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>DSTDistrates::processamentoABN</string>
               <packageActivityForm>
                  <processDefId>DSTDistrates</processDefId>
                  <activityDefId>processamentoABN</activityDefId>
                  <formId>distrates</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>HIPProducao::validacaoContrato</string>
               <packageActivityForm>
                  <processDefId>HIPProducao</processDefId>
                  <activityDefId>validacaoContrato</activityDefId>
                  <formId>HIPProcesso</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHConclusoes::concluirProcesso</string>
               <packageActivityForm>
                  <processDefId>CHConclusoes</processDefId>
                  <activityDefId>concluirProcesso</activityDefId>
                  <formId>processo</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHContratacaoNormal::validacaoMinutas</string>
               <packageActivityForm>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <activityDefId>validacaoMinutas</activityDefId>
                  <formId>processo</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>poll_email::runProcess</string>
               <packageActivityForm>
                  <processDefId>poll_email</processDefId>
                  <activityDefId>runProcess</activityDefId>
                  <formId>listener</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::PreenchimentoProcessoGEN</string>
               <packageActivityForm>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <activityDefId>PreenchimentoProcessoGEN</activityDefId>
                  <formId>processo</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHContratacaoNormal::PreenchimentoProcessoGEN</string>
               <packageActivityForm>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <activityDefId>PreenchimentoProcessoGEN</activityDefId>
                  <formId>processo</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>diligencias::confirmarDiligencia</string>
               <packageActivityForm>
                  <processDefId>diligencias</processDefId>
                  <activityDefId>confirmarDiligencia</activityDefId>
                  <formId>confirmarEsclarecimento</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHAcompanhamentoOutorgas::holdProcesses</string>
               <packageActivityForm>
                  <processDefId>CHAcompanhamentoOutorgas</processDefId>
                  <activityDefId>holdProcesses</activityDefId>
                  <formId>ao_processos</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>CHContratacaoNormal::validacaoBancariaLegalBST</string>
               <packageActivityForm>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <activityDefId>validacaoBancariaLegalBST</activityDefId>
                  <formId>processo</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
         </packageActivityFormMap>
         <packageActivityPluginMap>
            <entry>
               <string>CHFiltroNormal::ConfigurarProcesso</string>
               <packageActivityPlugin>
                  <processDefId>CHFiltroNormal</processDefId>
                  <activityDefId>ConfigurarProcesso</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport java.time.LocalDateTime; \r\nimport java.time.format.DateTimeFormatter;\r\nimport java.time.DayOfWeek;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport javax.sql.DataSource;\r\nimport org.joget.commons.util.UuidGenerator;\r\nimport java.time.temporal.ChronoUnit;\r\nimport java.time.LocalDate;\r\n\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;flag_ultima_atividade\&quot; , \&quot;0\&quot;);\r\nwm.processVariable(ProcessID, \&quot;proxima_operativa\&quot; , \&quot;\&quot;);\r\n\r\n\r\npublic String calculateSLAD(String dataInicio, Collection feriados, String sla, String urgencia){\r\n    \r\n    DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\&quot;yyyy-MM-dd HH:mm\&quot;);\r\n    DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern(\&quot;yyyy-MM-dd\&quot;);\r\n    LocalDateTime dateInit = LocalDateTime.parse(dataInicio, formatter);  \r\n    LocalDateTime endDateTime = null;\r\n    String endDate = \&quot;\&quot;;\r\n    Collection holidays = feriados;\r\n    \r\n    \r\n    var hour = dateInit.getHour();\r\n    int slaNumber = Integer.parseInt(sla);\r\n    \r\n    if(urgencia.equals(\&quot;SIM\&quot;)){\r\n        \/\/Calcular SLA urgente\r\n        endDateTime = dateInit.plusHours(slaNumber);\r\n        \/\/Passar dias não uteis\r\n        while(isWeekend(endDateTime) || holidays.contains(endDateTime.format(dateFormatter))){\r\n           endDateTime = endDateTime.plusDays(1);\r\n        }\r\n        \r\n        endDate = endDateTime.format(formatter);\r\n        \r\n        \r\n     \r\n    }else{\r\n        \/\/Calcular SLA não urgente\r\n\r\n            if(hour &lt; 12){\r\n                endDateTime = dateInit.withHour(23).withMinute(59);   \/**   HORAS UTEIS???   **\/\r\n                \r\n                \/\/Incrementar dias consoante o SLA\r\n                while(slaNumber &gt; 1){\r\n                    endDateTime = endDateTime.plusDays(1);\r\n                    \/\/Passar dias não uteis\r\n                    while(isWeekend(endDateTime) || holidays.contains(endDateTime.format(dateFormatter))){\r\n                       endDateTime = endDateTime.plusDays(1);\r\n                    }   \r\n                    slaNumber -= 1;\r\n                }\r\n            }else{\r\n                endDateTime = dateInit.plusDays(1).withHour(12).withMinute(0);\r\n                \r\n                \/\/Incrementar dias consoante o SLA\r\n                while(slaNumber &gt; 1){\r\n                    endDateTime = endDateTime.plusDays(1);\r\n                    \/\/Passar dias não uteis\r\n                    while(isWeekend(endDateTime) || holidays.contains(endDateTime.format(dateFormatter))){\r\n                       endDateTime = endDateTime.plusDays(1);\r\n                    }\r\n                    slaNumber -= 1;\r\n                }\r\n            }\r\n            \r\n        endDate = endDateTime.format(formatter);\r\n    }\r\n    \r\n    return endDate;\r\n}\r\n\r\n\r\npublic boolean isWeekend(LocalDateTime dt) {\r\n    String dayOfWeek = dt.getDayOfWeek().toString();\r\n    \/\/LogUtil.info(\&quot;DAY OF WEEK\&quot;, \&quot;\&quot; + dayOfWeek);\r\n    switch(dayOfWeek) {\r\n        case \&quot;SATURDAY\&quot;:{\r\n            return true;\r\n        }\r\n        case \&quot;SUNDAY\&quot;:{\r\n            return true;\r\n        }\r\n        default:{\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\npublic String calculateSLADuration(String dataInit, Collection holidays){\r\n    DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\&quot;dd\/MM\/yyyy HH:mm\&quot;);\r\n    DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern(\&quot;yyyy-MM-dd\&quot;);\r\n    String result=\&quot;\&quot;;\r\n    \/\/if Data Init date format is not \&quot;dd\/MM\/yyyy HH:mm\&quot;\r\n    if(dataInit.charAt(2) != &apos;\/&apos;){\r\n        \/\/if Data Init date format is of the format \&quot;yyyy-MM-dd HH:mm\&quot;\r\n        if(dataInit.charAt(4) == &apos;-&apos; &amp;&amp; dataInit.charAt(10) == &apos; &apos; &amp;&amp; dataInit.charAt(13) == &apos;:&apos;){\r\n            dataInit =  dataInit.substring(8,10) + \&quot;\/\&quot; + dataInit.substring(5,7) + \&quot;\/\&quot; + dataInit.substring(0,4) + \&quot; \&quot; + dataInit.substring(11,16);\r\n        }\r\n    }\r\n\r\n    LocalDateTime dateInit = LocalDateTime.parse(dataInit, formatter);\r\n    LocalDateTime dateNow = LocalDateTime.parse(\&quot;#date.dd\/MM\/yyyy HH:mm#\&quot;,formatter);\r\n    \r\n    LocalDate dateInitDays = dateInit.toLocalDate();\r\n    LocalDate dateNowDays = dateNow.toLocalDate();\r\n    long days = ChronoUnit.DAYS.between(dateInitDays, dateNowDays);\r\n    \r\n    int initHours = dateInit.getHour();\r\n    int nowHours = dateNow.getHour();\r\n    \r\n    if(initHours &gt; 12 &amp;&amp; nowHours &lt; 12){\r\n        days= days - 1;    \r\n    }else if(days&gt;0 &amp;&amp; initHours &lt; 12 &amp;&amp; nowHours &gt;= 12){\r\n        days = days + 1;\r\n    }\r\n    \r\n    long workDays = days;\r\n    \r\n    while(days&gt;0){\r\n        \r\n        if(holidays.contains(dateInit.format(dateFormatter))){\r\n            workDays-=1;\r\n            \r\n        }else{\r\n            String day = dateInit.getDayOfWeek().toString();\r\n        \r\n            switch(day) {\r\n                case \&quot;SATURDAY\&quot;:{\r\n                    workDays-=1;\r\n                    break;\r\n                }\r\n                case \&quot;SUNDAY\&quot;:{\r\n                    workDays-=1;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        \r\n\r\n        dateInit = dateInit.plusDays(1);\r\n  \r\n        days-=1;\r\n    }\r\n    \r\n    result = \&quot;D\&quot;;\r\n    if(workDays&gt;0){\r\n        result =result + \&quot;+\&quot; + workDays;\r\n    }\r\n    \r\n    \r\n    return result;\r\n}\r\n\r\n\r\npublic void updateFaseProcesso(){\r\n    Connection con = null;\r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\n    \r\n    try{\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\r\n        con = ds.getConnection();\r\n        \r\n        if(!con.isClosed()){\r\n            String operativa_anterior = \&quot;#variable.operativa_anterior#\&quot;;\r\n            String id_processo_anterior = \&quot;#variable.id_processo_anterior#\&quot;;\r\n            \r\n            \/\/Obter feriados\r\n            String queryGetHolidays = \&quot;SELECT * FROM app_fd_lista_feriados;\&quot;;\r\n            stmt = con.prepareStatement(queryGetHolidays);\r\n            rs = stmt.executeQuery();\r\n            Collection holidays = new ArrayList(); \r\n            \r\n            while(rs.next()){\r\n                holidays.add(rs.getObject(\&quot;c_data\&quot;));\r\n            }\r\n            \r\n            \r\n            \r\n            if(!operativa_anterior.equals(\&quot;FILTRO\&quot;) &amp;&amp; !operativa_anterior.trim().isEmpty()){\r\n                \/\/Obter data Inicial do SLA\r\n                String queryGetDateInitSla = \&quot;SELECT c_data_inicio FROM app_fd_sla_atividade WHERE  c_id_processo=? AND c_estado_atividade = &apos;Em curso&apos;;\&quot;;\r\n                stmt = con.prepareStatement(queryGetDateInitSla);\r\n                stmt.setObject(1, id_processo_anterior);\r\n                rs = stmt.executeQuery();\r\n                String dataInit =\&quot;\&quot;;\r\n                if(rs.next()){\r\n                    dataInit = rs.getObject(\&quot;c_data_inicio\&quot;).toString();\r\n                }\r\n                rs=null;\r\n                \/\/LogUtil.info(\&quot;AAAAAAAA\&quot;, \&quot;ID PROCESSO ANTERIOR\&quot; + id_processo_anterior);\r\n                \/\/LogUtil.info(\&quot;AAAAAAAA\&quot;, \&quot;DATA INIT\&quot; + dataInit);\r\n                \r\n                String slaDuration = calculateSLADuration(dataInit, holidays);\r\n                \/\/Atualizar o sla Em curso para Em espera\r\n                String queryReset= \&quot;UPDATE app_fd_sla_atividade SET c_estado_atividade = ?, c_data_conclusao=? , c_duracao = ? WHERE c_id_processo=? AND c_estado_atividade = &apos;Em curso&apos;;\&quot;; \r\n                stmt = con.prepareStatement(queryReset);\r\n                if(operativa_anterior.equals(\&quot;CONTRATACAO\&quot;)){\r\n                    stmt.setObject(1,\&quot;Em espera\&quot;);\r\n                }else{\r\n                    stmt.setObject(1,\&quot;Fechada\&quot;);\r\n                }\r\n                stmt.setObject(2,\&quot;#date.yyyy-MM-dd HH:mm#\&quot;);\r\n                stmt.setObject(3, slaDuration);\r\n                stmt.setObject(4, id_processo_anterior);\r\n                rs = stmt.executeQuery();\r\n                rs=null;\r\n                \r\n                 \/\/Obter detalhes da tarefa\r\n                String queryGetAssignment = \&quot;SELECT name FROM shkprocesses WHERE id=?;\&quot;;\r\n                String queryGetUserAssign = \&quot;SELECT resourceid FROM shkassignmentstable WHERE activityprocessid =?\&quot;;\r\n                String nomeAtividade = \&quot;\&quot;;\r\n                String utilizador = \&quot;\&quot;;\r\n                stmt = con.prepareStatement(queryGetAssignment);\r\n                stmt.setObject(1, ProcessID);\r\n                rs = stmt.executeQuery();\r\n                \r\n                if(rs.next()){\r\n                    nomeAtividade= rs.getObject(\&quot;name\&quot;).toString();\r\n                    rs=null;\r\n                }\r\n                \r\n                stmt = con.prepareStatement(queryGetUserAssign);\r\n                stmt.setObject(1, ProcessID);\r\n                rs = stmt.executeQuery();\r\n                \r\n                if(rs.next()){\r\n                    utilizador= rs.getObject(\&quot;resourceid\&quot;).toString();\r\n                    rs=null;\r\n                }\r\n                \r\n                \/\/Obter feriados\r\n                String queryGetHolidays = \&quot;SELECT * FROM app_fd_lista_feriados;\&quot;;\r\n                stmt = con.prepareStatement(queryGetHolidays);\r\n                rs = stmt.executeQuery();\r\n                Collection holidays = new ArrayList(); \r\n                \r\n                while(rs.next()){\r\n                    holidays.add(rs.getObject(\&quot;c_data\&quot;));\r\n                }\r\n                        \r\n                \/\/Obter Urgencia\r\n                String urgente = \&quot;\&quot;;\r\n                String recordId = \&quot;#process.recordId#\&quot;;\r\n                String queryGetUrgencia = \&quot;SELECT c_urgencia FROM app_fd_detalhe_processo WHERE c_id_processo = ?\&quot;;\r\n                stmt = con.prepareStatement(queryGetUrgencia);\r\n                stmt.setObject(1, recordId);\r\n                rs = stmt.executeQuery();\r\n                \r\n                if(rs.next()){\r\n                   urgente = rs.getObject(\&quot;c_urgencia\&quot;);\r\n                }\r\n                \r\n                \/\/Obter configurações de SLA consoante a operativa e urgencia\r\n                String paramOperativa = \&quot;FILTRO\&quot;;\r\n                String queryGetSLAConfig = \&quot;SELECT * FROM app_fd_valores_sla WHERE c_nome like ? \&quot;;\r\n                if(urgente.equals(\&quot;SIM\&quot;)){\r\n                    queryGetSLAConfig += \&quot;AND c_nome like &apos;%URGENTE&apos;\&quot;;\r\n                    paramOperativa += \&quot;%\&quot;;\r\n                }\r\n                \r\n                stmt = con.prepareStatement(queryGetSLAConfig);\r\n                stmt.setObject(1, paramOperativa);\r\n                rs = stmt.executeQuery();\r\n                String sla = \&quot;\&quot;; \r\n                if(rs.next()){\r\n                    sla = rs.getObject(\&quot;c_sla\&quot;);\r\n                }\r\n                \r\n                \r\n                String queryCreateSLA = \&quot;INSERT INTO app_fd_sla_atividade (id, dateCreated, dateModified, createdBy,createdByName ,modifiedBy, modifiedByName, c_data_inicio, c_data_fim, c_nome_atividade, c_id_processo, c_utilizador_atribuido, c_estado_atividade, c_duracao) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?);\&quot;;\r\n                stmt = con.prepareStatement(queryCreateSLA);\r\n                \r\n                var idSLA = UuidGenerator.getInstance().getUuid();\r\n                var dateNow =\&quot;#date.yyyy-MM-dd HH:mm#\&quot;;\r\n                var currentUsername = \&quot;#currentUser.username#\&quot;;\r\n                var currentNameUser = \&quot;#currentUser.firstName#\&quot; + \&quot;#currentUser.lastName#\&quot;;\r\n                String dataFim = calculateSLAD(dateNow, holidays, sla, urgente);\r\n                String duracao = \&quot;D\&quot;;\r\n                \/\/LogUtil.info(\&quot;AAAAAAAA\&quot;, \&quot;DATA FIM\&quot; + dataFim);\r\n                var estadoAtividade = \&quot;Em curso\&quot;;\r\n                stmt.setObject(1, idSLA);\r\n                stmt.setObject(2, dateNow);\r\n                stmt.setObject(3, dateNow);\r\n                stmt.setObject(4, currentUsername);\r\n                stmt.setObject(5, currentNameUser);\r\n                stmt.setObject(6, currentUsername);\r\n                stmt.setObject(7, currentNameUser);\r\n                stmt.setObject(8, dateNow);\r\n                stmt.setObject(9, dataFim);   \r\n                stmt.setObject(10, nomeAtividade);\r\n                stmt.setObject(11, ProcessID);\r\n                stmt.setObject(12, utilizador);\r\n                stmt.setObject(13, estadoAtividade);\r\n                stmt.setObject(14, duracao);\r\n    \r\n                rs = stmt.executeQuery();\r\n                \r\n            }\r\n            \/\/Atualizar fase do processo\r\n            String recordId = \&quot;#process.recordId#\&quot;;\r\n                if(recordId!=null){\r\n                    String updateFaseProcesso = \&quot;UPDATE app_fd_detalhe_processo SET c_fase_processo = ? WHERE c_id_processo = ?\&quot;;\r\n                    stmt = con.prepareStatement(updateFaseProcesso);\r\n                    stmt.setObject(1, \&quot;FLT\&quot;);\r\n                    stmt.setObject(2, recordId);\r\n                    rs = stmt.executeQuery();\r\n                }\r\n        }\r\n      \r\n    }catch(Exception e){\r\n                LogUtil.error(appDef.toString(), e, \&quot;Error getting info from DB\&quot;);\r\n            }finally{\r\n                try{\r\n                    if(rs != null){\r\n                    rs.close();\r\n                    }\r\n                    if(stmt != null){\r\n                        stmt.close();\r\n                    }\r\n                    if(con != null &amp;&amp; !con.isClosed()) {\r\n                        con.close();\r\n                    }\r\n                }catch(Exception e){\r\n                    LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\r\n                }\r\n                \r\n            }\r\n}\r\nupdateFaseProcesso();\r\nwm.processVariable(ProcessID, \&quot;operativa_anterior\&quot; , \&quot;FILTRO\&quot;);\r\nwm.processVariable(ProcessID, \&quot;id_processo_anterior\&quot; , ProcessID);\r\n&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoNormal::route1</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <activityDefId>route1</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellDecisionPlugin</pluginName>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::validacaoBancariaLegalBIC</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <activityDefId>validacaoBancariaLegalBIC</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;validacaoBancariaLegalBIC&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;&quot;,&quot;deptId&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;#i18n.msg_realocar#&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;&quot;,&quot;properties&quot;:{}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;true&quot;,&quot;showProcessName&quot;:&quot;&quot;,&quot;showFutureActivities&quot;:&quot;true&quot;,&quot;showSkippedActivities&quot;:&quot;&quot;,&quot;usernameFormat&quot;:&quot;name&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::emissaoMinutas</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <activityDefId>emissaoMinutas</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;emissaoMinutas&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;&quot;,&quot;deptId&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;#i18n.msg_realocar#&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;&quot;,&quot;properties&quot;:{}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;true&quot;,&quot;showProcessName&quot;:&quot;&quot;,&quot;showFutureActivities&quot;:&quot;true&quot;,&quot;showSkippedActivities&quot;:&quot;&quot;,&quot;usernameFormat&quot;:&quot;name&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHProducaoComplexo::processamentoManualMinuta</string>
               <packageActivityPlugin>
                  <processDefId>CHProducaoComplexo</processDefId>
                  <activityDefId>processamentoManualMinuta</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;processamentoManualMinuta&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;&quot;,&quot;deptId&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;#i18n.msg_realocar#&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;&quot;,&quot;properties&quot;:{}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;true&quot;,&quot;showProcessName&quot;:&quot;&quot;,&quot;showFutureActivities&quot;:&quot;&quot;,&quot;showSkippedActivities&quot;:&quot;&quot;,&quot;usernameFormat&quot;:&quot;name&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>HIPContratacao::filtro</string>
               <packageActivityPlugin>
                  <processDefId>HIPContratacao</processDefId>
                  <activityDefId>filtro</activityDefId>
                  <pluginName>org.joget.apps.app.lib.RulesDecisionPlugin</pluginName>
                  <pluginProperties>{&quot;rules&quot;:{&quot;ifrules&quot;:[{&quot;revert&quot;:false,&quot;andOr&quot;:&quot;or&quot;,&quot;conditions&quot;:[{&quot;revert&quot;:false,&quot;andOr&quot;:&quot;and&quot;,&quot;conditions&quot;:[{&quot;revert&quot;:false,&quot;variable&quot;:&quot;proxima_operativa&quot;,&quot;operation&quot;:&quot;==&quot;,&quot;value&quot;:&quot;filtro&quot;},{&quot;revert&quot;:false,&quot;variable&quot;:&quot;estado_filtro&quot;,&quot;operation&quot;:&quot;==&quot;,&quot;value&quot;:&quot;OK&quot;}]},{&quot;revert&quot;:false,&quot;andOr&quot;:&quot;or&quot;,&quot;conditions&quot;:[{&quot;revert&quot;:true,&quot;variable&quot;:&quot;proxima_operativa&quot;,&quot;operation&quot;:&quot;==&quot;,&quot;value&quot;:&quot;filtro&quot;}]}],&quot;actions&quot;:[{&quot;type&quot;:&quot;transition&quot;,&quot;name&quot;:&quot;transition15&quot;,&quot;value&quot;:&quot;&quot;}]}],&quot;else&quot;:[{&quot;type&quot;:&quot;transition&quot;,&quot;name&quot;:&quot;transition14&quot;,&quot;value&quot;:&quot;&quot;},{&quot;type&quot;:&quot;variable&quot;,&quot;name&quot;:&quot;estado&quot;,&quot;value&quot;:&quot;FT&quot;}]}}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoNormal::ultimaAtividadeMGCont</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <activityDefId>ultimaAtividadeMGCont</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;flag_ultima_atividade\&quot; , \&quot;1\&quot;);\r\n&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>diligencias::UpdateVariables</string>
               <packageActivityPlugin>
                  <processDefId>diligencias</processDefId>
                  <activityDefId>UpdateVariables</activityDefId>
                  <pluginName>org.joget.plugin.enterprise.FormDataUpdateTool</pluginName>
                  <pluginProperties>{&quot;formDefId&quot;:&quot;pedirEsclarecimento&quot;,&quot;fields&quot;:[{&quot;field&quot;:&quot;id_diligencia&quot;,&quot;value&quot;:&quot;#assignment.processId#&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHAcompanhamentoOutorgas::ConfigurarProcessoAO</string>
               <packageActivityPlugin>
                  <processDefId>CHAcompanhamentoOutorgas</processDefId>
                  <activityDefId>ConfigurarProcessoAO</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport javax.sql.DataSource;\r\nimport java.time.LocalDateTime; \r\nimport java.time.format.DateTimeFormatter;\r\nimport java.time.DayOfWeek;\r\nimport java.time.temporal.ChronoUnit;\r\nimport org.joget.commons.util.UuidGenerator;\r\nimport org.joget.directory.model.service.ExtDirectoryManager;\r\nimport org.joget.workflow.model.service.WorkflowManager;\r\nimport org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\n\r\nString processId = \&quot;#process.processId#\&quot;;\r\n\r\n\/\/Set the workflow variable\r\nExtDirectoryManager directoryManager = (ExtDirectoryManager) pluginManager.getBean(\&quot;directoryManager\&quot;);\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(processId, \&quot;flag_ultima_atividade\&quot; , \&quot;0\&quot;);\r\n\r\npublic void getEntidade() {\r\n    \/\/ [TO DO] Obter qual a entidade autenticadora do processo\r\n    \r\n    String usernameEntidade = \&quot;ao_entidade_teste\&quot;; \/\/ Alterar para ir buscar ao processo\r\n    wm.processVariable(processId, \&quot;nome_entidade\&quot;, usernameEntidade);\r\n    \r\n    \/\/\/\/\/\/\/\/ Obter valor de um campo no form -&gt; Para obter nome da entidade\r\n\r\n    \/\/String origemProcesso = #form.detalhe_processo.origem_processo[{form.processos.detalhe_processo[{process.recordId}]}]#;\r\n    \r\n    \/\/\/\/\/\/\/\r\n    \r\n    String entidadeDepId = AppUtil.processHashVariable(\&quot;#user.\&quot; + usernameEntidade + \&quot;.department.id#\&quot;, null, null, null);\r\n    String entidadeEmail = AppUtil.processHashVariable(\&quot;#user.\&quot; + usernameEntidade + \&quot;.email#\&quot;, null, null, null);\r\n    \r\n    wm.processVariable(processId, \&quot;email_entidade\&quot;, entidadeEmail);\r\n    \r\n    if (entidadeDepId.contains(\&quot;PL_EXT_ENT_A\&quot;)) {\r\n        \/\/Set the workflow variable\r\n        wm.processVariable(processId, \&quot;tipo_entidade\&quot;, \&quot;AUT\&quot;);\r\n    }\r\n    \r\n    if (entidadeDepId.contains(\&quot;PL_EXT_ENT_SA\&quot;)) {\r\n        \/\/Set the workflow variable\r\n        wm.processVariable(processId, \&quot;tipo_entidade\&quot;, \&quot;SEMI\&quot;);\r\n    }\r\n    \r\n    if (entidadeDepId.contains(\&quot;PL_EXT_ENT_NA\&quot;)) {\r\n        \/\/Set the workflow variable\r\n        wm.processVariable(processId, \&quot;tipo_entidade\&quot;, \&quot;NAUT\&quot;);\r\n    }\r\n}\r\n\r\npublic void updateFaseProcesso(){\r\n    Connection con = null;\r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\n    \r\n    PreparedStatement stmt_2 = null;\r\n    ResultSet rs_2 = null;\r\n    \r\n    try{\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\r\n        con = ds.getConnection();\r\n        \r\n        if(!con.isClosed()){\r\n            \r\n            \/\/Atualizar fase e subfase do processo\r\n            String recordId = \&quot;#process.recordId#\&quot;;\r\n            if(recordId!=null){\r\n                String updateFaseProcesso = \&quot;UPDATE app_fd_detalhe_processo SET c_fase_processo = ? WHERE c_id_processo = ?\&quot;;\r\n                stmt = con.prepareStatement(updateFaseProcesso);\r\n                stmt.setObject(1, \&quot;AO\&quot;);\r\n                stmt.setObject(2, recordId);\r\n                rs = stmt.executeQuery();\r\n                \r\n                String updateSubfaseProcesso = \&quot;UPDATE app_fd_detalhe_processo SET c_subfase_processo = ? WHERE c_id_processo = ?\&quot;;\r\n                stmt_2 = con.prepareStatement(updateSubfaseProcesso);\r\n                stmt_2.setObject(1, \&quot;Validação Inicial\&quot;);\r\n                stmt_2.setObject(2, recordId);\r\n                rs_2 = stmt_2.executeQuery();\r\n            }\r\n        }\r\n      \r\n    }catch(Exception e){\r\n        LogUtil.error(appDef.toString(), e, \&quot;Error getting info from DB\&quot;);\r\n    }finally{\r\n        try{\r\n            if(rs != null){\r\n                rs.close();\r\n            }\r\n            if(stmt != null){\r\n                stmt.close();\r\n            }\r\n            if(con != null &amp;&amp; !con.isClosed()) {\r\n                con.close();\r\n            }\r\n        }catch(Exception e){\r\n            LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\r\n        }\r\n    }\r\n}\r\n\r\ngetEntidade();\r\nupdateFaseProcesso();&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHFiltroComplexo::ultimaAtividadeFil</string>
               <packageActivityPlugin>
                  <processDefId>CHFiltroComplexo</processDefId>
                  <activityDefId>ultimaAtividadeFil</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;flag_ultima_atividade\&quot; , \&quot;1\&quot;);\r\n&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHProducaoComplexo::ConfigurarProcesso</string>
               <packageActivityPlugin>
                  <processDefId>CHProducaoComplexo</processDefId>
                  <activityDefId>ConfigurarProcesso</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport java.time.LocalDateTime; \r\nimport java.time.format.DateTimeFormatter;\r\nimport java.time.DayOfWeek;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport javax.sql.DataSource;\r\nimport org.joget.commons.util.UuidGenerator;\r\nimport java.time.temporal.ChronoUnit;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;flag_ultima_atividade\&quot; , \&quot;0\&quot;);\r\nwm.processVariable(ProcessID, \&quot;proxima_operativa\&quot; , \&quot;\&quot;);\r\n\r\n\r\n\r\n\/******************** SLA ****************************\/\r\n\r\npublic String calculateSLAD(String dataInicio, Collection feriados, String sla, String urgencia){\r\n    \r\n    DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\&quot;yyyy-MM-dd HH:mm\&quot;);\r\n    DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern(\&quot;yyyy-MM-dd\&quot;);\r\n    LocalDateTime dateInit = LocalDateTime.parse(dataInicio, formatter);  \r\n    LocalDateTime endDateTime = null;\r\n    String endDate = \&quot;\&quot;;\r\n    Collection holidays = feriados;\r\n    \r\n    \r\n    var hour = dateInit.getHour();\r\n    int slaNumber = Integer.parseInt(sla);\r\n    \r\n    if(urgencia.equals(\&quot;SIM\&quot;)){\r\n        \/\/Calcular SLA urgente\r\n        endDateTime = dateInit.plusHours(slaNumber);\r\n        \/\/Passar dias não uteis\r\n        while(isWeekend(endDateTime) || holidays.contains(endDateTime.format(dateFormatter))){\r\n           endDateTime = endDateTime.plusDays(1);\r\n        }\r\n        \r\n        endDate = endDateTime.format(formatter);\r\n        \r\n        \r\n     \r\n    }else{\r\n        \/\/Calcular SLA não urgente\r\n\r\n            if(hour &lt; 12){\r\n                endDateTime = dateInit.withHour(23).withMinute(59);   \/**   HORAS UTEIS???   **\/\r\n                \r\n                \/\/Incrementar dias consoante o SLA\r\n                while(slaNumber &gt; 1){\r\n                    endDateTime = endDateTime.plusDays(1);\r\n                    \/\/Passar dias não uteis\r\n                    while(isWeekend(endDateTime) || holidays.contains(endDateTime.format(dateFormatter))){\r\n                       endDateTime = endDateTime.plusDays(1);\r\n                    }   \r\n                    slaNumber -= 1;\r\n                }\r\n            }else{\r\n                endDateTime = dateInit.plusDays(1).withHour(12).withMinute(0);\r\n                \r\n                \/\/Incrementar dias consoante o SLA\r\n                while(slaNumber &gt; 1){\r\n                    endDateTime = endDateTime.plusDays(1);\r\n                    \/\/Passar dias não uteis\r\n                    while(isWeekend(endDateTime) || holidays.contains(endDateTime.format(dateFormatter))){\r\n                       endDateTime = endDateTime.plusDays(1);\r\n                    }\r\n                    slaNumber -= 1;\r\n                }\r\n            }\r\n            \r\n        endDate = endDateTime.format(formatter);\r\n    }\r\n    \r\n    return endDate;\r\n}\r\n\r\n\r\n\r\npublic boolean isWeekend(LocalDateTime dt) {\r\n    String dayOfWeek = dt.getDayOfWeek().toString();\r\n    \/\/LogUtil.info(\&quot;DAY OF WEEK\&quot;, \&quot;\&quot; + dayOfWeek);\r\n    switch(dayOfWeek) {\r\n        case \&quot;SATURDAY\&quot;:{\r\n            return true;\r\n        }\r\n        case \&quot;SUNDAY\&quot;:{\r\n            return true;\r\n        }\r\n        default:{\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\npublic String calculateSLADuration(String dataInit){\r\n    DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\&quot;dd\/MM\/yyyy HH:mm\&quot;);\r\n    String result=\&quot;\&quot;;\r\n    \/\/if Data Init date format is not \&quot;dd\/MM\/yyyy HH:mm\&quot;\r\n    if(dataInit.charAt(2) != &apos;\/&apos;){\r\n        \/\/if Data Init date format is of the format \&quot;yyyy-MM-dd HH:mm\&quot;\r\n        if(dataInit.charAt(4) == &apos;-&apos; &amp;&amp; dataInit.charAt(10) == &apos; &apos; &amp;&amp; dataInit.charAt(13) == &apos;:&apos;){\r\n            dataInit =  dataInit.substring(8,10) + \&quot;\/\&quot; + dataInit.substring(5,7) + \&quot;\/\&quot; + dataInit.substring(0,4) + \&quot; \&quot; + dataInit.substring(11,16);\r\n        }\r\n    }\r\n\r\n    LocalDateTime dateInit = LocalDateTime.parse(dataInit, formatter);\r\n    LocalDateTime dateNow = LocalDateTime.parse(\&quot;#date.dd\/MM\/yyyy HH:mm#\&quot;,formatter);\r\n    \r\n    long days = ChronoUnit.DAYS.between(dateInit, dateNow);\r\n    int initHours = dateInit.getHour();\r\n    int nowHours = dateNow.getHour();\r\n    \r\n    \r\n    if(initHours &gt; 12 &amp;&amp; nowHours &lt;= 12){\r\n        days-=1;    \r\n    }\r\n    \r\n    result =\&quot;D\&quot;;\r\n    if(days&gt;0){\r\n        result += \&quot;+\&quot;+days;\r\n    }\r\n    \r\n    \r\n    \r\n    return result;\r\n}\r\n\r\n\r\n\r\npublic void updateSLA(){\r\n    Connection con = null;\r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\n    \r\n    try{\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\r\n        con = ds.getConnection();\r\n        \r\n        if(!con.isClosed()){\r\n            String operativa_anterior = \&quot;#variable.operativa_anterior#\&quot;;\r\n            String id_processo_anterior = \&quot;#variable.id_processo_anterior#\&quot;;\r\n            \r\n            \r\n            if(!operativa_anterior.equals(\&quot;PRODUCAO\&quot;) &amp;&amp; !operativa_anterior.trim().isEmpty()){\r\n                \r\n                \/\/Obter data Inicial do SLA\r\n                String queryGetDateInitSla = \&quot;SELECT c_data_inicio FROM app_fd_sla_atividade WHERE  c_id_processo=? AND c_estado_atividade = &apos;Em curso&apos;;\&quot;;\r\n                stmt = con.prepareStatement(queryGetDateInitSla);\r\n                stmt.setObject(1, id_processo_anterior);\r\n                rs = stmt.executeQuery();\r\n                String dataInit =\&quot;\&quot;;\r\n                if(rs.next()){\r\n                    dataInit = rs.getObject(\&quot;c_data_inicio\&quot;).toString();\r\n                }\r\n                rs=null;\r\n                \r\n                String slaDuration = calculateSLADuration(dataInit);\r\n                \/\/Atualizar o sla Em curso para fechado\r\n                String queryReset= \&quot;UPDATE app_fd_sla_atividade SET c_estado_atividade = &apos;Fechada&apos;, c_data_conclusao=? , c_duracao = ? WHERE c_id_processo=? AND c_estado_atividade = &apos;Em curso&apos;;\&quot;; \r\n                stmt = con.prepareStatement(queryReset);\r\n                stmt.setObject(1,\&quot;#date.yyyy-MM-dd HH:mm#\&quot;);\r\n                stmt.setObject(2, slaDuration);\r\n                stmt.setObject(3, id_processo_anterior);\r\n                rs = stmt.executeQuery();\r\n                rs=null;\r\n                \r\n                \/\/Obter detalhes da tarefa\r\n                String queryGetAssignment = \&quot;SELECT name FROM shkprocesses WHERE id=?;\&quot;;\r\n                String queryGetUserAssign = \&quot;SELECT resourceid FROM shkassignmentstable WHERE activityprocessid =?\&quot;;\r\n                String nomeAtividade = \&quot;\&quot;;\r\n                String utilizador = \&quot;\&quot;;\r\n                stmt = con.prepareStatement(queryGetAssignment);\r\n                stmt.setObject(1, ProcessID);\r\n                rs = stmt.executeQuery();\r\n                \r\n                if(rs.next()){\r\n                    nomeAtividade= rs.getObject(\&quot;name\&quot;).toString();\r\n                    rs=null;\r\n                }\r\n                \r\n                stmt = con.prepareStatement(queryGetUserAssign);\r\n                stmt.setObject(1, ProcessID);\r\n                rs = stmt.executeQuery();\r\n                \r\n                if(rs.next()){\r\n                    utilizador= rs.getObject(\&quot;resourceid\&quot;).toString();\r\n                    rs=null;\r\n                }\r\n                \r\n                \/\/Obter feriados\r\n                        String queryGetHolidays = \&quot;SELECT * FROM app_fd_lista_feriados;\&quot;;\r\n                        stmt = con.prepareStatement(queryGetHolidays);\r\n                        rs = stmt.executeQuery();\r\n                        Collection holidays = new ArrayList(); \r\n                        \r\n                        while(rs.next()){\r\n                            holidays.add(rs.getObject(\&quot;c_data\&quot;));\r\n                        }\r\n                \r\n                \/\/Obter Urgencia\r\n                String urgente = \&quot;\&quot;;\r\n                String recordId = \&quot;#process.recordId#\&quot;;\r\n                String queryGetUrgencia = \&quot;SELECT c_urgencia FROM app_fd_detalhe_processo WHERE c_id_processo = ?\&quot;;\r\n                stmt = con.prepareStatement(queryGetUrgencia);\r\n                stmt.setObject(1, recordId);\r\n                rs = stmt.executeQuery();\r\n                \r\n                if(rs.next()){\r\n                   urgente = rs.getObject(\&quot;c_urgencia\&quot;);\r\n                }\r\n                \r\n                \/\/Obter configurações de SLA consoante a operativa e urgencia\r\n                String paramOperativa = \&quot;PRODUCAO\&quot;;\r\n                String queryGetSLAConfig = \&quot;SELECT * FROM app_fd_valores_sla WHERE c_nome like ? \&quot;;\r\n                if(urgente.equals(\&quot;SIM\&quot;)){\r\n                    queryGetSLAConfig += \&quot;AND c_nome like &apos;%URGENTE&apos;\&quot;;\r\n                    paramOperativa += \&quot;%\&quot;;\r\n                }\r\n                \r\n                stmt = con.prepareStatement(queryGetSLAConfig);\r\n                stmt.setObject(1, paramOperativa);\r\n                rs = stmt.executeQuery();\r\n                String sla = \&quot;\&quot;; \r\n                if(rs.next()){\r\n                    sla = rs.getObject(\&quot;c_sla\&quot;);\r\n                }\r\n                \r\n                \r\n                String queryCreateSLA = \&quot;INSERT INTO app_fd_sla_atividade (id, dateCreated, dateModified, createdBy,createdByName ,modifiedBy, modifiedByName, c_data_inicio, c_data_fim, c_nome_atividade, c_id_processo, c_utilizador_atribuido, c_estado_atividade, c_duracao) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?);\&quot;;\r\n                stmt = con.prepareStatement(queryCreateSLA);\r\n                \r\n                var idSLA = UuidGenerator.getInstance().getUuid();\r\n                var dateNow =\&quot;#date.yyyy-MM-dd HH:mm#\&quot;;\r\n                var currentUsername = \&quot;#currentUser.username#\&quot;;\r\n                var currentNameUser = \&quot;#currentUser.firstName#\&quot; + \&quot;#currentUser.lastName#\&quot;;\r\n                String dataFim = calculateSLAD(dateNow, holidays, sla, urgente);\r\n                String duracao = \&quot;D\&quot;;\r\n                \r\n                var estadoAtividade = \&quot;Em curso\&quot;;\r\n                stmt.setObject(1, idSLA);\r\n                stmt.setObject(2, dateNow);\r\n                stmt.setObject(3, dateNow);\r\n                stmt.setObject(4, currentUsername);\r\n                stmt.setObject(5, currentNameUser);\r\n                stmt.setObject(6, currentUsername);\r\n                stmt.setObject(7, currentNameUser);\r\n                stmt.setObject(8, dateNow);\r\n                stmt.setObject(9, dataFim);   \r\n                stmt.setObject(10, nomeAtividade);\r\n                stmt.setObject(11, ProcessID);\r\n                stmt.setObject(12, utilizador);\r\n                stmt.setObject(13, estadoAtividade);\r\n                stmt.setObject(14, duracao);\r\n    \r\n                rs = stmt.executeQuery();\r\n                 \r\n            }\r\n        }\r\n      \r\n    }catch(Exception e){\r\n                LogUtil.error(appDef.toString(), e, \&quot;Error getting info from DB\&quot;);\r\n            }finally{\r\n                try{\r\n                    if(rs != null){\r\n                    rs.close();\r\n                    }\r\n                    if(stmt != null){\r\n                        stmt.close();\r\n                    }\r\n                    if(con != null &amp;&amp; !con.isClosed()) {\r\n                        con.close();\r\n                    }\r\n                }catch(Exception e){\r\n                    LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\r\n                }\r\n                \r\n            }\r\n}\r\nupdateSLA();\r\nwm.processVariable(ProcessID, \&quot;operativa_anterior\&quot; , \&quot;PRODUCAO\&quot;);\r\nwm.processVariable(ProcessID, \&quot;id_processo_anterior\&quot; , ProcessID);&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoNormal::finalizarContratacao</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <activityDefId>finalizarContratacao</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;flag_contratacao\&quot; , \&quot;1\&quot;);\r\n&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHAcompanhamentoOutorgas::printActivityId</string>
               <packageActivityPlugin>
                  <processDefId>CHAcompanhamentoOutorgas</processDefId>
                  <activityDefId>printActivityId</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.commons.util.LogUtil;\n\n\/*\nString recordId = \&quot;#process.recordId#\&quot;;\nLogUtil.info(\&quot;TIAGOOOOOOOOOOOO\&quot;, \&quot;RecordId: \&quot; + recordId);\n\nString processId = \&quot;#process.processId#\&quot;;\nLogUtil.info(\&quot;TIAGOOOOOOOOOOOO\&quot;, \&quot;ProcessId: \&quot; + processId);\n\nString processDefId = \&quot;#process.processDefId#\&quot;;\nLogUtil.info(\&quot;TIAGOOOOOOOOOOOO\&quot;, \&quot;ProcessDefId: \&quot; + processDefId);\n\nString instanceId = \&quot;#process.activityInst.validacaoInicial.instanceId#\&quot;;\nLogUtil.info(\&quot;TIAGOOOOOOOOOOOO\&quot;, \&quot;InstanceId: \&quot; + instanceId);\n*\/&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>processoTesteAssync::tool1</string>
               <packageActivityPlugin>
                  <processDefId>processoTesteAssync</processDefId>
                  <activityDefId>tool1</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\n  \r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nString processId = \&quot;#assignment.processId#\&quot;;\r\nString[] id = processId.split(\&quot;_\&quot;); \r\nwm.activityVariable(workflowAssignment.getActivityId(),\&quot;id_processo\&quot;, id[0]);&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHProducaoComplexo::processamentoRobotMinuta</string>
               <packageActivityPlugin>
                  <processDefId>CHProducaoComplexo</processDefId>
                  <activityDefId>processamentoRobotMinuta</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;processamentoRobotMinuta&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;&quot;,&quot;deptId&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;#i18n.msg_realocar#&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;&quot;,&quot;properties&quot;:{}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;true&quot;,&quot;showProcessName&quot;:&quot;&quot;,&quot;showFutureActivities&quot;:&quot;&quot;,&quot;showSkippedActivities&quot;:&quot;&quot;,&quot;usernameFormat&quot;:&quot;name&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>alertasValidacao::check_alertas_alteracoes</string>
               <packageActivityPlugin>
                  <processDefId>alertasValidacao</processDefId>
                  <activityDefId>check_alertas_alteracoes</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.commons.util.LogUtil;\nimport org.joget.commons.util.StringUtil;\nimport org.joget.apps.app.model.AppDefinition;\nimport org.joget.apps.app.model.PackageActivityForm;\nimport org.joget.apps.app.service.AppUtil;\nimport org.joget.apps.app.service.AppService;\nimport org.joget.apps.form.model.FormData;\nimport org.joget.workflow.model.WorkflowAssignment;\nimport org.joget.workflow.model.service.WorkflowManager;\nimport org.joget.workflow.model.service.WorkflowUserManager;\nimport org.joget.workflow.model.WorkflowProcess;\nimport org.joget.workflow.model.WorkflowProcessResult;\nimport org.joget.plugin.base.ApplicationPlugin;\nimport org.joget.plugin.base.Plugin;\nimport org.joget.plugin.base.PluginManager;\nimport org.joget.plugin.property.model.PropertyEditable;\nimport org.joget.apps.form.model.FormRow;\nimport org.joget.apps.form.model.FormRowSet;\nimport org.joget.workflow.model.service.*;\n\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport javax.sql.DataSource;\nimport org.joget.commons.util.UuidGenerator;\n\nimport java.util.HashMap;\n\npublic void checkAlertaAlteracoes(){\n    AppService appService = (AppService) AppUtil.getApplicationContext().getBean(\&quot;appService\&quot;);\n    WorkflowManager workflowManager = (WorkflowManager) AppUtil.getApplicationContext().getBean(\&quot;workflowManager\&quot;);\n    AppDefinition appDef = AppUtil.getCurrentAppDefinition();\n    \n    Connection con = null;\n    PreparedStatement stmt = null;\n    ResultSet rs = null;\n    ResultSet rs2 = null;\n    String processId = null;\n    String banco = null;\n    String nWfPl = null;\n    String userAlerta = null;\n    String complexidade = null;\n    String faseProcesso = null;\n    String diligenciaId = null;\n    String idDetalhe = null;\n    String alertaGestor = null;\n    \n    try{\n        DataSource ds = (DataSource) AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\n        con = ds.getConnection();\n        \n        if(!con.isClosed()){\n            \/\/Para teste ir buscar os processos marcados com check hoje\n           \/\/ String queryGetAlertas = \&quot;SELECT p.id as &apos;IDProcesso&apos;,dp.c_alerta_gestor as &apos;AlertaGestor&apos; ,dp.c_fase_processo as &apos;FaseProcesso&apos;, dp.c_complex_processo as &apos;Complexidade&apos;, dp.c_n_wf_pl as &apos;NWFPL&apos;, dp.c_user_alerta as &apos;UserAlerta&apos;, dp.id as &apos;IdDetalhe&apos;, b.c_nome_banco as &apos;Banco&apos; FROM app_fd_processos p LEFT JOIN app_fd_detalhe_processo dp ON dp.id = p.c_detalhe_processo LEFT JOIN app_fd_banco b ON b.id = p.c_banco WHERE dp.c_data_alerta = DATE_ADD(CURDATE(), INTERVAL 2 DAY);\&quot;;                    \n\n\n\n\n\n            String queryGetAlertas = \&quot;SELECT p.id as &apos;IDProcesso&apos;,dp.c_alerta_gestor as &apos;AlertaGestor&apos; ,dp.c_fase_processo as &apos;FaseProcesso&apos;, dp.c_complex_processo as &apos;Complexidade&apos;, dp.c_n_wf_pl as &apos;NWFPL&apos;, dp.c_user_alerta as &apos;UserAlerta&apos;, dp.id as &apos;IdDetalhe&apos;, b.c_nome_banco as &apos;Banco&apos; FROM app_fd_processos p LEFT JOIN app_fd_detalhe_processo dp ON dp.id = p.c_detalhe_processo LEFT JOIN app_fd_banco b ON b.id = p.c_banco WHERE dp.c_data_alerta = CURDATE();\&quot;;\n            stmt = con.prepareStatement(queryGetAlertas);\n            rs = stmt.executeQuery();\n            \n            while(rs.next()){\n             \/\/Alerta Alterações\n             \n                alertaGestor = rs.getObject(\&quot;AlertaGestor\&quot;);\n                \n                \/\/Se o campo \&quot;Alerta para o Gestor\&quot; tiver checked\n              \n                if(alertaGestor.equals(\&quot;SIM\&quot;)){\n                    processId = rs.getObject(\&quot;IDProcesso\&quot;);\n                    idDetalhe = rs.getObject(\&quot;IdDetalhe\&quot;);\n                    banco = rs.getObject(\&quot;Banco\&quot;);\n                    nWfPl= rs.getObject(\&quot;NWFPL\&quot;);\n                    userAlerta = rs.getObject(\&quot;UserAlerta\&quot;);\n                    complexidade = rs.getObject(\&quot;Complexidade\&quot;);\n                    faseProcesso = rs.getObject(\&quot;FaseProcesso\&quot;);\n                    \n                    \n                    \n                    String equipaDest = \&quot;SISTEMA\&quot;;\n                    String equipaRem = \&quot;PL_INT_\&quot; + faseProcesso + \&quot;_\&quot; + banco + \&quot;_\&quot; + complexidade + \&quot;_CRH\&quot;;\n                    \n                    Map variables = new HashMap();\n                    variables.put(\&quot;equipa_destinataria\&quot;, equipaDest);\n                    variables.put(\&quot;gestor_remetente\&quot;, userAlerta);\n                    variables.put(\&quot;gestor_destinatario\&quot;, \&quot;SISTEMA\&quot;);\n                    variables.put(\&quot;equipa_remetente\&quot;,equipaRem );\n                    variables.put(\&quot;flag_alerta\&quot;,\&quot;1\&quot; );\n                    \n                    WorkflowProcess process = appService.getWorkflowProcessForApp(appDef.getAppId(), appDef.getVersion().toString(), \&quot;Diligências\&quot;);\n                    WorkflowProcessResult result = workflowManager.processStart(process.getId(), variables);\n                    diligenciaId = result.getProcess().getInstanceId();\n                    \n                    String queryGetActivity = \&quot;select ass.activityID as &apos;ActivityId&apos;, ass.ResourceID as &apos;ResourceId&apos;  from shkprocesses pro left join shkassignmentstable ass on pro.id = ass.ActivityProcessID where pro.id = ?;\&quot;;\n                    stmt = con.prepareStatement(queryGetActivity);\n                    stmt.setObject(1, diligenciaId);\n                    rs2 = stmt.executeQuery();\n                    \n                    if(rs2.next()){\n                        \/\/Avançar dilig~encia uma fase\n                        workflowManager.assignmentForceComplete(process.getId(), diligenciaId, rs2.getObject(\&quot;ActivityId\&quot;), rs2.getObject(\&quot;ResourceId\&quot;));\n                        \n                        \/\/Inserir registo de Diligência\n                        String assunto = \&quot;Alerta | Gestor | Processo - \&quot; + nWfPl;\n                        String mensagem = \&quot;Existe um alerta no processo \&quot; + nWfPl ;\n                        String insertQuery = \&quot;INSERT INTO app_fd_info_diligencia(id, c_id_processo, c_operativa_destinataria, c_equipa_destinataria, c_gestor_destinatario, c_operativa_remetente, c_equipa_remetente, c_gestor_remetente, c_assunto, c_tipo_diligencia, c_diligencia, c_urgencia, c_banco, c_complexidade, dateCreated) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE id = VALUES(id), c_id_processo = VALUES(c_id_processo), c_operativa_destinataria= VALUE(c_operativa_destinataria), c_equipa_destinataria = VALUES(c_equipa_destinataria), c_gestor_destinatario = VALUES(c_gestor_destinatario), c_operativa_remetente = VALUES(c_operativa_remetente), c_equipa_remetente = VALUES(c_equipa_remetente), c_gestor_remetente = VALUES(c_gestor_remetente), c_assunto = VALUES(c_assunto), c_tipo_diligencia = VALUES(c_tipo_diligencia), c_diligencia = VALUES(c_diligencia), c_urgencia = VALUES(c_urgencia), c_banco= VALUES(c_banco), c_complexidade= VALUES(c_complexidade), dateCreated= VALUES(dateCreated);\&quot;;\n                        stmt = con.prepareStatement(insertQuery);\n                        stmt.setObject(1, diligenciaId);\n                        stmt.setObject(2, processId);\n                        stmt.setObject(3, faseProcesso);\n                        stmt.setObject(4, equipaDest);\n                        stmt.setObject(5, \&quot;SISTEMA\&quot;);\n                        stmt.setObject(6, faseProcesso);\n                        stmt.setObject(7, equipaRem);\n                        stmt.setObject(8, userAlerta);\n                        stmt.setObject(9, assunto);\n                        stmt.setObject(10, \&quot;ALERTA\&quot;);\n                        stmt.setObject(11, mensagem);\n                        stmt.setObject(12, \&quot;SIM\&quot;);\n                        stmt.setObject(13, banco);\n                        stmt.setObject(14, complexidade);\n                        stmt.setObject(15, \&quot;#date.yyyy-MM-dd hh:mm:ss#\&quot;);\n                        stmt.executeQuery();\n                        \n                        LogUtil.info(\&quot;Alerta Gestor\&quot;, \&quot;Foi enviada uma diligência automática relativa ao processo \&quot; + processId);\n                        \/\/Reset na flag de Alerta\n                        String queryResetFlagAlerta = \&quot;UPDATE app_fd_detalhe_processo SET c_alerta_gestor = &apos;&apos;, c_user_alerta = &apos;&apos; WHERE id= ?\&quot;;\n                        stmt = con.prepareStatement(queryResetFlagAlerta);\n                        stmt.setObject(1, idDetalhe);\n                        stmt.executeQuery();\n                    }\n                }\n            }\n            \n        }\n    } catch(Exception e) {\n            LogUtil.error(\&quot;ALERTA ALTERAÇÕES- BeanShell Tool\&quot;, e, \&quot;Error loading user data in load binder\&quot;);\n    } finally{\n        try{\n            if(rs != null){\n                rs.close();\n            }\n            if(stmt != null){\n                stmt.close();\n            }\n            if(con != null &amp;&amp; !con.isClosed()) {\n                con.close();\n            }\n            }catch(Exception e){\n                LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\n            }\n        }\n    \n    \n    \n    \n    \n    \n    \n    \n    \n}\n\n\ncheckAlertaAlteracoes();&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHFiltroComplexo::analiseDocumental</string>
               <packageActivityPlugin>
                  <processDefId>CHFiltroComplexo</processDefId>
                  <activityDefId>analiseDocumental</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;analiseDocumental&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;&quot;,&quot;deptId&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;#i18n.msg_realocar#&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;&quot;,&quot;properties&quot;:{}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;true&quot;,&quot;showProcessName&quot;:&quot;&quot;,&quot;showFutureActivities&quot;:&quot;&quot;,&quot;showSkippedActivities&quot;:&quot;&quot;,&quot;usernameFormat&quot;:&quot;name&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHProducaoNormal::ultimaAtividadeProd</string>
               <packageActivityPlugin>
                  <processDefId>CHProducaoNormal</processDefId>
                  <activityDefId>ultimaAtividadeProd</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;flag_ultima_atividade\&quot; , \&quot;1\&quot;);\r\n&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHFiltroNormal::ultimaAtividadeFil</string>
               <packageActivityPlugin>
                  <processDefId>CHFiltroNormal</processDefId>
                  <activityDefId>ultimaAtividadeFil</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;flag_ultima_atividade\&quot; , \&quot;1\&quot;);\r\n&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>diligencias::fecha</string>
               <packageActivityPlugin>
                  <processDefId>diligencias</processDefId>
                  <activityDefId>fecha</activityDefId>
                  <pluginName>org.joget.apps.app.lib.RulesDecisionPlugin</pluginName>
                  <pluginProperties>{&quot;rules&quot;:{&quot;ifrules&quot;:[{&quot;revert&quot;:false,&quot;andOr&quot;:&quot;and&quot;,&quot;conditions&quot;:[{&quot;revert&quot;:false,&quot;variable&quot;:&quot;estado&quot;,&quot;operation&quot;:&quot;==&quot;,&quot;value&quot;:&quot;resolvido&quot;}],&quot;actions&quot;:[{&quot;type&quot;:&quot;transition&quot;,&quot;name&quot;:&quot;transition7&quot;,&quot;value&quot;:&quot;&quot;}]}],&quot;else&quot;:[{&quot;type&quot;:&quot;transition&quot;,&quot;name&quot;:&quot;transition4&quot;,&quot;value&quot;:&quot;&quot;}]}}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoNormal::validacaoDespacho</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <activityDefId>validacaoDespacho</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;validacaoDespacho&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;&quot;,&quot;deptId&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;#i18n.msg_realocar#&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;org.joget.apps.app.lib.BeanShellTool&quot;,&quot;properties&quot;:{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\nimport org.joget.commons.util.LogUtil;\nimport org.joget.apps.app.service.AppUtil;\n\n\nString assigneeId = \&quot;#process.activityInst.validacaoDespacho.assignmentUsers#\&quot;;\nString ProcessID = workflowAssignment.getProcessId();\n\n\nString instanceId = AppUtil.processHashVariable(\&quot;#process.activityInst.validacaoDespacho.instanceId[\&quot;+ProcessID+\&quot;]#\&quot;,null,null,null);\n\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\nwm.processVariable(ProcessID, \&quot;user_contratacao_mtg1\&quot; , assigneeId);\nwm.activityVariable(instanceId,\&quot;user_contratacao_mtg1\&quot;, assigneeId);\n&quot;}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;true&quot;,&quot;showProcessName&quot;:&quot;&quot;,&quot;showFutureActivities&quot;:&quot;true&quot;,&quot;showSkippedActivities&quot;:&quot;&quot;,&quot;usernameFormat&quot;:&quot;name&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::PreenchimentoProcessoBIC</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <activityDefId>PreenchimentoProcessoBIC</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;PreenchimentoProcessoBIC&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;&quot;,&quot;deptId&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;#i18n.msg_realocar#&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;&quot;,&quot;properties&quot;:{}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;true&quot;,&quot;showProcessName&quot;:&quot;&quot;,&quot;showFutureActivities&quot;:&quot;true&quot;,&quot;showSkippedActivities&quot;:&quot;&quot;,&quot;usernameFormat&quot;:&quot;name&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoNormal::emissaoCarta</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <activityDefId>emissaoCarta</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;emissaoCarta&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;&quot;,&quot;deptId&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;#i18n.msg_realocar#&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;org.joget.apps.app.lib.BeanShellTool&quot;,&quot;properties&quot;:{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\nimport org.joget.commons.util.LogUtil;\nimport org.joget.apps.app.service.AppUtil;\n\n\nString assigneeId = \&quot;#process.activityInst.emissaoCarta.assignmentUsers#\&quot;;\nString ProcessID = workflowAssignment.getProcessId();\n\n\nString instanceId = AppUtil.processHashVariable(\&quot;#process.activityInst.emissaoCarta.instanceId[\&quot;+ProcessID+\&quot;]#\&quot;,null,null,null);\n\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\nwm.processVariable(ProcessID, \&quot;user_contratacao_mtg1\&quot; , assigneeId);\nwm.activityVariable(instanceId,\&quot;user_contratacao_mtg1\&quot;, assigneeId);\n&quot;}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;true&quot;,&quot;showProcessName&quot;:&quot;&quot;,&quot;showFutureActivities&quot;:&quot;true&quot;,&quot;showSkippedActivities&quot;:&quot;&quot;,&quot;usernameFormat&quot;:&quot;name&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoNormal::PreenchimentoProcessoBIC</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <activityDefId>PreenchimentoProcessoBIC</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;PreenchimentoProcessoBIC&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;&quot;,&quot;deptId&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;#i18n.msg_realocar#&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;org.joget.apps.app.lib.BeanShellTool&quot;,&quot;properties&quot;:{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\nimport org.joget.commons.util.LogUtil;\nimport org.joget.apps.app.service.AppUtil;\n\n\nString assigneeId = \&quot;#process.activityInst.PreenchimentoProcessoBIC.assignmentUsers#\&quot;;\nString ProcessID = workflowAssignment.getProcessId();\n\n\nString instanceId = AppUtil.processHashVariable(\&quot;#process.activityInst.PreenchimentoProcessoBIC.instanceId[\&quot;+ProcessID+\&quot;]#\&quot;,null,null,null);\n\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\nwm.processVariable(ProcessID, \&quot;user_contratacao_bic\&quot; , assigneeId);\nwm.activityVariable(instanceId,\&quot;user_contratacao_bic\&quot;, assigneeId);\n&quot;}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;true&quot;,&quot;showProcessName&quot;:&quot;&quot;,&quot;showFutureActivities&quot;:&quot;true&quot;,&quot;showSkippedActivities&quot;:&quot;&quot;,&quot;usernameFormat&quot;:&quot;name&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHFiltroNormal::analiseDocumental</string>
               <packageActivityPlugin>
                  <processDefId>CHFiltroNormal</processDefId>
                  <activityDefId>analiseDocumental</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;analiseDocumental&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;&quot;,&quot;deptId&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;#i18n.msg_realocar#&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;&quot;,&quot;properties&quot;:{}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;true&quot;,&quot;showProcessName&quot;:&quot;&quot;,&quot;showFutureActivities&quot;:&quot;&quot;,&quot;showSkippedActivities&quot;:&quot;&quot;,&quot;usernameFormat&quot;:&quot;name&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>DSTDistrates::tool3</string>
               <packageActivityPlugin>
                  <processDefId>DSTDistrates</processDefId>
                  <activityDefId>tool3</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport javax.sql.DataSource;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;enviado_procuradoria\&quot; , \&quot;1\&quot;);&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>HIPProducao::ultimaAtividadeProd</string>
               <packageActivityPlugin>
                  <processDefId>HIPProducao</processDefId>
                  <activityDefId>ultimaAtividadeProd</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\n\r\n\/\/String ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\n\/\/WorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\n\/\/wm.processVariable(ProcessID, \&quot;flag_ultima_atividade\&quot; , \&quot;1\&quot;);&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>DSTDistrates::vaiProcuradoria</string>
               <packageActivityPlugin>
                  <processDefId>DSTDistrates</processDefId>
                  <activityDefId>vaiProcuradoria</activityDefId>
                  <pluginName>org.joget.apps.app.lib.RulesDecisionPlugin</pluginName>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHFiltroComplexo::ConfigurarProcesso</string>
               <packageActivityPlugin>
                  <processDefId>CHFiltroComplexo</processDefId>
                  <activityDefId>ConfigurarProcesso</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;flag_ultima_atividade\&quot; , \&quot;0\&quot;);\r\nwm.processVariable(ProcessID, \&quot;proxima_operativa\&quot; , \&quot;\&quot;);&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>PCDProcuradoria::processamento</string>
               <packageActivityPlugin>
                  <processDefId>PCDProcuradoria</processDefId>
                  <activityDefId>processamento</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;processamento&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;PL&quot;,&quot;deptId&quot;:&quot;PL_SIS_PROCU&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;ENVIAR PARA FILA COMUM&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;&quot;,&quot;properties&quot;:{}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;true&quot;,&quot;showProcessName&quot;:&quot;&quot;,&quot;showFutureActivities&quot;:&quot;true&quot;,&quot;showSkippedActivities&quot;:&quot;&quot;,&quot;usernameFormat&quot;:&quot;name&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoNormal::validacaoLegalNB</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <activityDefId>validacaoLegalNB</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;validacaoLegalNB&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;&quot;,&quot;deptId&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;#i18n.msg_realocar#&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;org.joget.apps.app.lib.BeanShellTool&quot;,&quot;properties&quot;:{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\nimport org.joget.commons.util.LogUtil;\nimport org.joget.apps.app.service.AppUtil;\n\n\nString assigneeId = \&quot;#process.activityInst.validacaoLegalNB.assignmentUsers#\&quot;;\nString ProcessID = workflowAssignment.getProcessId();\n\n\nString instanceId = AppUtil.processHashVariable(\&quot;#process.activityInst.validacaoLegalNB.instanceId[\&quot;+ProcessID+\&quot;]#\&quot;,null,null,null);\n\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\nwm.processVariable(ProcessID, \&quot;user_contratacao_nvb\&quot; , assigneeId);\nwm.activityVariable(instanceId,\&quot;user_contratacao_nvb\&quot;, assigneeId);\n&quot;}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;true&quot;,&quot;showProcessName&quot;:&quot;&quot;,&quot;showFutureActivities&quot;:&quot;true&quot;,&quot;showSkippedActivities&quot;:&quot;&quot;,&quot;usernameFormat&quot;:&quot;name&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHRegistos::preencherCamposValidacaoDeposito</string>
               <packageActivityPlugin>
                  <processDefId>CHRegistos</processDefId>
                  <activityDefId>preencherCamposValidacaoDeposito</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport java.time.LocalDateTime;\r\nimport java.time.LocalDate;\r\nimport java.time.format.DateTimeFormatter;\r\nimport java.time.DayOfWeek;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport javax.sql.DataSource;\r\nimport org.joget.commons.util.UuidGenerator;\r\nimport java.time.temporal.ChronoUnit;\r\n\r\npublic void updateCamposValidacaoDeposito(){\r\n    \r\n    Connection con = null;\r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\n    \r\n    try{\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\r\n        con = ds.getConnection();\r\n        \r\n        if(!con.isClosed()){\r\n            \r\n            \/\/Atualizar subfase do processo\r\n            String recordId = \&quot;#process.recordId#\&quot;;\r\n            if(recordId!=null){\r\n\r\n                String date = \&quot;#date.yyyy-MM-dd HH:mm:ss#\&quot;;\r\n                String user = \&quot;#currentUser.fullName#\&quot;;\r\n            \r\n                String updateDataValidacaoRegisto = \&quot;UPDATE app_fd_detalhe_processo SET c_data_de_validacao_deposito = ?, c_gestor_validacao_deposito = ? WHERE c_id_processo = ?\&quot;;\r\n                stmt = con.prepareStatement(updateDataValidacaoRegisto);\r\n                stmt.setObject(1, date);\r\n                stmt.setObject(2, user);\r\n                stmt.setObject(3, recordId);\r\n                rs = stmt.executeQuery();\r\n            }\r\n        }\r\n      \r\n    }catch(Exception e){\r\n                LogUtil.error(appDef.toString(), e, \&quot;Error getting info from DB\&quot;);\r\n            }finally{\r\n                try{\r\n                    if(rs != null){\r\n                    rs.close();\r\n                    }\r\n                    if(stmt != null){\r\n                        stmt.close();\r\n                    }\r\n                    if(con != null &amp;&amp; !con.isClosed()) {\r\n                        con.close();\r\n                    }\r\n                }catch(Exception e){\r\n                    LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\r\n                }\r\n                \r\n            }\r\n}\r\n\r\nupdateCamposValidacaoDeposito();&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHValidacaoComplexo::ConfigurarProcesso</string>
               <packageActivityPlugin>
                  <processDefId>CHValidacaoComplexo</processDefId>
                  <activityDefId>ConfigurarProcesso</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport java.time.LocalDateTime; \r\nimport java.time.format.DateTimeFormatter;\r\nimport java.time.DayOfWeek;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport javax.sql.DataSource;\r\nimport org.joget.commons.util.UuidGenerator;\r\nimport java.time.temporal.ChronoUnit;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;flag_ultima_atividade\&quot; , \&quot;0\&quot;);\r\nwm.processVariable(ProcessID, \&quot;proxima_operativa\&quot; , \&quot;\&quot;);\r\n\r\n\r\n\r\n\/******************** SLA ****************************\/\r\n\r\npublic String calculateSLAD(String dataInicio, Collection feriados, String sla, String urgencia){\r\n    \r\n    DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\&quot;yyyy-MM-dd HH:mm\&quot;);\r\n    DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern(\&quot;yyyy-MM-dd\&quot;);\r\n    LocalDateTime dateInit = LocalDateTime.parse(dataInicio, formatter);  \r\n    LocalDateTime endDateTime = null;\r\n    String endDate = \&quot;\&quot;;\r\n    Collection holidays = feriados;\r\n    \r\n    \r\n    var hour = dateInit.getHour();\r\n    int slaNumber = Integer.parseInt(sla);\r\n    \r\n    if(urgencia.equals(\&quot;SIM\&quot;)){\r\n        \/\/Calcular SLA urgente\r\n        endDateTime = dateInit.plusHours(slaNumber);\r\n        \/\/Passar dias não uteis\r\n        while(isWeekend(endDateTime) || holidays.contains(endDateTime.format(dateFormatter))){\r\n           endDateTime = endDateTime.plusDays(1);\r\n        }\r\n        \r\n        endDate = endDateTime.format(formatter);\r\n        \r\n        \r\n     \r\n    }else{\r\n        \/\/Calcular SLA não urgente\r\n\r\n            if(hour &lt; 12){\r\n                endDateTime = dateInit.withHour(23).withMinute(59);   \/**   HORAS UTEIS???   **\/\r\n                \r\n                \/\/Incrementar dias consoante o SLA\r\n                while(slaNumber &gt; 1){\r\n                    endDateTime = endDateTime.plusDays(1);\r\n                    \/\/Passar dias não uteis\r\n                    while(isWeekend(endDateTime) || holidays.contains(endDateTime.format(dateFormatter))){\r\n                       endDateTime = endDateTime.plusDays(1);\r\n                    }   \r\n                    slaNumber -= 1;\r\n                }\r\n            }else{\r\n                endDateTime = dateInit.plusDays(1).withHour(12).withMinute(0);\r\n                \r\n                \/\/Incrementar dias consoante o SLA\r\n                while(slaNumber &gt; 1){\r\n                    endDateTime = endDateTime.plusDays(1);\r\n                    \/\/Passar dias não uteis\r\n                    while(isWeekend(endDateTime) || holidays.contains(endDateTime.format(dateFormatter))){\r\n                       endDateTime = endDateTime.plusDays(1);\r\n                    }\r\n                    slaNumber -= 1;\r\n                }\r\n            }\r\n            \r\n        endDate = endDateTime.format(formatter);\r\n    }\r\n    \r\n    return endDate;\r\n}\r\n\r\npublic String calculateSLADuration(String dataInit){\r\n    DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\&quot;dd\/MM\/yyyy HH:mm\&quot;);\r\n    String result=\&quot;\&quot;;\r\n    \/\/if Data Init date format is not \&quot;dd\/MM\/yyyy HH:mm\&quot;\r\n    if(dataInit.charAt(2) != &apos;\/&apos;){\r\n        \/\/if Data Init date format is of the format \&quot;yyyy-MM-dd HH:mm\&quot;\r\n        if(dataInit.charAt(4) == &apos;-&apos; &amp;&amp; dataInit.charAt(10) == &apos; &apos; &amp;&amp; dataInit.charAt(13) == &apos;:&apos;){\r\n            dataInit =  dataInit.substring(8,10) + \&quot;\/\&quot; + dataInit.substring(5,7) + \&quot;\/\&quot; + dataInit.substring(0,4) + \&quot; \&quot; + dataInit.substring(11,16);\r\n        }\r\n    }\r\n\r\n    LocalDateTime dateInit = LocalDateTime.parse(dataInit, formatter);\r\n    LocalDateTime dateNow = LocalDateTime.parse(\&quot;#date.dd\/MM\/yyyy HH:mm#\&quot;,formatter);\r\n    \r\n    long days = ChronoUnit.DAYS.between(dateInit, dateNow);\r\n    int initHours = dateInit.getHour();\r\n    int nowHours = dateNow.getHour();\r\n    \r\n    \r\n    if(initHours &gt; 12 &amp;&amp; nowHours &lt;= 12){\r\n        days-=1;    \r\n    }\r\n    \r\n    result =\&quot;D\&quot;;\r\n    if(days&gt;0){\r\n        result += \&quot;+\&quot;+days;\r\n    }\r\n    \r\n    \r\n    \r\n    return result;\r\n}\r\n\r\npublic boolean isWeekend(LocalDateTime dt) {\r\n    String dayOfWeek = dt.getDayOfWeek().toString();\r\n    \/\/LogUtil.info(\&quot;DAY OF WEEK\&quot;, \&quot;\&quot; + dayOfWeek);\r\n    switch(dayOfWeek) {\r\n        case \&quot;SATURDAY\&quot;:{\r\n            return true;\r\n        }\r\n        case \&quot;SUNDAY\&quot;:{\r\n            return true;\r\n        }\r\n        default:{\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\npublic void updateSLA(){\r\n    Connection con = null;\r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\n    \r\n    try{\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\r\n        con = ds.getConnection();\r\n        \r\n        if(!con.isClosed()){\r\n            String operativa_anterior = \&quot;#variable.operativa_anterior#\&quot;;\r\n            String id_processo_anterior = \&quot;#variable.id_processo_anterior#\&quot;;\r\n            \r\n            \r\n            if(!operativa_anterior.equals(\&quot;VALIDACAO\&quot;) &amp;&amp; !operativa_anterior.trim().isEmpty()){\r\n                \r\n                \/\/Obter data Inicial do SLA\r\n                String queryGetDateInitSla = \&quot;SELECT c_data_inicio FROM app_fd_sla_atividade WHERE  c_id_processo=? AND c_estado_atividade = &apos;Em curso&apos;;\&quot;;\r\n                stmt = con.prepareStatement(queryGetDateInitSla);\r\n                stmt.setObject(1, id_processo_anterior);\r\n                rs = stmt.executeQuery();\r\n                String dataInit =\&quot;\&quot;;\r\n                if(rs.next()){\r\n                    dataInit = rs.getObject(\&quot;c_data_inicio\&quot;).toString();\r\n                }\r\n                rs=null;\r\n                \r\n                String slaDuration = calculateSLADuration(dataInit);\r\n                \/\/Atualizar o sla Em curso para fechado\r\n                String queryReset= \&quot;UPDATE app_fd_sla_atividade SET c_estado_atividade = &apos;Fechada&apos;, c_data_conclusao=? , c_duracao = ? WHERE c_id_processo=? AND c_estado_atividade = &apos;Em curso&apos;;\&quot;; \r\n                stmt = con.prepareStatement(queryReset);\r\n                stmt.setObject(1,\&quot;#date.yyyy-MM-dd HH:mm#\&quot;);\r\n                stmt.setObject(2, slaDuration);\r\n                stmt.setObject(3, id_processo_anterior);\r\n                rs = stmt.executeQuery();\r\n                rs=null;\r\n                \r\n                \/\/Obter detalhes da tarefa\r\n                String queryGetAssignment = \&quot;SELECT name FROM shkprocesses WHERE id=?;\&quot;;\r\n                String queryGetUserAssign = \&quot;SELECT resourceid FROM shkassignmentstable WHERE activityprocessid =?\&quot;;\r\n                String nomeAtividade = \&quot;\&quot;;\r\n                String utilizador = \&quot;\&quot;;\r\n                stmt = con.prepareStatement(queryGetAssignment);\r\n                stmt.setObject(1, ProcessID);\r\n                rs = stmt.executeQuery();\r\n                \r\n                if(rs.next()){\r\n                    nomeAtividade= rs.getObject(\&quot;name\&quot;).toString();\r\n                    rs=null;\r\n                }\r\n                \r\n                stmt = con.prepareStatement(queryGetUserAssign);\r\n                stmt.setObject(1, ProcessID);\r\n                rs = stmt.executeQuery();\r\n                \r\n                if(rs.next()){\r\n                    utilizador= rs.getObject(\&quot;resourceid\&quot;).toString();\r\n                    rs=null;\r\n                }\r\n                \r\n                \/\/Obter feriados\r\n                        String queryGetHolidays = \&quot;SELECT * FROM app_fd_lista_feriados;\&quot;;\r\n                        stmt = con.prepareStatement(queryGetHolidays);\r\n                        rs = stmt.executeQuery();\r\n                        Collection holidays = new ArrayList(); \r\n                        \r\n                        while(rs.next()){\r\n                            holidays.add(rs.getObject(\&quot;c_data\&quot;));\r\n                        }\r\n                        \r\n                \/\/Obter Urgencia\r\n                String urgente = \&quot;\&quot;;\r\n                String recordId = \&quot;#process.recordId#\&quot;;\r\n                String queryGetUrgencia = \&quot;SELECT c_urgencia FROM app_fd_detalhe_processo WHERE c_id_processo = ?\&quot;;\r\n                stmt = con.prepareStatement(queryGetUrgencia);\r\n                stmt.setObject(1, recordId);\r\n                rs = stmt.executeQuery();\r\n                \r\n                if(rs.next()){\r\n                   urgente = rs.getObject(\&quot;c_urgencia\&quot;);\r\n                }\r\n                \r\n                \/\/Obter configurações de SLA consoante a operativa e urgencia\r\n                String paramOperativa = \&quot;VALIDACAO\&quot;;\r\n                String queryGetSLAConfig = \&quot;SELECT * FROM app_fd_valores_sla WHERE c_nome like ? \&quot;;\r\n                if(urgente.equals(\&quot;SIM\&quot;)){\r\n                    queryGetSLAConfig += \&quot;AND c_nome like &apos;%URGENTE&apos;\&quot;;\r\n                    paramOperativa += \&quot;%\&quot;;\r\n                }\r\n                \r\n                stmt = con.prepareStatement(queryGetSLAConfig);\r\n                stmt.setObject(1, paramOperativa);\r\n                rs = stmt.executeQuery();\r\n                String sla = \&quot;\&quot;; \r\n                if(rs.next()){\r\n                    sla = rs.getObject(\&quot;c_sla\&quot;);\r\n                }        \r\n                \r\n                \r\n                \r\n                String queryCreateSLA = \&quot;INSERT INTO app_fd_sla_atividade (id, dateCreated, dateModified, createdBy,createdByName ,modifiedBy, modifiedByName, c_data_inicio, c_data_fim, c_nome_atividade, c_id_processo, c_utilizador_atribuido, c_estado_atividade, c_duracao) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?);\&quot;;\r\n                stmt = con.prepareStatement(queryCreateSLA);\r\n                \r\n                var idSLA = UuidGenerator.getInstance().getUuid();\r\n                var dateNow =\&quot;#date.yyyy-MM-dd HH:mm#\&quot;;\r\n                var currentUsername = \&quot;#currentUser.username#\&quot;;\r\n                var currentNameUser = \&quot;#currentUser.firstName#\&quot; + \&quot;#currentUser.lastName#\&quot;;\r\n                String dataFim = calculateSLAD(dateNow, holidays, sla, urgente);\r\n                String duracao = \&quot;D\&quot;;\r\n               \r\n                var estadoAtividade = \&quot;Em curso\&quot;;\r\n                stmt.setObject(1, idSLA);\r\n                stmt.setObject(2, dateNow);\r\n                stmt.setObject(3, dateNow);\r\n                stmt.setObject(4, currentUsername);\r\n                stmt.setObject(5, currentNameUser);\r\n                stmt.setObject(6, currentUsername);\r\n                stmt.setObject(7, currentNameUser);\r\n                stmt.setObject(8, dateNow);\r\n                stmt.setObject(9, dataFim);   \r\n                stmt.setObject(10, nomeAtividade);\r\n                stmt.setObject(11, ProcessID);\r\n                stmt.setObject(12, utilizador);\r\n                stmt.setObject(13, estadoAtividade);\r\n                stmt.setObject(14, duracao);\r\n    \r\n                rs = stmt.executeQuery();\r\n                 \r\n            }\r\n        }\r\n      \r\n    }catch(Exception e){\r\n                LogUtil.error(appDef.toString(), e, \&quot;Error getting info from DB\&quot;);\r\n            }finally{\r\n                try{\r\n                    if(rs != null){\r\n                    rs.close();\r\n                    }\r\n                    if(stmt != null){\r\n                        stmt.close();\r\n                    }\r\n                    if(con != null &amp;&amp; !con.isClosed()) {\r\n                        con.close();\r\n                    }\r\n                }catch(Exception e){\r\n                    LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\r\n                }\r\n                \r\n            }\r\n}\r\nupdateSLA();\r\nwm.processVariable(ProcessID, \&quot;operativa_anterior\&quot; , \&quot;VALIDACAO\&quot;);\r\nwm.processVariable(ProcessID, \&quot;id_processo_anterior\&quot; , ProcessID);&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoNormal::ultimaAtividadeBCPCont</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <activityDefId>ultimaAtividadeBCPCont</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;flag_ultima_atividade\&quot; , \&quot;1\&quot;);\r\n&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHRegistos::pagamentoRegisto</string>
               <packageActivityPlugin>
                  <processDefId>CHRegistos</processDefId>
                  <activityDefId>pagamentoRegisto</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;pagamentoRegisto&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;PL&quot;,&quot;deptId&quot;:&quot;PL_SIS_REG&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;REALOCAR&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;&quot;,&quot;properties&quot;:{}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHRegistos::configurarPagamentoDeposito</string>
               <packageActivityPlugin>
                  <processDefId>CHRegistos</processDefId>
                  <activityDefId>configurarPagamentoDeposito</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport java.time.LocalDateTime;\r\nimport java.time.LocalDate;\r\nimport java.time.format.DateTimeFormatter;\r\nimport java.time.DayOfWeek;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport javax.sql.DataSource;\r\nimport org.joget.commons.util.UuidGenerator;\r\nimport java.time.temporal.ChronoUnit;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;flag_ultima_atividade\&quot; , \&quot;2\&quot;);\r\n\r\npublic void updateFaseProcesso(){\r\n    Connection con = null;\r\n    \r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\n    \r\n    PreparedStatement stmt2 = null;\r\n    ResultSet rs2 = null;\r\n    \r\n    try{\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\r\n        con = ds.getConnection();\r\n        \r\n        if(!con.isClosed()){\r\n            \r\n            \/\/Atualizar subfase do processo\r\n            String recordId = \&quot;#process.recordId#\&quot;;\r\n            if(recordId!=null){\r\n                String updateSubfaseProcesso = \&quot;UPDATE app_fd_detalhe_processo SET c_subfase_processo = ? WHERE c_id_processo = ?\&quot;;\r\n                stmt = con.prepareStatement(updateSubfaseProcesso);\r\n                stmt.setObject(1, \&quot;Pagamento do Depósito\&quot;);\r\n                stmt.setObject(2, recordId);\r\n                rs = stmt.executeQuery();\r\n                \r\n                String date = \&quot;#date.yyyy-MM-dd HH:mm:ss#\&quot;;\r\n                String user = \&quot;#currentUser.fullName#\&quot;;\r\n                \r\n                String updateDataDeposito = \&quot;UPDATE app_fd_detalhe_processo SET c_data_de_deposito = ?, c_gestor_deposito = ? WHERE c_id_processo = ?\&quot;;\r\n                stmt2 = con.prepareStatement(updateDataDeposito);\r\n                stmt2.setObject(1, date);\r\n                stmt2.setObject(2, user);\r\n                stmt2.setObject(3, recordId);\r\n                rs2 = stmt2.executeQuery();\r\n            }\r\n        }\r\n      \r\n    }catch(Exception e){\r\n                LogUtil.error(appDef.toString(), e, \&quot;Error getting info from DB\&quot;);\r\n            }finally{\r\n                try{\r\n                    if(rs != null){\r\n                    rs.close();\r\n                    }\r\n                    if(stmt != null){\r\n                        stmt.close();\r\n                    }\r\n                    if(con != null &amp;&amp; !con.isClosed()) {\r\n                        con.close();\r\n                    }\r\n                }catch(Exception e){\r\n                    LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\r\n                }\r\n                \r\n            }\r\n}\r\n\r\nupdateFaseProcesso();&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHProducaoNormal::processamentoRobotMinuta</string>
               <packageActivityPlugin>
                  <processDefId>CHProducaoNormal</processDefId>
                  <activityDefId>processamentoRobotMinuta</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;processamentoRobotMinuta&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;&quot;,&quot;deptId&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;#i18n.msg_realocar#&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;&quot;,&quot;properties&quot;:{}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHRegistos::ultimaAtividadeRegisto</string>
               <packageActivityPlugin>
                  <processDefId>CHRegistos</processDefId>
                  <activityDefId>ultimaAtividadeRegisto</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport java.time.LocalDateTime; \r\nimport java.time.format.DateTimeFormatter;\r\nimport java.time.DayOfWeek;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport javax.sql.DataSource;\r\nimport org.joget.commons.util.UuidGenerator;\r\nimport java.time.temporal.ChronoUnit;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;flag_ultima_atividade\&quot; , \&quot;7\&quot;);\r\n\r\npublic void updateFaseProcesso(){\r\n    Connection con = null;\r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\n    \r\n    try{\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\r\n        con = ds.getConnection();\r\n        \r\n        if(!con.isClosed()){\r\n            \r\n            \/\/Atualizar subfase do processo\r\n            String recordId = \&quot;#process.recordId#\&quot;;\r\n            if(recordId!=null){\r\n                String updateSubfaseProcesso = \&quot;UPDATE app_fd_detalhe_processo SET c_subfase_processo = ? WHERE c_id_processo = ?\&quot;;\r\n                stmt = con.prepareStatement(updateSubfaseProcesso);\r\n                stmt.setObject(1, \&quot;Qualidade\&quot;);\r\n                stmt.setObject(2, recordId);\r\n                rs = stmt.executeQuery();\r\n            }\r\n        }\r\n      \r\n    }catch(Exception e){\r\n                LogUtil.error(appDef.toString(), e, \&quot;Error getting info from DB\&quot;);\r\n            }finally{\r\n                try{\r\n                    if(rs != null){\r\n                    rs.close();\r\n                    }\r\n                    if(stmt != null){\r\n                        stmt.close();\r\n                    }\r\n                    if(con != null &amp;&amp; !con.isClosed()) {\r\n                        con.close();\r\n                    }\r\n                }catch(Exception e){\r\n                    LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\r\n                }\r\n                \r\n            }\r\n}\r\n\r\nupdateFaseProcesso();&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::ultimaAtividadeBCPCont</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <activityDefId>ultimaAtividadeBCPCont</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;flag_ultima_atividade\&quot; , \&quot;1\&quot;);\r\n&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHValidacaoNormal::validacaoContratoDocumentacao</string>
               <packageActivityPlugin>
                  <processDefId>CHValidacaoNormal</processDefId>
                  <activityDefId>validacaoContratoDocumentacao</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;validacaoContratoDocumentacao&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;&quot;,&quot;deptId&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;#i18n.msg_realocar#&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;&quot;,&quot;properties&quot;:{}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;true&quot;,&quot;showProcessName&quot;:&quot;&quot;,&quot;showFutureActivities&quot;:&quot;&quot;,&quot;showSkippedActivities&quot;:&quot;&quot;,&quot;usernameFormat&quot;:&quot;name&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHRegistos::ConfigurarProcessoRegistos</string>
               <packageActivityPlugin>
                  <processDefId>CHRegistos</processDefId>
                  <activityDefId>ConfigurarProcessoRegistos</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport java.time.LocalDateTime; \r\nimport java.time.format.DateTimeFormatter;\r\nimport java.time.DayOfWeek;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport javax.sql.DataSource;\r\nimport org.joget.commons.util.UuidGenerator;\r\nimport java.time.temporal.ChronoUnit;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;proxima_operativa\&quot; , \&quot;\&quot;);\r\n\r\npublic void updateFaseProcesso(){\r\n    Connection con = null;\r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\n    \r\n    try{\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\r\n        con = ds.getConnection();\r\n        \r\n        if(!con.isClosed()){\r\n            \r\n            \/\/Atualizar fase e subfase do processo\r\n            String recordId = \&quot;#process.recordId#\&quot;;\r\n            if(recordId!=null){\r\n                String updateFaseProcesso = \&quot;UPDATE app_fd_detalhe_processo SET c_fase_processo = ? WHERE c_id_processo = ?\&quot;;\r\n                stmt = con.prepareStatement(updateFaseProcesso);\r\n                stmt.setObject(1, \&quot;REG\&quot;);\r\n                stmt.setObject(2, recordId);\r\n                rs = stmt.executeQuery();\r\n            }\r\n        }\r\n      \r\n    }catch(Exception e){\r\n                LogUtil.error(appDef.toString(), e, \&quot;Error getting info from DB\&quot;);\r\n            }finally{\r\n                try{\r\n                    if(rs != null){\r\n                    rs.close();\r\n                    }\r\n                    if(stmt != null){\r\n                        stmt.close();\r\n                    }\r\n                    if(con != null &amp;&amp; !con.isClosed()) {\r\n                        con.close();\r\n                    }\r\n                }catch(Exception e){\r\n                    LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\r\n                }\r\n                \r\n            }\r\n}\r\n\r\nupdateFaseProcesso();&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::validacaoBancariaNB</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <activityDefId>validacaoBancariaNB</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;validacaoBancariaNB&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;&quot;,&quot;deptId&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;#i18n.msg_realocar#&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;&quot;,&quot;properties&quot;:{}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;true&quot;,&quot;showProcessName&quot;:&quot;&quot;,&quot;showFutureActivities&quot;:&quot;true&quot;,&quot;showSkippedActivities&quot;:&quot;&quot;,&quot;usernameFormat&quot;:&quot;name&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::finalizarContratacao</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <activityDefId>finalizarContratacao</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;flag_contratacao\&quot; , \&quot;1\&quot;);\r\n&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::validacaoMinutas</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <activityDefId>validacaoMinutas</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;validacaoMinutas&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;&quot;,&quot;deptId&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;#i18n.msg_realocar#&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;&quot;,&quot;properties&quot;:{}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;true&quot;,&quot;showProcessName&quot;:&quot;&quot;,&quot;showFutureActivities&quot;:&quot;true&quot;,&quot;showSkippedActivities&quot;:&quot;&quot;,&quot;usernameFormat&quot;:&quot;name&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoNormal::PreenchimentoProcessoABA</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <activityDefId>PreenchimentoProcessoABA</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;PreenchimentoProcessoABA&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;&quot;,&quot;deptId&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;#i18n.msg_realocar#&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;org.joget.apps.app.lib.BeanShellTool&quot;,&quot;properties&quot;:{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\nimport org.joget.commons.util.LogUtil;\nimport org.joget.apps.app.service.AppUtil;\n\n\nString assigneeId = \&quot;#process.activityInst.PreenchimentoProcessoABA.assignmentUsers#\&quot;;\nString ProcessID = workflowAssignment.getProcessId();\n\n\nString instanceId = AppUtil.processHashVariable(\&quot;#process.activityInst.PreenchimentoProcessoABA.instanceId[\&quot;+ProcessID+\&quot;]#\&quot;,null,null,null);\n\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\nwm.processVariable(ProcessID, \&quot;user_contratacao_abn\&quot; , assigneeId);\nwm.activityVariable(instanceId,\&quot;user_contratacao_abn\&quot;, assigneeId);\n&quot;}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;true&quot;,&quot;showProcessName&quot;:&quot;&quot;,&quot;showFutureActivities&quot;:&quot;true&quot;,&quot;showSkippedActivities&quot;:&quot;&quot;,&quot;usernameFormat&quot;:&quot;name&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoNormal::ultimaAtividadeNBCont</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <activityDefId>ultimaAtividadeNBCont</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;flag_ultima_atividade\&quot; , \&quot;1\&quot;);\r\n&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHValidacaoNormal::ultimaAtividadeVal</string>
               <packageActivityPlugin>
                  <processDefId>CHValidacaoNormal</processDefId>
                  <activityDefId>ultimaAtividadeVal</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;flag_ultima_atividade\&quot; , \&quot;1\&quot;);\r\n&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CreditoHabitacao::tool1</string>
               <packageActivityPlugin>
                  <processDefId>CreditoHabitacao</processDefId>
                  <activityDefId>tool1</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport javax.sql.DataSource;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\npublic void resetFlagAlteracoes(){\r\n    Connection con = null;\r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\n    \r\n    try{\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\r\n        con = ds.getConnection();\r\n        \r\n        if(!con.isClosed()){\r\n            String recordId = \&quot;#process.recordId#\&quot;;\r\n            String queryResetFlagAlteracoes = \&quot;Update app_fd_processos SET c_flag_alteracoes = &apos;NAO&apos;, c_flag_validacao = &apos;1&apos; WHERE id = ?\&quot;;\r\n            stmt = con.prepareStatement(queryResetFlagAlteracoes);\r\n            stmt.setObject(1, recordId);\r\n            rs = stmt.executeQuery();\r\n        }\r\n        \r\n        \r\n    }catch(Exception e){\r\n        LogUtil.error(appDef.toString(), e, \&quot;Error getting info from DB\&quot;);\r\n    }finally{\r\n        try{\r\n            if(rs != null){\r\n            rs.close();\r\n            }\r\n            if(stmt != null){\r\n                stmt.close();\r\n            }\r\n            if(con != null &amp;&amp; !con.isClosed()) {\r\n                con.close();\r\n            }\r\n        }catch(Exception e){\r\n            LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\r\n        }\r\n        \r\n    }\r\n    \r\n    \r\n}\r\n\r\nresetFlagAlteracoes();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;flag_validacao\&quot; , \&quot;1\&quot;);\r\n&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoNormal::PreenchimentoProcessoNB</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <activityDefId>PreenchimentoProcessoNB</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;PreenchimentoProcessoNB&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;&quot;,&quot;deptId&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;#i18n.msg_realocar#&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;org.joget.apps.app.lib.BeanShellTool&quot;,&quot;properties&quot;:{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\nimport org.joget.commons.util.LogUtil;\nimport org.joget.apps.app.service.AppUtil;\n\n\nString assigneeId = \&quot;#process.activityInst.PreenchimentoProcessoNB.assignmentUsers#\&quot;;\nString ProcessID = workflowAssignment.getProcessId();\n\n\nString instanceId = AppUtil.processHashVariable(\&quot;#process.activityInst.PreenchimentoProcessoNB.instanceId[\&quot;+ProcessID+\&quot;]#\&quot;,null,null,null);\n\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\nwm.processVariable(ProcessID, \&quot;user_contratacao_nvb\&quot; , assigneeId);\nwm.activityVariable(instanceId,\&quot;user_contratacao_nvb\&quot;, assigneeId);\n&quot;}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;true&quot;,&quot;showProcessName&quot;:&quot;&quot;,&quot;showFutureActivities&quot;:&quot;true&quot;,&quot;showSkippedActivities&quot;:&quot;&quot;,&quot;usernameFormat&quot;:&quot;name&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>DISTdistribuicaoProcessosMTG::distribuicaoProcessos</string>
               <packageActivityPlugin>
                  <processDefId>DISTdistribuicaoProcessosMTG</processDefId>
                  <activityDefId>distribuicaoProcessos</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.WorkflowManager;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport org.joget.workflow.model.service.WorkflowUserManager;\r\nimport org.joget.apps.app.model.AppDefinition;\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.datalist.model.DataListBinderDefaultimport;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport javax.sql.DataSource;\r\n\r\nString idProcesso=\&quot;\&quot;;\r\nString aid = \&quot;\&quot;;\r\nString resourceId = \&quot;\&quot;;\r\n\r\n    Connection con = null;\r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\n    \r\n    PreparedStatement stmt_1 = null;\r\n    ResultSet rs_1 = null;\r\n    \r\n    try{\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\r\n        con = ds.getConnection();\r\n        \r\n        if(!con.isClosed()){\r\n                String queryGetAid = \&quot;SELECT p.id as &apos;idDist&apos; FROM shkprocesses sp LEFT JOIN shkprocesses sp2 on sp.ActivityRequesterProcessId = sp2.Id LEFT JOIN app_fd_processos_distrates p on sp.ActivityRequesterProcessId = p.id LEFT JOIN shkprocessstates sps ON sps.oid = sp.State LEFT JOIN SHKActivities sact ON sact.ProcessId = sp.Id LEFT JOIN SHKActivityStates ssta ON ssta.oid = sact.State LEFT JOIN (select ActivityId, group_concat(ResourceId separator &apos;; &apos;) as ResourceId from SHKAssignmentsTable group by ActivityId) sass on sact.Id = sass.ActivityId WHERE sps.KeyValue LIKE &apos;open.running&apos; AND p.id is not null AND (ssta.oid = &apos;1000001&apos; OR ssta.oid = &apos;1000003&apos; OR ssta.oid = &apos;1000005&apos;) AND sp.id like &apos;%DSTDistrates%&apos; AND sass.ResourceId LIKE &apos;%distrates_geral_mtg%&apos;\&quot;;\r\n        \t\tstmt = con.prepareStatement(queryGetAid);\r\n        \t\trs = stmt.executeQuery();\r\n    \t\t\r\n    \t\tif(rs.next()){\r\n    \t\t\tidProcesso = rs.getObject(\&quot;idDist\&quot;);\r\n    \t\t}\r\n            \r\n            if(idProcesso != null){\r\n                String queryGetAid_1 = \&quot;SELECT a.id as &apos;Aid&apos;, sass.ResourceId as &apos;ResourceId&apos; FROM shkprocesses p LEFT JOIN shkactivities a ON p.id = ProcessId LEFT JOIN shkprocessstates ps ON ps.oid = p.State LEFT JOIN SHKActivityStates acs ON acs.oid = a.State LEFT JOIN shkassignmentstable sass ON sass.ActivityId = a.id WHERE p.ActivityRequesterProcessId = ? AND ps.KeyValue LIKE &apos;open.running&apos; AND (acs.KeyValue LIKE &apos;open.not_running.not_started&apos; OR acs.KeyValue LIKE &apos;open.running&apos;)\&quot;;\r\n                stmt_1 = con.prepareStatement(queryGetAid_1);\r\n                stmt_1.setObject(1, idProcesso);\r\n                rs_1 = stmt_1.executeQuery();\r\n            \r\n                if(rs_1.next()){\r\n                    aid = rs_1.getObject(\&quot;Aid\&quot;);\r\n                    resourceId = rs_1.getObject(\&quot;ResourceId\&quot;);\r\n                    \r\n                    WorkflowManager wm = (WorkflowManager) AppUtil.getApplicationContext().getBean(\&quot;workflowManager\&quot;);\r\n                    WorkflowUserManager wum = (WorkflowUserManager) AppUtil.getApplicationContext().getBean(\&quot;workflowUserManager\&quot;);\r\n                    \r\n                    \/\/get the values from the \r\n                    String replaceUser = resourceId;\r\n                    String username = \&quot;#currentUser.username#\&quot;;\r\n                \r\n                \r\n                    \/\/getCurrentThreadUser() Method used by system to get current thread user\r\n                    String currentUser = wum.getCurrentThreadUser();\r\n                    wum.setCurrentThreadUser(replaceUser);\r\n                    wum.setCurrentThreadUser(currentUser);\r\n                    \r\n                    \/\/Reassigns the assignment from a user (replaceUser) to another user (username)\r\n                    wm.assignmentReassign(\&quot;\&quot;, \&quot;\&quot;, aid, username, replaceUser);\r\n                    \r\n                }\r\n            }\r\n            \r\n        }\r\n            \r\n    }catch(Exception e){\r\n            LogUtil.error(appDef.toString(), e, \&quot;Error getting info from DB\&quot;);\r\n    }finally{\r\n        try{\r\n            if(rs != null){\r\n            rs.close();\r\n            }\r\n            if(stmt != null){\r\n                stmt.close();\r\n            }\r\n            if(con != null &amp;&amp; !con.isClosed()) {\r\n                con.close();\r\n            }\r\n        }catch(Exception e){\r\n            LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\r\n        }\r\n        \r\n    }&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::validacaoBancariaLegalBST</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <activityDefId>validacaoBancariaLegalBST</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;validacaoBancariaLegalBST&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;&quot;,&quot;deptId&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;#i18n.msg_realocar#&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;&quot;,&quot;properties&quot;:{}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;true&quot;,&quot;showProcessName&quot;:&quot;&quot;,&quot;showFutureActivities&quot;:&quot;true&quot;,&quot;showSkippedActivities&quot;:&quot;&quot;,&quot;usernameFormat&quot;:&quot;name&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>DSTDistrates::ConfigurarProcessoDIST</string>
               <packageActivityPlugin>
                  <processDefId>DSTDistrates</processDefId>
                  <activityDefId>ConfigurarProcessoDIST</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>DISTdistribuicaoProcessosMTG2::distribuicaoProcessos</string>
               <packageActivityPlugin>
                  <processDefId>DISTdistribuicaoProcessosMTG2</processDefId>
                  <activityDefId>distribuicaoProcessos</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.WorkflowManager;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport org.joget.workflow.model.service.WorkflowUserManager;\r\nimport org.joget.apps.app.model.AppDefinition;\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.datalist.model.DataListBinderDefaultimport;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport javax.sql.DataSource;\r\n\r\nString idProcesso=\&quot;\&quot;;\r\nString aid = \&quot;\&quot;;\r\nString resourceId = \&quot;\&quot;;\r\n\r\n    Connection con = null;\r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\n    \r\n    PreparedStatement stmt_1 = null;\r\n    ResultSet rs_1 = null;\r\n    \r\n    try{\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\r\n        con = ds.getConnection();\r\n        \r\n        if(!con.isClosed()){\r\n                String queryGetAid = \&quot;SELECT p.id as &apos;idDist&apos; FROM shkprocesses sp LEFT JOIN shkprocesses sp2 on sp.ActivityRequesterProcessId = sp2.Id LEFT JOIN app_fd_processos_distrates p on sp.ActivityRequesterProcessId = p.id LEFT JOIN shkprocessstates sps ON sps.oid = sp.State LEFT JOIN SHKActivities sact ON sact.ProcessId = sp.Id LEFT JOIN SHKActivityStates ssta ON ssta.oid = sact.State LEFT JOIN (select ActivityId, group_concat(ResourceId separator &apos;; &apos;) as ResourceId from SHKAssignmentsTable group by ActivityId) sass on sact.Id = sass.ActivityId WHERE sps.KeyValue LIKE &apos;open.running&apos; AND p.id is not null AND (ssta.oid = &apos;1000001&apos; OR ssta.oid = &apos;1000003&apos; OR ssta.oid = &apos;1000005&apos;) AND sp.id like &apos;%DSTDistrates%&apos; AND sass.ResourceId LIKE &apos;%distrates_geral_mtg%&apos;\&quot;;\r\n        \t\tstmt = con.prepareStatement(queryGetAid);\r\n        \t\trs = stmt.executeQuery();\r\n    \t\t\r\n    \t\tif(rs.next()){\r\n    \t\t\tidProcesso = rs.getObject(\&quot;idDist\&quot;);\r\n    \t\t}\r\n            \r\n            if(idProcesso != null){\r\n                String queryGetAid_1 = \&quot;SELECT a.id as &apos;Aid&apos;, sass.ResourceId as &apos;ResourceId&apos; FROM shkprocesses p LEFT JOIN shkactivities a ON p.id = ProcessId LEFT JOIN shkprocessstates ps ON ps.oid = p.State LEFT JOIN SHKActivityStates acs ON acs.oid = a.State LEFT JOIN shkassignmentstable sass ON sass.ActivityId = a.id WHERE p.ActivityRequesterProcessId = ? AND ps.KeyValue LIKE &apos;open.running&apos; AND (acs.KeyValue LIKE &apos;open.not_running.not_started&apos; OR acs.KeyValue LIKE &apos;open.running&apos;)\&quot;;\r\n                stmt_1 = con.prepareStatement(queryGetAid_1);\r\n                stmt_1.setObject(1, idProcesso);\r\n                rs_1 = stmt_1.executeQuery();\r\n            \r\n                if(rs_1.next()){\r\n                    aid = rs_1.getObject(\&quot;Aid\&quot;);\r\n                    resourceId = rs_1.getObject(\&quot;ResourceId\&quot;);\r\n                    \r\n                    WorkflowManager wm = (WorkflowManager) AppUtil.getApplicationContext().getBean(\&quot;workflowManager\&quot;);\r\n                    WorkflowUserManager wum = (WorkflowUserManager) AppUtil.getApplicationContext().getBean(\&quot;workflowUserManager\&quot;);\r\n                    \r\n                    \/\/get the values from the \r\n                    String replaceUser = resourceId;\r\n                    String username = \&quot;#currentUser.username#\&quot;;\r\n                \r\n                \r\n                    \/\/getCurrentThreadUser() Method used by system to get current thread user\r\n                    String currentUser = wum.getCurrentThreadUser();\r\n                    wum.setCurrentThreadUser(replaceUser);\r\n                    wum.setCurrentThreadUser(currentUser);\r\n                    \r\n                    \/\/Reassigns the assignment from a user (replaceUser) to another user (username)\r\n                    wm.assignmentReassign(\&quot;\&quot;, \&quot;\&quot;, aid, username, replaceUser);\r\n                    \r\n                }\r\n            }\r\n            \r\n        }\r\n            \r\n    }catch(Exception e){\r\n            LogUtil.error(appDef.toString(), e, \&quot;Error getting info from DB\&quot;);\r\n    }finally{\r\n        try{\r\n            if(rs != null){\r\n            rs.close();\r\n            }\r\n            if(stmt != null){\r\n                stmt.close();\r\n            }\r\n            if(con != null &amp;&amp; !con.isClosed()) {\r\n                con.close();\r\n            }\r\n        }catch(Exception e){\r\n            LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\r\n        }\r\n        \r\n    }&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHAcompanhamentoOutorgas::notificarEntidade</string>
               <packageActivityPlugin>
                  <processDefId>CHAcompanhamentoOutorgas</processDefId>
                  <activityDefId>notificarEntidade</activityDefId>
                  <pluginName>org.joget.apps.app.lib.EmailTool</pluginName>
                  <pluginProperties>{&quot;toSpecific&quot;:&quot;#variable.email_entidade#&quot;,&quot;toParticipantId&quot;:&quot;&quot;,&quot;cc&quot;:&quot;&quot;,&quot;bcc&quot;:&quot;&quot;,&quot;subject&quot;:&quot;Email de Teste | Entidade Semi-Autonoma\/Autónoma&quot;,&quot;message&quot;:&quot;Chegou um processo a AO.\n\nhttp:\/\/192.168.0.104:8080\/jw\/web\/userview\/workflowPL\/UV_PL_Geral\/_\/filaTrabalho?&amp;_mode=assignment&amp;activityId=#process.activityInst.validacaoInicial.instanceId#&quot;,&quot;isHtml&quot;:&quot;&quot;,&quot;from&quot;:&quot;joget_dev@plataformalegal.pt&quot;,&quot;host&quot;:&quot;smtp.gmail.com&quot;,&quot;port&quot;:&quot;587&quot;,&quot;security&quot;:&quot;TLS&quot;,&quot;username&quot;:&quot;joget_dev@plataformalegal.pt&quot;,&quot;password&quot;:&quot;%%%%Y1MipNm6kGbixbmPgDkyU034Uz9XwhZvTW0tjXM6OTY=%%%%&quot;,&quot;formDefId&quot;:&quot;&quot;,&quot;fields&quot;:[],&quot;files&quot;:[],&quot;icsAttachement&quot;:&quot;&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>DISTdistribuicaoProcessosBCP::distribuicaoProcessos</string>
               <packageActivityPlugin>
                  <processDefId>DISTdistribuicaoProcessosBCP</processDefId>
                  <activityDefId>distribuicaoProcessos</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.WorkflowManager;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport org.joget.workflow.model.service.WorkflowUserManager;\r\nimport org.joget.apps.app.model.AppDefinition;\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.datalist.model.DataListBinderDefaultimport;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport javax.sql.DataSource;\r\n\r\nString idProcesso=\&quot;\&quot;;\r\nString aid = \&quot;\&quot;;\r\nString resourceId = \&quot;\&quot;;\r\n\r\n    Connection con = null;\r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\n    \r\n    PreparedStatement stmt_1 = null;\r\n    ResultSet rs_1 = null;\r\n    \r\n    try{\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\r\n        con = ds.getConnection();\r\n        \r\n        if(!con.isClosed()){\r\n                String queryGetAid = \&quot;SELECT p.id as &apos;idDist&apos; FROM shkprocesses sp LEFT JOIN shkprocesses sp2 on sp.ActivityRequesterProcessId = sp2.Id LEFT JOIN app_fd_processos_distrates p on sp.ActivityRequesterProcessId = p.id LEFT JOIN shkprocessstates sps ON sps.oid = sp.State LEFT JOIN SHKActivities sact ON sact.ProcessId = sp.Id LEFT JOIN SHKActivityStates ssta ON ssta.oid = sact.State LEFT JOIN (select ActivityId, group_concat(ResourceId separator &apos;; &apos;) as ResourceId from SHKAssignmentsTable group by ActivityId) sass on sact.Id = sass.ActivityId WHERE sps.KeyValue LIKE &apos;open.running&apos; AND p.id is not null AND (ssta.oid = &apos;1000001&apos; OR ssta.oid = &apos;1000003&apos; OR ssta.oid = &apos;1000005&apos;) AND sp.id like &apos;%DSTDistrates%&apos; AND sass.ResourceId LIKE &apos;%distrates_geral_bcp%&apos;\&quot;;\r\n        \t\tstmt = con.prepareStatement(queryGetAid);\r\n        \t\trs = stmt.executeQuery();\r\n    \t\t\r\n    \t\tif(rs.next()){\r\n    \t\t\tidProcesso = rs.getObject(\&quot;idDist\&quot;);\r\n    \t\t}\r\n            \r\n            if(idProcesso != null){\r\n                String queryGetAid_1 = \&quot;SELECT a.id as &apos;Aid&apos;, sass.ResourceId as &apos;ResourceId&apos; FROM shkprocesses p LEFT JOIN shkactivities a ON p.id = ProcessId LEFT JOIN shkprocessstates ps ON ps.oid = p.State LEFT JOIN SHKActivityStates acs ON acs.oid = a.State LEFT JOIN shkassignmentstable sass ON sass.ActivityId = a.id WHERE p.ActivityRequesterProcessId = ? AND ps.KeyValue LIKE &apos;open.running&apos; AND (acs.KeyValue LIKE &apos;open.not_running.not_started&apos; OR acs.KeyValue LIKE &apos;open.running&apos;)\&quot;;\r\n                stmt_1 = con.prepareStatement(queryGetAid_1);\r\n                stmt_1.setObject(1, idProcesso);\r\n                rs_1 = stmt_1.executeQuery();\r\n            \r\n                if(rs_1.next()){\r\n                    aid = rs_1.getObject(\&quot;Aid\&quot;);\r\n                    resourceId = rs_1.getObject(\&quot;ResourceId\&quot;);\r\n                    \r\n                    WorkflowManager wm = (WorkflowManager) AppUtil.getApplicationContext().getBean(\&quot;workflowManager\&quot;);\r\n                    WorkflowUserManager wum = (WorkflowUserManager) AppUtil.getApplicationContext().getBean(\&quot;workflowUserManager\&quot;);\r\n                    \r\n                    \/\/get the values from the \r\n                    String replaceUser = resourceId;\r\n                    String username = \&quot;#currentUser.username#\&quot;;\r\n                \r\n                \r\n                    \/\/getCurrentThreadUser() Method used by system to get current thread user\r\n                    String currentUser = wum.getCurrentThreadUser();\r\n                    wum.setCurrentThreadUser(replaceUser);\r\n                    wum.setCurrentThreadUser(currentUser);\r\n                    \r\n                    \/\/Reassigns the assignment from a user (replaceUser) to another user (username)\r\n                    wm.assignmentReassign(\&quot;\&quot;, \&quot;\&quot;, aid, username, replaceUser);\r\n                    \r\n                }\r\n            }\r\n            \r\n        }\r\n            \r\n    }catch(Exception e){\r\n            LogUtil.error(appDef.toString(), e, \&quot;Error getting info from DB\&quot;);\r\n    }finally{\r\n        try{\r\n            if(rs != null){\r\n            rs.close();\r\n            }\r\n            if(stmt != null){\r\n                stmt.close();\r\n            }\r\n            if(con != null &amp;&amp; !con.isClosed()) {\r\n                con.close();\r\n            }\r\n        }catch(Exception e){\r\n            LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\r\n        }\r\n        \r\n    }&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>HIPProducao::producaoManualRobot</string>
               <packageActivityPlugin>
                  <processDefId>HIPProducao</processDefId>
                  <activityDefId>producaoManualRobot</activityDefId>
                  <pluginName>org.joget.apps.app.lib.RulesDecisionPlugin</pluginName>
                  <pluginProperties>{&quot;rules&quot;:{&quot;ifrules&quot;:[{&quot;revert&quot;:false,&quot;andOr&quot;:&quot;and&quot;,&quot;conditions&quot;:[{&quot;revert&quot;:false,&quot;variable&quot;:&quot;proxima_operativa&quot;,&quot;operation&quot;:&quot;==&quot;,&quot;value&quot;:&quot;producao_robot&quot;}],&quot;actions&quot;:[{&quot;type&quot;:&quot;transition&quot;,&quot;name&quot;:&quot;transition3&quot;,&quot;value&quot;:&quot;&quot;}]}],&quot;else&quot;:[{&quot;type&quot;:&quot;transition&quot;,&quot;name&quot;:&quot;transition13&quot;,&quot;value&quot;:&quot;&quot;}]}}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::ultimaAtividadeGENCont</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <activityDefId>ultimaAtividadeGENCont</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;flag_ultima_atividade\&quot; , \&quot;1\&quot;);\r\n&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::ConfigurarProcsso</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <activityDefId>ConfigurarProcsso</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport java.time.LocalDateTime; \r\nimport java.time.format.DateTimeFormatter;\r\nimport java.time.DayOfWeek;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport javax.sql.DataSource;\r\nimport org.joget.commons.util.UuidGenerator;\r\nimport java.time.temporal.ChronoUnit;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;flag_ultima_atividade\&quot; , \&quot;0\&quot;);\r\nwm.processVariable(ProcessID, \&quot;proxima_operativa\&quot; , \&quot;\&quot;);\r\n\r\n\r\n\/******************** SLA ****************************\/\r\n\r\npublic String calculateSLAD(String dataInicio, Collection feriados, String sla, String urgencia){\r\n    \r\n    DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\&quot;yyyy-MM-dd HH:mm\&quot;);\r\n    DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern(\&quot;yyyy-MM-dd\&quot;);\r\n    LocalDateTime dateInit = LocalDateTime.parse(dataInicio, formatter);  \r\n    LocalDateTime endDateTime = null;\r\n    String endDate = \&quot;\&quot;;\r\n    Collection holidays = feriados;\r\n    \r\n    \r\n    var hour = dateInit.getHour();\r\n    int slaNumber = Integer.parseInt(sla);\r\n    \r\n    if(urgencia.equals(\&quot;SIM\&quot;)){\r\n        \/\/Calcular SLA urgente\r\n        endDateTime = dateInit.plusHours(slaNumber);\r\n        \/\/Passar dias não uteis\r\n        while(isWeekend(endDateTime) || holidays.contains(endDateTime.format(dateFormatter))){\r\n           endDateTime = endDateTime.plusDays(1);\r\n        }\r\n        \r\n        endDate = endDateTime.format(formatter);\r\n        \r\n        \r\n     \r\n    }else{\r\n        \/\/Calcular SLA não urgente\r\n\r\n            if(hour &lt; 12){\r\n                endDateTime = dateInit.withHour(23).withMinute(59);   \/**   HORAS UTEIS???   **\/\r\n                \r\n                \/\/Incrementar dias consoante o SLA\r\n                while(slaNumber &gt; 1){\r\n                    endDateTime = endDateTime.plusDays(1);\r\n                    \/\/Passar dias não uteis\r\n                    while(isWeekend(endDateTime) || holidays.contains(endDateTime.format(dateFormatter))){\r\n                       endDateTime = endDateTime.plusDays(1);\r\n                    }   \r\n                    slaNumber -= 1;\r\n                }\r\n            }else{\r\n                endDateTime = dateInit.plusDays(1).withHour(12).withMinute(0);\r\n                \r\n                \/\/Incrementar dias consoante o SLA\r\n                while(slaNumber &gt; 1){\r\n                    endDateTime = endDateTime.plusDays(1);\r\n                    \/\/Passar dias não uteis\r\n                    while(isWeekend(endDateTime) || holidays.contains(endDateTime.format(dateFormatter))){\r\n                       endDateTime = endDateTime.plusDays(1);\r\n                    }\r\n                    slaNumber -= 1;\r\n                }\r\n            }\r\n            \r\n        endDate = endDateTime.format(formatter);\r\n    }\r\n    \r\n    return endDate;\r\n}\r\n\r\npublic String calculateSLADuration(String dataInit){\r\n    DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\&quot;dd\/MM\/yyyy HH:mm\&quot;);\r\n    String result=\&quot;\&quot;;\r\n    \/\/if Data Init date format is not \&quot;dd\/MM\/yyyy HH:mm\&quot;\r\n    if(dataInit.charAt(2) != &apos;\/&apos;){\r\n        \/\/if Data Init date format is of the format \&quot;yyyy-MM-dd HH:mm\&quot;\r\n        if(dataInit.charAt(4) == &apos;-&apos; &amp;&amp; dataInit.charAt(10) == &apos; &apos; &amp;&amp; dataInit.charAt(13) == &apos;:&apos;){\r\n            dataInit =  dataInit.substring(8,10) + \&quot;\/\&quot; + dataInit.substring(5,7) + \&quot;\/\&quot; + dataInit.substring(0,4) + \&quot; \&quot; + dataInit.substring(11,16);\r\n        }\r\n    }\r\n\r\n    LocalDateTime dateInit = LocalDateTime.parse(dataInit, formatter);\r\n    LocalDateTime dateNow = LocalDateTime.parse(\&quot;#date.dd\/MM\/yyyy HH:mm#\&quot;,formatter);\r\n    \r\n    long days = ChronoUnit.DAYS.between(dateInit, dateNow);\r\n    int initHours = dateInit.getHour();\r\n    int nowHours = dateNow.getHour();\r\n    \r\n    \r\n    if(initHours &gt; 12 &amp;&amp; nowHours &lt;= 12){\r\n        days-=1;    \r\n    }\r\n    \r\n    result =\&quot;D\&quot;;\r\n    if(days&gt;0){\r\n        result += \&quot;+\&quot;+days;\r\n    }\r\n    \r\n    \r\n    \r\n    return result;\r\n}\r\n\r\npublic boolean isWeekend(LocalDateTime dt) {\r\n    String dayOfWeek = dt.getDayOfWeek().toString();\r\n    \/\/LogUtil.info(\&quot;DAY OF WEEK\&quot;, \&quot;\&quot; + dayOfWeek);\r\n    switch(dayOfWeek) {\r\n        case \&quot;SATURDAY\&quot;:{\r\n            return true;\r\n        }\r\n        case \&quot;SUNDAY\&quot;:{\r\n            return true;\r\n        }\r\n        default:{\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\npublic void updateSLA(){\r\n    Connection con = null;\r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\n    \r\n    try{\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\r\n        con = ds.getConnection();\r\n        \r\n        if(!con.isClosed()){\r\n            String operativa_anterior = \&quot;#variable.operativa_anterior#\&quot;;\r\n            String id_processo_anterior = \&quot;#variable.id_processo_anterior#\&quot;;\r\n            \r\n            \r\n            if(!operativa_anterior.equals(\&quot;CONTRATACAO\&quot;) &amp;&amp; !operativa_anterior.trim().isEmpty()){\r\n                \r\n               \/\/Obter data Inicial do SLA\r\n                String queryGetDateInitSla = \&quot;SELECT c_data_inicio FROM app_fd_sla_atividade WHERE  c_id_processo=? AND c_estado_atividade = &apos;Em curso&apos;;\&quot;;\r\n                stmt = con.prepareStatement(queryGetDateInitSla);\r\n                stmt.setObject(1, id_processo_anterior);\r\n                rs = stmt.executeQuery();\r\n                String dataInit =\&quot;\&quot;;\r\n                if(rs.next()){\r\n                    dataInit = rs.getObject(\&quot;c_data_inicio\&quot;).toString();\r\n                }\r\n                rs=null;\r\n                \r\n                String slaDuration = calculateSLADuration(dataInit);\r\n                \/\/Atualizar o sla Em curso para fechado\r\n                String queryReset= \&quot;UPDATE app_fd_sla_atividade SET c_estado_atividade = &apos;Fechada&apos;, c_data_conclusao=? , c_duracao = ? WHERE c_id_processo=? AND c_estado_atividade = &apos;Em curso&apos;;\&quot;; \r\n                stmt = con.prepareStatement(queryReset);\r\n                stmt.setObject(1,\&quot;#date.yyyy-MM-dd HH:mm#\&quot;);\r\n                stmt.setObject(2, slaDuration);\r\n                stmt.setObject(3, id_processo_anterior);\r\n                rs = stmt.executeQuery();\r\n                rs=null;\r\n                \r\n                \/\/Obter detalhes da tarefa\r\n                String queryGetAssignment = \&quot;SELECT name FROM shkprocesses WHERE id=?;\&quot;;\r\n                String queryGetUserAssign = \&quot;SELECT resourceid FROM shkassignmentstable WHERE activityprocessid =?\&quot;;\r\n                String nomeAtividade = \&quot;\&quot;;\r\n                String utilizador = \&quot;\&quot;;\r\n                stmt = con.prepareStatement(queryGetAssignment);\r\n                stmt.setObject(1, ProcessID);\r\n                rs = stmt.executeQuery();\r\n                \r\n                if(rs.next()){\r\n                    nomeAtividade= rs.getObject(\&quot;name\&quot;).toString();\r\n                    rs=null;\r\n                }\r\n                \r\n                stmt = con.prepareStatement(queryGetUserAssign);\r\n                stmt.setObject(1, ProcessID);\r\n                rs = stmt.executeQuery();\r\n                \r\n                if(rs.next()){\r\n                    utilizador= rs.getObject(\&quot;resourceid\&quot;).toString();\r\n                    rs=null;\r\n                }\r\n                \r\n                \/\/Obter feriados\r\n                        String queryGetHolidays = \&quot;SELECT * FROM app_fd_lista_feriados;\&quot;;\r\n                        stmt = con.prepareStatement(queryGetHolidays);\r\n                        rs = stmt.executeQuery();\r\n                        Collection holidays = new ArrayList(); \r\n                        \r\n                        while(rs.next()){\r\n                            holidays.add(rs.getObject(\&quot;c_data\&quot;));\r\n                        }\r\n                \r\n                \/\/Obter Urgencia\r\n                String urgente = \&quot;\&quot;;\r\n                String recordId = \&quot;#process.recordId#\&quot;;\r\n                String queryGetUrgencia = \&quot;SELECT c_urgencia FROM app_fd_detalhe_processo WHERE c_id_processo = ?\&quot;;\r\n                stmt = con.prepareStatement(queryGetUrgencia);\r\n                stmt.setObject(1, recordId);\r\n                rs = stmt.executeQuery();\r\n                \r\n                if(rs.next()){\r\n                   urgente = rs.getObject(\&quot;c_urgencia\&quot;);\r\n                }\r\n                \r\n                \/\/Obter configurações de SLA consoante a operativa e urgencia\r\n                String paramOperativa = \&quot;CONTRATACAO\&quot;;\r\n                String queryGetSLAConfig = \&quot;SELECT * FROM app_fd_valores_sla WHERE c_nome like ? \&quot;;\r\n                if(urgente.equals(\&quot;SIM\&quot;)){\r\n                    queryGetSLAConfig += \&quot;AND c_nome like &apos;%URGENTE&apos;\&quot;;\r\n                    paramOperativa += \&quot;%\&quot;;\r\n                }\r\n                \r\n                stmt = con.prepareStatement(queryGetSLAConfig);\r\n                stmt.setObject(1, paramOperativa);\r\n                rs = stmt.executeQuery();\r\n                String sla = \&quot;\&quot;; \r\n                if(rs.next()){\r\n                    sla = rs.getObject(\&quot;c_sla\&quot;);\r\n                }\r\n                \r\n                \r\n                String queryCreateSLA = \&quot;INSERT INTO app_fd_sla_atividade (id, dateCreated, dateModified, createdBy,createdByName ,modifiedBy, modifiedByName, c_data_inicio, c_data_fim, c_nome_atividade, c_id_processo, c_utilizador_atribuido, c_estado_atividade, c_duracao) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?);\&quot;;\r\n                stmt = con.prepareStatement(queryCreateSLA);\r\n                \r\n                var idSLA = UuidGenerator.getInstance().getUuid();\r\n                var dateNow =\&quot;#date.yyyy-MM-dd HH:mm#\&quot;;\r\n                var currentUsername = \&quot;#currentUser.username#\&quot;;\r\n                var currentNameUser = \&quot;#currentUser.firstName#\&quot; + \&quot;#currentUser.lastName#\&quot;;\r\n                String dataFim = calculateSLAD(dateNow, holidays, sla, urgente);\r\n                String duracao = \&quot;D\&quot;;\r\n               \r\n                var estadoAtividade = \&quot;Em curso\&quot;;\r\n                stmt.setObject(1, idSLA);\r\n                stmt.setObject(2, dateNow);\r\n                stmt.setObject(3, dateNow);\r\n                stmt.setObject(4, currentUsername);\r\n                stmt.setObject(5, currentNameUser);\r\n                stmt.setObject(6, currentUsername);\r\n                stmt.setObject(7, currentNameUser);\r\n                stmt.setObject(8, dateNow);\r\n                stmt.setObject(9, dataFim);   \r\n                stmt.setObject(10, nomeAtividade);\r\n                stmt.setObject(11, ProcessID);\r\n                stmt.setObject(12, utilizador);\r\n                stmt.setObject(13, estadoAtividade);\r\n                stmt.setObject(14, duracao);\r\n    \r\n                rs = stmt.executeQuery();\r\n                 \r\n            }\r\n        }\r\n      \r\n    }catch(Exception e){\r\n                LogUtil.error(appDef.toString(), e, \&quot;Error getting info from DB\&quot;);\r\n            }finally{\r\n                try{\r\n                    if(rs != null){\r\n                    rs.close();\r\n                    }\r\n                    if(stmt != null){\r\n                        stmt.close();\r\n                    }\r\n                    if(con != null &amp;&amp; !con.isClosed()) {\r\n                        con.close();\r\n                    }\r\n                }catch(Exception e){\r\n                    LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\r\n                }\r\n                \r\n            }\r\n}\r\nupdateSLA();\r\nwm.processVariable(ProcessID, \&quot;operativa_anterior\&quot; , \&quot;CONTRATACAO\&quot;);\r\nwm.processVariable(ProcessID, \&quot;id_processo_anterior\&quot; , ProcessID);&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::ultimaAtividadeMGCont</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <activityDefId>ultimaAtividadeMGCont</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;flag_ultima_atividade\&quot; , \&quot;1\&quot;);\r\n&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoNormal::validacaoBancariaNB</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <activityDefId>validacaoBancariaNB</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;validacaoBancariaNB&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;&quot;,&quot;deptId&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;#i18n.msg_realocar#&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;org.joget.apps.app.lib.BeanShellTool&quot;,&quot;properties&quot;:{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\nimport org.joget.commons.util.LogUtil;\nimport org.joget.apps.app.service.AppUtil;\n\n\nString assigneeId = \&quot;#process.activityInst.validacaoBancariaNB.assignmentUsers#\&quot;;\nString ProcessID = workflowAssignment.getProcessId();\n\n\nString instanceId = AppUtil.processHashVariable(\&quot;#process.activityInst.validacaoBancariaNB.instanceId[\&quot;+ProcessID+\&quot;]#\&quot;,null,null,null);\n\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\nwm.processVariable(ProcessID, \&quot;user_contratacao_nvb\&quot; , assigneeId);\nwm.activityVariable(instanceId,\&quot;user_contratacao_nvb\&quot;, assigneeId);\n&quot;}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;true&quot;,&quot;showProcessName&quot;:&quot;&quot;,&quot;showFutureActivities&quot;:&quot;true&quot;,&quot;showSkippedActivities&quot;:&quot;&quot;,&quot;usernameFormat&quot;:&quot;name&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoNormal::PreenchimentoProcessoBST</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <activityDefId>PreenchimentoProcessoBST</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;PreenchimentoProcessoBST&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;&quot;,&quot;deptId&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;REALOCAR&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;org.joget.apps.app.lib.BeanShellTool&quot;,&quot;properties&quot;:{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\nimport org.joget.commons.util.LogUtil;\nimport org.joget.apps.app.service.AppUtil;\n\n\nString assigneeId = \&quot;#process.activityInst.PreenchimentoProcessoBST.assignmentUsers#\&quot;;\nString ProcessID = workflowAssignment.getProcessId();\n\n\nString instanceId = AppUtil.processHashVariable(\&quot;#process.activityInst.PreenchimentoProcessoBST.instanceId[\&quot;+ProcessID+\&quot;]#\&quot;,null,null,null);\n\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\nwm.processVariable(ProcessID, \&quot;user_contratacao_bst\&quot; , assigneeId);\nwm.activityVariable(instanceId,\&quot;user_contratacao_bst\&quot;, assigneeId);\n&quot;}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;true&quot;,&quot;showProcessName&quot;:&quot;&quot;,&quot;showFutureActivities&quot;:&quot;true&quot;,&quot;showSkippedActivities&quot;:&quot;&quot;,&quot;usernameFormat&quot;:&quot;name&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHRegistos::configurarValidacaoDeposito</string>
               <packageActivityPlugin>
                  <processDefId>CHRegistos</processDefId>
                  <activityDefId>configurarValidacaoDeposito</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport java.time.LocalDateTime; \r\nimport java.time.format.DateTimeFormatter;\r\nimport java.time.DayOfWeek;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport javax.sql.DataSource;\r\nimport org.joget.commons.util.UuidGenerator;\r\nimport java.time.temporal.ChronoUnit;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;flag_ultima_atividade\&quot; , \&quot;4\&quot;);\r\n\r\npublic void updateFaseProcesso(){\r\n    Connection con = null;\r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\n    \r\n    try{\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\r\n        con = ds.getConnection();\r\n        \r\n        if(!con.isClosed()){\r\n            \r\n            \/\/Atualizar subfase do processo\r\n            String recordId = \&quot;#process.recordId#\&quot;;\r\n            if(recordId!=null){\r\n                String updateSubfaseProcesso = \&quot;UPDATE app_fd_detalhe_processo SET c_subfase_processo = ? WHERE c_id_processo = ?\&quot;;\r\n                stmt = con.prepareStatement(updateSubfaseProcesso);\r\n                stmt.setObject(1, \&quot;Validação do Depósito\&quot;);\r\n                stmt.setObject(2, recordId);\r\n                rs = stmt.executeQuery();\r\n            }\r\n        }\r\n      \r\n    }catch(Exception e){\r\n                LogUtil.error(appDef.toString(), e, \&quot;Error getting info from DB\&quot;);\r\n            }finally{\r\n                try{\r\n                    if(rs != null){\r\n                    rs.close();\r\n                    }\r\n                    if(stmt != null){\r\n                        stmt.close();\r\n                    }\r\n                    if(con != null &amp;&amp; !con.isClosed()) {\r\n                        con.close();\r\n                    }\r\n                }catch(Exception e){\r\n                    LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\r\n                }\r\n                \r\n            }\r\n}\r\n\r\nupdateFaseProcesso();&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHRegistos::configurarPagamentoRegisto</string>
               <packageActivityPlugin>
                  <processDefId>CHRegistos</processDefId>
                  <activityDefId>configurarPagamentoRegisto</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport java.time.LocalDateTime;\r\nimport java.time.LocalDate;\r\nimport java.time.format.DateTimeFormatter;\r\nimport java.time.DayOfWeek;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport javax.sql.DataSource;\r\nimport org.joget.commons.util.UuidGenerator;\r\nimport java.time.temporal.ChronoUnit;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;flag_ultima_atividade\&quot; , \&quot;6\&quot;);\r\n\r\npublic void updateFaseProcesso(){\r\n    Connection con = null;\r\n    \r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\n    \r\n    PreparedStatement stmt2 = null;\r\n    ResultSet rs2 = null;\r\n    \r\n    try{\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\r\n        con = ds.getConnection();\r\n        \r\n        if(!con.isClosed()){\r\n            \r\n            \/\/Atualizar subfase do processo\r\n            String recordId = \&quot;#process.recordId#\&quot;;\r\n            if(recordId!=null){\r\n                String updateSubfaseProcesso = \&quot;UPDATE app_fd_detalhe_processo SET c_subfase_processo = ? WHERE c_id_processo = ?\&quot;;\r\n                stmt = con.prepareStatement(updateSubfaseProcesso);\r\n                stmt.setObject(1, \&quot;Pagamento do Registo\&quot;);\r\n                stmt.setObject(2, recordId);\r\n                rs = stmt.executeQuery();\r\n                \r\n                String date = \&quot;#date.yyyy-MM-dd HH:mm:ss#\&quot;;\r\n                String user = \&quot;#currentUser.fullName#\&quot;;\r\n            \r\n                String updateDataRegisto = \&quot;UPDATE app_fd_detalhe_processo SET c_data_de_registo = ?, c_gestor_registo = ? WHERE c_id_processo = ?\&quot;;\r\n                stmt2 = con.prepareStatement(updateDataRegisto);\r\n                stmt2.setObject(1, date);\r\n                stmt2.setObject(2, user);\r\n                stmt2.setObject(3, recordId);\r\n                rs2 = stmt2.executeQuery();\r\n            }\r\n        }\r\n      \r\n    }catch(Exception e){\r\n                LogUtil.error(appDef.toString(), e, \&quot;Error getting info from DB\&quot;);\r\n            }finally{\r\n                try{\r\n                    if(rs != null){\r\n                    rs.close();\r\n                    }\r\n                    if(stmt != null){\r\n                        stmt.close();\r\n                    }\r\n                    if(con != null &amp;&amp; !con.isClosed()) {\r\n                        con.close();\r\n                    }\r\n                }catch(Exception e){\r\n                    LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\r\n                }\r\n                \r\n            }\r\n}\r\n\r\nupdateFaseProcesso();&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHValidacaoComplexo::tool3</string>
               <packageActivityPlugin>
                  <processDefId>CHValidacaoComplexo</processDefId>
                  <activityDefId>tool3</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport javax.sql.DataSource;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\/\/Update user_validacao\r\n\r\n\r\n\r\npublic String getUserVal(){\r\n    \r\n    Connection con = null;\r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\n     String userVal= \&quot;\&quot;;\r\n    try{\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\r\n        con = ds.getConnection();\r\n        \r\n        if(!con.isClosed()){\r\n            \r\n           \r\n            String queryGetUserAssign = \&quot;SELECT resourceid FROM shkassignmentstable WHERE activityprocessid =?\&quot;;\r\n            stmt = con.prepareStatement(queryGetUserAssign);\r\n            stmt.setObject(1, ProcessID);\r\n            rs = stmt.executeQuery();\r\n            if(rs.next()){\r\n                userVal = rs.getObject(\&quot;resourceid\&quot;);\r\n                \r\n            }\r\n        }\r\n      \r\n    }catch(Exception e){\r\n        LogUtil.error(appDef.toString(), e, \&quot;Error getting info from DB\&quot;);\r\n    }finally{\r\n        try{\r\n            if(rs != null){\r\n            rs.close();\r\n            }\r\n            if(stmt != null){\r\n                stmt.close();\r\n            }\r\n            if(con != null &amp;&amp; !con.isClosed()) {\r\n                con.close();\r\n            }\r\n        }catch(Exception e){\r\n            LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\r\n        }\r\n        \r\n    }\r\n    return userVal;\r\n}\r\n\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nString user = getUserVal();\r\nwm.processVariable(ProcessID, \&quot;user_validacao_com\&quot; , user);\r\nwm.activityAbort(ProcessID,\&quot;set_user\&quot;);\r\n&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>HIPProducao::atualizacao</string>
               <packageActivityPlugin>
                  <processDefId>HIPProducao</processDefId>
                  <activityDefId>atualizacao</activityDefId>
                  <pluginName>org.joget.apps.app.lib.RulesDecisionPlugin</pluginName>
                  <pluginProperties>{&quot;rules&quot;:{&quot;ifrules&quot;:[{&quot;revert&quot;:false,&quot;andOr&quot;:&quot;and&quot;,&quot;conditions&quot;:[{&quot;revert&quot;:false,&quot;variable&quot;:&quot;operativa_anterior&quot;,&quot;operation&quot;:&quot;==&quot;,&quot;value&quot;:&quot;validacao&quot;}],&quot;actions&quot;:[{&quot;type&quot;:&quot;transition&quot;,&quot;name&quot;:&quot;transition16&quot;,&quot;value&quot;:&quot;&quot;}]}],&quot;else&quot;:[{&quot;type&quot;:&quot;transition&quot;,&quot;name&quot;:&quot;transition15&quot;,&quot;value&quot;:&quot;&quot;}]}}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoNormal::PreenchimentoProcessoBCP</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <activityDefId>PreenchimentoProcessoBCP</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;PreenchimentoProcessoBCP&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;&quot;,&quot;deptId&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;#i18n.msg_realocar#&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;org.joget.apps.app.lib.BeanShellTool&quot;,&quot;properties&quot;:{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\nimport org.joget.commons.util.LogUtil;\nimport org.joget.apps.app.service.AppUtil;\n\n\nString assigneeId = \&quot;#process.activityInst.PreenchimentoProcessoBCP.assignmentUsers#\&quot;;\nString ProcessID = workflowAssignment.getProcessId();\n\n\nString instanceId = AppUtil.processHashVariable(\&quot;#process.activityInst.PreenchimentoProcessoBCP.instanceId[\&quot;+ProcessID+\&quot;]#\&quot;,null,null,null);\n\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\nwm.processVariable(ProcessID, \&quot;user_contratacao_bcp\&quot; , assigneeId);\nwm.activityVariable(instanceId,\&quot;user_contratacao_bcp\&quot;, assigneeId);\n&quot;}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;true&quot;,&quot;showProcessName&quot;:&quot;&quot;,&quot;showFutureActivities&quot;:&quot;true&quot;,&quot;showSkippedActivities&quot;:&quot;&quot;,&quot;usernameFormat&quot;:&quot;name&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoNormal::ultimaAtividadeABACont</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <activityDefId>ultimaAtividadeABACont</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;flag_ultima_atividade\&quot; , \&quot;1\&quot;);&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHConclusoes::concluirProcesso</string>
               <packageActivityPlugin>
                  <processDefId>CHConclusoes</processDefId>
                  <activityDefId>concluirProcesso</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;concluirProcesso&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;&quot;,&quot;deptId&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;#i18n.msg_realocar#&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;&quot;,&quot;properties&quot;:{}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;true&quot;,&quot;showProcessName&quot;:&quot;&quot;,&quot;showFutureActivities&quot;:&quot;true&quot;,&quot;showSkippedActivities&quot;:&quot;&quot;,&quot;usernameFormat&quot;:&quot;&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoNormal::validacaoMinutas</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <activityDefId>validacaoMinutas</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;validacaoMinutas&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;&quot;,&quot;deptId&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;#i18n.msg_realocar#&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;org.joget.apps.app.lib.BeanShellTool&quot;,&quot;properties&quot;:{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\nimport org.joget.commons.util.LogUtil;\nimport org.joget.apps.app.service.AppUtil;\n\n\nString assigneeId = \&quot;#process.activityInst.validacaoMinutas.assignmentUsers#\&quot;;\nString ProcessID = workflowAssignment.getProcessId();\n\n\nString instanceId = AppUtil.processHashVariable(\&quot;#process.activityInst.validacaoMinutas.instanceId[\&quot;+ProcessID+\&quot;]#\&quot;,null,null,null);\n\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\nwm.processVariable(ProcessID, \&quot;user_contratacao_mtg2\&quot; , assigneeId);\nwm.activityVariable(instanceId,\&quot;user_contratacao_mtg2\&quot;, assigneeId);\n&quot;}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;true&quot;,&quot;showProcessName&quot;:&quot;&quot;,&quot;showFutureActivities&quot;:&quot;true&quot;,&quot;showSkippedActivities&quot;:&quot;&quot;,&quot;usernameFormat&quot;:&quot;name&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>DISTdistribuicaoProcessosABN::distribuicaoProcessos</string>
               <packageActivityPlugin>
                  <processDefId>DISTdistribuicaoProcessosABN</processDefId>
                  <activityDefId>distribuicaoProcessos</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.WorkflowManager;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport org.joget.workflow.model.service.WorkflowUserManager;\r\nimport org.joget.apps.app.model.AppDefinition;\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.datalist.model.DataListBinderDefaultimport;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport javax.sql.DataSource;\r\n\r\nString idProcesso=\&quot;\&quot;;\r\nString aid = \&quot;\&quot;;\r\nString resourceId = \&quot;\&quot;;\r\n\r\n    Connection con = null;\r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\n    \r\n    PreparedStatement stmt_1 = null;\r\n    ResultSet rs_1 = null;\r\n    \r\n    try{\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\r\n        con = ds.getConnection();\r\n        \r\n        if(!con.isClosed()){\r\n                String queryGetAid = \&quot;SELECT p.id as &apos;idDist&apos; FROM shkprocesses sp LEFT JOIN shkprocesses sp2 on sp.ActivityRequesterProcessId = sp2.Id LEFT JOIN app_fd_processos_distrates p on sp.ActivityRequesterProcessId = p.id LEFT JOIN shkprocessstates sps ON sps.oid = sp.State LEFT JOIN SHKActivities sact ON sact.ProcessId = sp.Id LEFT JOIN SHKActivityStates ssta ON ssta.oid = sact.State LEFT JOIN (select ActivityId, group_concat(ResourceId separator &apos;; &apos;) as ResourceId from SHKAssignmentsTable group by ActivityId) sass on sact.Id = sass.ActivityId WHERE sps.KeyValue LIKE &apos;open.running&apos; AND p.id is not null AND (ssta.oid = &apos;1000001&apos; OR ssta.oid = &apos;1000003&apos; OR ssta.oid = &apos;1000005&apos;) AND sp.id like &apos;%DSTDistrates%&apos; AND sass.ResourceId LIKE &apos;%distrates_geral_abn%&apos;\&quot;;\r\n        \t\tstmt = con.prepareStatement(queryGetAid);\r\n        \t\trs = stmt.executeQuery();\r\n    \t\t\r\n    \t\tif(rs.next()){\r\n    \t\t\tidProcesso = rs.getObject(\&quot;idDist\&quot;);\r\n    \t\t}\r\n            \r\n            if(idProcesso != null){\r\n                String queryGetAid_1 = \&quot;SELECT a.id as &apos;Aid&apos;, sass.ResourceId as &apos;ResourceId&apos; FROM shkprocesses p LEFT JOIN shkactivities a ON p.id = ProcessId LEFT JOIN shkprocessstates ps ON ps.oid = p.State LEFT JOIN SHKActivityStates acs ON acs.oid = a.State LEFT JOIN shkassignmentstable sass ON sass.ActivityId = a.id WHERE p.ActivityRequesterProcessId = ? AND ps.KeyValue LIKE &apos;open.running&apos; AND (acs.KeyValue LIKE &apos;open.not_running.not_started&apos; OR acs.KeyValue LIKE &apos;open.running&apos;)\&quot;;\r\n                stmt_1 = con.prepareStatement(queryGetAid_1);\r\n                stmt_1.setObject(1, idProcesso);\r\n                rs_1 = stmt_1.executeQuery();\r\n            \r\n                if(rs_1.next()){\r\n                    aid = rs_1.getObject(\&quot;Aid\&quot;);\r\n                    resourceId = rs_1.getObject(\&quot;ResourceId\&quot;);\r\n                    \r\n                    WorkflowManager wm = (WorkflowManager) AppUtil.getApplicationContext().getBean(\&quot;workflowManager\&quot;);\r\n                    WorkflowUserManager wum = (WorkflowUserManager) AppUtil.getApplicationContext().getBean(\&quot;workflowUserManager\&quot;);\r\n                    \r\n                    \/\/get the values from the \r\n                    String replaceUser = resourceId;\r\n                    String username = \&quot;#currentUser.username#\&quot;;\r\n                \r\n                \r\n                    \/\/getCurrentThreadUser() Method used by system to get current thread user\r\n                    String currentUser = wum.getCurrentThreadUser();\r\n                    wum.setCurrentThreadUser(replaceUser);\r\n                    wum.setCurrentThreadUser(currentUser);\r\n                    \r\n                    \/\/Reassigns the assignment from a user (replaceUser) to another user (username)\r\n                    wm.assignmentReassign(\&quot;\&quot;, \&quot;\&quot;, aid, username, replaceUser);\r\n                    \r\n                }\r\n            }\r\n            \r\n        }\r\n            \r\n    }catch(Exception e){\r\n            LogUtil.error(appDef.toString(), e, \&quot;Error getting info from DB\&quot;);\r\n    }finally{\r\n        try{\r\n            if(rs != null){\r\n            rs.close();\r\n            }\r\n            if(stmt != null){\r\n                stmt.close();\r\n            }\r\n            if(con != null &amp;&amp; !con.isClosed()) {\r\n                con.close();\r\n            }\r\n        }catch(Exception e){\r\n            LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\r\n        }\r\n        \r\n    }&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoNormal::PreenchimentoProcessoGEN</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <activityDefId>PreenchimentoProcessoGEN</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;PreenchimentoProcessoGEN&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;&quot;,&quot;deptId&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;#i18n.msg_realocar#&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;org.joget.apps.app.lib.BeanShellTool&quot;,&quot;properties&quot;:{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\nimport org.joget.commons.util.LogUtil;\nimport org.joget.apps.app.service.AppUtil;\n\n\nString assigneeId = \&quot;#process.activityInst.PreenchimentoProcessoGEN.assignmentUsers#\&quot;;\nString ProcessID = workflowAssignment.getProcessId();\n\n\nString instanceId = AppUtil.processHashVariable(\&quot;#process.activityInst.PreenchimentoProcessoGEN.instanceId[\&quot;+ProcessID+\&quot;]#\&quot;,null,null,null);\n\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\nwm.processVariable(ProcessID, \&quot;user_contratacao_gen\&quot; , assigneeId);\nwm.activityVariable(instanceId,\&quot;user_contratacao_gen\&quot;, assigneeId);\n&quot;}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;true&quot;,&quot;showProcessName&quot;:&quot;&quot;,&quot;showFutureActivities&quot;:&quot;true&quot;,&quot;showSkippedActivities&quot;:&quot;&quot;,&quot;usernameFormat&quot;:&quot;name&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHRegistos::configurarValidacaoEntidades</string>
               <packageActivityPlugin>
                  <processDefId>CHRegistos</processDefId>
                  <activityDefId>configurarValidacaoEntidades</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport java.time.LocalDateTime; \r\nimport java.time.format.DateTimeFormatter;\r\nimport java.time.DayOfWeek;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport javax.sql.DataSource;\r\nimport org.joget.commons.util.UuidGenerator;\r\nimport java.time.temporal.ChronoUnit;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;flag_ultima_atividade\&quot; , \&quot;0\&quot;);\r\n\r\npublic void updateFaseProcesso(){\r\n    Connection con = null;\r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\n    \r\n    try{\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\r\n        con = ds.getConnection();\r\n        \r\n        if(!con.isClosed()){\r\n            \r\n            \/\/Atualizar subfase do processo\r\n            String recordId = \&quot;#process.recordId#\&quot;;\r\n            if(recordId!=null){\r\n                String updateSubfaseProcesso = \&quot;UPDATE app_fd_detalhe_processo SET c_subfase_processo = ? WHERE c_id_processo = ?\&quot;;\r\n                stmt = con.prepareStatement(updateSubfaseProcesso);\r\n                stmt.setObject(1, \&quot;Validação Entidades Autónomas\&quot;);\r\n                stmt.setObject(2, recordId);\r\n                rs = stmt.executeQuery();\r\n            }\r\n        }\r\n      \r\n    }catch(Exception e){\r\n                LogUtil.error(appDef.toString(), e, \&quot;Error getting info from DB\&quot;);\r\n            }finally{\r\n                try{\r\n                    if(rs != null){\r\n                    rs.close();\r\n                    }\r\n                    if(stmt != null){\r\n                        stmt.close();\r\n                    }\r\n                    if(con != null &amp;&amp; !con.isClosed()) {\r\n                        con.close();\r\n                    }\r\n                }catch(Exception e){\r\n                    LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\r\n                }\r\n                \r\n            }\r\n}\r\n\r\nupdateFaseProcesso();&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>HIPContratacao::route3</string>
               <packageActivityPlugin>
                  <processDefId>HIPContratacao</processDefId>
                  <activityDefId>route3</activityDefId>
                  <pluginName>org.joget.apps.app.lib.RulesDecisionPlugin</pluginName>
                  <pluginProperties>{&quot;rules&quot;:{&quot;ifrules&quot;:[{&quot;revert&quot;:false,&quot;andOr&quot;:&quot;and&quot;,&quot;conditions&quot;:[{&quot;revert&quot;:false,&quot;variable&quot;:&quot;estado&quot;,&quot;operation&quot;:&quot;==&quot;,&quot;value&quot;:&quot;FL&quot;}],&quot;actions&quot;:[{&quot;type&quot;:&quot;transition&quot;,&quot;name&quot;:&quot;transition17&quot;,&quot;value&quot;:&quot;&quot;}]}],&quot;else&quot;:[{&quot;type&quot;:&quot;transition&quot;,&quot;name&quot;:&quot;transition16&quot;,&quot;value&quot;:&quot;&quot;}]}}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>REGdistribuicaoProcessosDeposito::distribuicaoProcessosDeposito</string>
               <packageActivityPlugin>
                  <processDefId>REGdistribuicaoProcessosDeposito</processDefId>
                  <activityDefId>distribuicaoProcessosDeposito</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.WorkflowManager;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport org.joget.workflow.model.service.WorkflowUserManager;\r\nimport org.joget.apps.app.model.AppDefinition;\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.datalist.model.DataListBinderDefaultimport;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport javax.sql.DataSource;\r\n\r\nString idProcesso=\&quot;\&quot;;\r\nString aid = \&quot;\&quot;;\r\nString resourceId = \&quot;\&quot;;\r\n\r\n    Connection con = null;\r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\n    \r\n    PreparedStatement stmt_1 = null;\r\n    ResultSet rs_1 = null;\r\n    \r\n    try{\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\r\n        con = ds.getConnection();\r\n        \r\n        if(!con.isClosed()){\r\n            String queryGetAid = \&quot;SELECT p.id as &apos;IDProcesso&apos;, dp.c_subfase_processo, ag.c_data_agendamento AS &apos;DataAgendamento&apos;, dp.c_urgencia as &apos;Urgencia&apos; FROM shkprocesses sp LEFT JOIN shkprocesses sp2 on sp.ActivityRequesterProcessId = sp2.Id LEFT JOIN app_fd_processos p on sp.ActivityRequesterProcessId = p.id LEFT JOIN shkprocessstates sps ON sps.oid = sp.State  LEFT JOIN SHKActivities sact ON sact.ProcessId = sp.Id LEFT JOIN app_fd_detalhe_processo dp ON dp.id = p.c_detalhe_processo LEFT JOIN app_fd_agendamento ag ON ag.id = p.c_agendamento LEFT JOIN SHKActivityStates ssta ON ssta.oid = sact.State LEFT JOIN (select ActivityId, group_concat(ResourceId separator &apos;; &apos;) as ResourceId from SHKAssignmentsTable group by ActivityId) sass on sact.Id = sass.ActivityId WHERE sps.KeyValue LIKE &apos;open.running&apos; AND p.id is not null AND (ssta.oid = &apos;1000001&apos; OR ssta.oid = &apos;1000003&apos; OR ssta.oid = &apos;1000005&apos;) AND sp.id like &apos;%Registos%&apos; AND dp.c_subfase_processo LIKE &apos;Depósito&apos; AND sass.ResourceId LIKE &apos;%registos_geral%&apos; ORDER BY DataAgendamento ASC, Urgencia DESC\&quot;;\r\n    \t\tstmt = con.prepareStatement(queryGetAid);\r\n    \t\trs = stmt.executeQuery();\r\n    \t\t\r\n    \t\tif(rs.next()){\r\n    \t\t\tidProcesso = rs.getObject(\&quot;IDProcesso\&quot;);\r\n    \t\t}\r\n            \r\n            if(idProcesso != null){\r\n                String queryGetAid_1 = \&quot;SELECT a.id as &apos;Aid&apos;, sass.ResourceId as &apos;ResourceId&apos; FROM shkprocesses p LEFT JOIN shkactivities a ON p.id = ProcessId LEFT JOIN shkprocessstates ps ON ps.oid = p.State LEFT JOIN SHKActivityStates acs ON acs.oid = a.State LEFT JOIN shkassignmentstable sass ON sass.ActivityId = a.id WHERE p.ActivityRequesterProcessId = ? AND ps.KeyValue LIKE &apos;open.running&apos; AND (acs.KeyValue LIKE &apos;open.not_running.not_started&apos; OR acs.KeyValue LIKE &apos;open.running&apos;)\&quot;;\r\n                stmt_1 = con.prepareStatement(queryGetAid_1);\r\n                stmt_1.setObject(1, idProcesso);\r\n                rs_1 = stmt_1.executeQuery();\r\n            \r\n                if(rs_1.next()){\r\n                    aid = rs_1.getObject(\&quot;Aid\&quot;);\r\n                    resourceId = rs_1.getObject(\&quot;ResourceId\&quot;);\r\n                    \r\n                    WorkflowManager wm = (WorkflowManager) AppUtil.getApplicationContext().getBean(\&quot;workflowManager\&quot;);\r\n                    WorkflowUserManager wum = (WorkflowUserManager) AppUtil.getApplicationContext().getBean(\&quot;workflowUserManager\&quot;);\r\n                    \r\n                    \/\/get the values from the \r\n                    String replaceUser = resourceId;\r\n                    String username = \&quot;#currentUser.username#\&quot;;\r\n                \r\n                \r\n                    \/\/getCurrentThreadUser() Method used by system to get current thread user\r\n                    String currentUser = wum.getCurrentThreadUser();\r\n                    wum.setCurrentThreadUser(replaceUser);\r\n                    wum.setCurrentThreadUser(currentUser);\r\n                    \r\n                    \/\/Reassigns the assignment from a user (replaceUser) to another user (username)\r\n                    wm.assignmentReassign(\&quot;\&quot;, \&quot;\&quot;, aid, username, replaceUser);\r\n                    \r\n                }\r\n            }\r\n            \r\n        }\r\n            \r\n    }catch(Exception e){\r\n            LogUtil.error(appDef.toString(), e, \&quot;Error getting info from DB\&quot;);\r\n    }finally{\r\n        try{\r\n            if(rs != null){\r\n            rs.close();\r\n            }\r\n            if(stmt != null){\r\n                stmt.close();\r\n            }\r\n            if(con != null &amp;&amp; !con.isClosed()) {\r\n                con.close();\r\n            }\r\n        }catch(Exception e){\r\n            LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\r\n        }\r\n        \r\n    }&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::PreenchimentoProcessoNB</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <activityDefId>PreenchimentoProcessoNB</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;PreenchimentoProcessoNB&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;&quot;,&quot;deptId&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;#i18n.msg_realocar#&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;&quot;,&quot;properties&quot;:{}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;true&quot;,&quot;showProcessName&quot;:&quot;&quot;,&quot;showFutureActivities&quot;:&quot;true&quot;,&quot;showSkippedActivities&quot;:&quot;&quot;,&quot;usernameFormat&quot;:&quot;name&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHAcompanhamentoOutorgas::configurarUltimaAtividade</string>
               <packageActivityPlugin>
                  <processDefId>CHAcompanhamentoOutorgas</processDefId>
                  <activityDefId>configurarUltimaAtividade</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport java.time.LocalDateTime; \r\nimport java.time.format.DateTimeFormatter;\r\nimport java.time.DayOfWeek;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport javax.sql.DataSource;\r\nimport org.joget.commons.util.UuidGenerator;\r\nimport java.time.temporal.ChronoUnit;\r\n\r\nString processId = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(processId, \&quot;flag_ultima_atividade\&quot; , \&quot;1\&quot;);\r\n\r\n\/** RESET VARIAVEL USER DISTRIBUIÇÃO MANUAL **\/\r\n\r\npublic void updateFaseProcesso(){\r\n    Connection con = null;\r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\n    \r\n    try{\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\r\n        con = ds.getConnection();\r\n        \r\n        if(!con.isClosed()){\r\n            \r\n            \/\/Atualizar subfase do processo\r\n            String recordId = \&quot;#process.recordId#\&quot;;\r\n            if(recordId!=null){\r\n                String updateSubfaseProcesso = \&quot;UPDATE app_fd_detalhe_processo SET c_subfase_processo = ? WHERE c_id_processo = ?\&quot;;\r\n                stmt = con.prepareStatement(updateSubfaseProcesso);\r\n                stmt.setObject(1, \&quot;Validação Final\&quot;);\r\n                stmt.setObject(2, recordId);\r\n                rs = stmt.executeQuery();\r\n            }\r\n        }\r\n      \r\n    }catch(Exception e){\r\n                LogUtil.error(appDef.toString(), e, \&quot;Error getting info from DB\&quot;);\r\n            }finally{\r\n                try{\r\n                    if(rs != null){\r\n                    rs.close();\r\n                    }\r\n                    if(stmt != null){\r\n                        stmt.close();\r\n                    }\r\n                    if(con != null &amp;&amp; !con.isClosed()) {\r\n                        con.close();\r\n                    }\r\n                }catch(Exception e){\r\n                    LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\r\n                }\r\n                \r\n            }\r\n}\r\n\r\nupdateFaseProcesso();&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHRegistos::configurarInsercaoChave</string>
               <packageActivityPlugin>
                  <processDefId>CHRegistos</processDefId>
                  <activityDefId>configurarInsercaoChave</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport java.time.LocalDateTime; \r\nimport java.time.format.DateTimeFormatter;\r\nimport java.time.DayOfWeek;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport javax.sql.DataSource;\r\nimport org.joget.commons.util.UuidGenerator;\r\nimport java.time.temporal.ChronoUnit;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;flag_ultima_atividade\&quot; , \&quot;3\&quot;);\r\n\r\npublic void updateFaseProcesso(){\r\n    Connection con = null;\r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\n    \r\n    try{\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\r\n        con = ds.getConnection();\r\n        \r\n        if(!con.isClosed()){\r\n            \r\n            \/\/Atualizar subfase do processo\r\n            String recordId = \&quot;#process.recordId#\&quot;;\r\n            if(recordId!=null){\r\n                String updateSubfaseProcesso = \&quot;UPDATE app_fd_detalhe_processo SET c_subfase_processo = ? WHERE c_id_processo = ?\&quot;;\r\n                stmt = con.prepareStatement(updateSubfaseProcesso);\r\n                stmt.setObject(1, \&quot;Inserção Chave\&quot;);\r\n                stmt.setObject(2, recordId);\r\n                rs = stmt.executeQuery();\r\n            }\r\n        }\r\n      \r\n    }catch(Exception e){\r\n                LogUtil.error(appDef.toString(), e, \&quot;Error getting info from DB\&quot;);\r\n            }finally{\r\n                try{\r\n                    if(rs != null){\r\n                    rs.close();\r\n                    }\r\n                    if(stmt != null){\r\n                        stmt.close();\r\n                    }\r\n                    if(con != null &amp;&amp; !con.isClosed()) {\r\n                        con.close();\r\n                    }\r\n                }catch(Exception e){\r\n                    LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\r\n                }\r\n                \r\n            }\r\n}\r\n\r\nupdateFaseProcesso();&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>HIPProducao::route4</string>
               <packageActivityPlugin>
                  <processDefId>HIPProducao</processDefId>
                  <activityDefId>route4</activityDefId>
                  <pluginName>org.joget.apps.app.lib.RulesDecisionPlugin</pluginName>
                  <pluginProperties>{&quot;rules&quot;:{&quot;ifrules&quot;:[{&quot;revert&quot;:false,&quot;andOr&quot;:&quot;and&quot;,&quot;conditions&quot;:[{&quot;revert&quot;:false,&quot;variable&quot;:&quot;estado&quot;,&quot;operation&quot;:&quot;==&quot;,&quot;value&quot;:&quot;PNDAG&quot;}],&quot;actions&quot;:[{&quot;type&quot;:&quot;transition&quot;,&quot;name&quot;:&quot;transition18&quot;,&quot;value&quot;:&quot;&quot;},{&quot;type&quot;:&quot;variable&quot;,&quot;name&quot;:&quot;estado&quot;,&quot;value&quot;:&quot;PNDAG&quot;}]}],&quot;else&quot;:[{&quot;type&quot;:&quot;transition&quot;,&quot;name&quot;:&quot;transition19&quot;,&quot;value&quot;:&quot;&quot;},{&quot;type&quot;:&quot;variable&quot;,&quot;name&quot;:&quot;estado&quot;,&quot;value&quot;:&quot;ATV&quot;}]}}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::PreenchimentoProcessoABA</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <activityDefId>PreenchimentoProcessoABA</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;PreenchimentoProcessoABA&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;&quot;,&quot;deptId&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;#i18n.msg_realocar#&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;&quot;,&quot;properties&quot;:{}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;true&quot;,&quot;showProcessName&quot;:&quot;&quot;,&quot;showFutureActivities&quot;:&quot;true&quot;,&quot;showSkippedActivities&quot;:&quot;&quot;,&quot;usernameFormat&quot;:&quot;name&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>HIPContratacao::configuraProcesso</string>
               <packageActivityPlugin>
                  <processDefId>HIPContratacao</processDefId>
                  <activityDefId>configuraProcesso</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport java.time.LocalDateTime; \r\nimport java.time.format.DateTimeFormatter;\r\nimport java.time.DayOfWeek;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport javax.sql.DataSource;\r\nimport org.joget.commons.util.UuidGenerator;\r\nimport java.time.temporal.ChronoUnit;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\nLogUtil.info(\&quot;HIP - CNT\&quot;, \&quot;processID: \&quot; + ProcessID);\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;flag_ultima_atividade\&quot; , \&quot;1\&quot;);\r\nwm.processVariable(ProcessID, \&quot;proxima_operativa\&quot; , \&quot;\&quot;);\r\n\r\n\r\n\r\n\/******************** SLA **************************\/\r\n\r\n\r\n\r\nwm.processVariable(ProcessID, \&quot;operativa_anterior\&quot; , \&quot;CONTRATACAO\&quot;);\r\nwm.processVariable(ProcessID, \&quot;id_processo_anterior\&quot; , ProcessID);\r\nwm.processVariable(ProcessID, \&quot;id_processo_contratacao\&quot; , ProcessID);\r\n&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>HIPProducao::route6</string>
               <packageActivityPlugin>
                  <processDefId>HIPProducao</processDefId>
                  <activityDefId>route6</activityDefId>
                  <pluginName>org.joget.apps.app.lib.RulesDecisionPlugin</pluginName>
                  <pluginProperties>{&quot;rules&quot;:{&quot;ifrules&quot;:[{&quot;revert&quot;:false,&quot;andOr&quot;:&quot;and&quot;,&quot;conditions&quot;:[{&quot;revert&quot;:false,&quot;variable&quot;:&quot;proxima_operativa&quot;,&quot;operation&quot;:&quot;==&quot;,&quot;value&quot;:&quot;validacao&quot;}],&quot;actions&quot;:[{&quot;type&quot;:&quot;transition&quot;,&quot;name&quot;:&quot;transition21&quot;,&quot;value&quot;:&quot;&quot;}]},{&quot;revert&quot;:false,&quot;andOr&quot;:&quot;and&quot;,&quot;conditions&quot;:[{&quot;revert&quot;:false,&quot;variable&quot;:&quot;proxima_operativa&quot;,&quot;operation&quot;:&quot;==&quot;,&quot;value&quot;:&quot;contratacao&quot;}],&quot;actions&quot;:[{&quot;type&quot;:&quot;transition&quot;,&quot;name&quot;:&quot;transition22&quot;,&quot;value&quot;:&quot;&quot;}]}],&quot;else&quot;:[]}}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>diligenciaAut::atualizaEstadoFiltroPai</string>
               <packageActivityPlugin>
                  <processDefId>diligenciaAut</processDefId>
                  <activityDefId>atualizaEstadoFiltroPai</activityDefId>
                  <pluginName>org.joget.apps.app.lib.MultiTools</pluginName>
                  <pluginProperties>{&quot;tools&quot;:[{&quot;className&quot;:&quot;org.joget.apps.app.lib.BeanShellTool&quot;,&quot;properties&quot;:{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport java.lang.Exception;\r\nimport org.joget.commons.util.LogUtil;\r\n\r\nString id_pai = \&quot;#variable.id_processo_pai#\&quot;;\r\nString sub_estado = \&quot;#variable.sub_estado_filtro#\&quot;;\r\n\r\n\/\/LogUtil.info(\&quot;Processo TESTE\&quot;, \&quot;id_pai: \&quot; + id_pai + \&quot;, sub_estado: \&quot; + sub_estado);\r\n \r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(id_pai, \&quot;estado_filtro\&quot;, sub_estado);&quot;}},{&quot;className&quot;:&quot;org.joget.apps.app.lib.DatabaseUpdateTool&quot;,&quot;properties&quot;:{&quot;jdbcDatasource&quot;:&quot;default&quot;,&quot;query&quot;:&quot;UPDATE shkactivitydata ad\nINNER JOIN shkactivities a\n    ON ad.Activity = a.oid  \n    SET ad.VariableValueVCHAR=&apos;#variable.sub_estado_filtro#&apos; \n    WHERE a.Id LIKE CONCAT(&apos;%_#variable.id_processo_pai#&apos;, &apos;_workflowPL_processoTesteAssync_activity1&apos;)\n    AND a.State = &apos;1000003&apos;\n    AND ad.VariableDefinitionId LIKE &apos;estado_filtro&apos;;&quot;}}],&quot;runInMultiThread&quot;:&quot;&quot;,&quot;comment&quot;:&quot;&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHAcompanhamentoOutorgas::verificarDataOutorga</string>
               <packageActivityPlugin>
                  <processDefId>CHAcompanhamentoOutorgas</processDefId>
                  <activityDefId>verificarDataOutorga</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport javax.sql.DataSource;\r\nimport java.time.LocalDateTime; \r\nimport java.time.format.DateTimeFormatter;\r\nimport java.time.DayOfWeek;\r\nimport java.time.temporal.ChronoUnit;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\nimport java.util.Locale;\r\nimport org.joget.commons.util.UuidGenerator;\r\nimport org.joget.directory.model.service.ExtDirectoryManager;\r\nimport org.joget.workflow.model.service.WorkflowManager;\r\nimport org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\n\r\nString processId = \&quot;#process.processId#\&quot;;\r\nString recordId = \&quot;#process.recordId#\&quot;;\r\n\r\n\/\/Set the workflow variable\r\nExtDirectoryManager directoryManager = (ExtDirectoryManager) pluginManager.getBean(\&quot;directoryManager\&quot;);\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(processId, \&quot;flag_ultima_atividade\&quot; , \&quot;0\&quot;);\r\n\r\npublic void verificarDataOutorga() {\r\n    String currentDate = \&quot;#date.yyyy-MM-dd hh:mm#\&quot;;\r\n    String dataOutorga = \&quot;\&quot;;\r\n    String horaOutorga = \&quot;\&quot;;\r\n    \r\n    Connection con = null;\r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\n            \r\n    try {\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\r\n        con = ds.getConnection();\r\n                \r\n        if(!con.isClosed()) {\r\n            if(recordId != null) {\r\n                String queryObterDataOutorga = \&quot;SELECT c_dataOutorga, c_horaOutorga FROM app_fd_atos a WHERE c_id_processo LIKE ? AND c_status LIKE &apos;AGD&apos;;\&quot;;\r\n                stmt = con.prepareStatement(queryObterDataOutorga);\r\n                stmt.setObject(1, recordId);\r\n                rs = stmt.executeQuery();\r\n                        \r\n                if (rs.next()) {\r\n                    dataOutorga = rs.getObject(\&quot;c_dataOutorga\&quot;);\r\n                    horaOutorga = rs.getObject(\&quot;c_horaOutorga\&quot;);\r\n                }\r\n                \r\n                \/\/Atualizar fase e subfase do processo\r\n                String updateFaseProcesso = \&quot;UPDATE app_fd_detalhe_processo SET c_fase_processo = ? WHERE c_id_processo = ?\&quot;;\r\n                stmt = con.prepareStatement(updateFaseProcesso);\r\n                stmt.setObject(1, \&quot;AO\&quot;);\r\n                stmt.setObject(2, recordId);\r\n                rs = stmt.executeQuery();\r\n                \r\n                String updateSubfaseProcesso = \&quot;UPDATE app_fd_detalhe_processo SET c_subfase_processo = ? WHERE c_id_processo = ?\&quot;;\r\n                stmt = con.prepareStatement(updateSubfaseProcesso);\r\n                stmt.setObject(1, \&quot;A Aguardar Distribuição\&quot;);\r\n                stmt.setObject(2, recordId);\r\n                rs = stmt.executeQuery();\r\n            }\r\n        }\r\n              \r\n    } catch(Exception e) {\r\n        \/\/LogUtil.error(appDef.toString(), e, \&quot;Error getting info from DB\&quot;);\r\n        LogUtil.error(\&quot;AO | Verificar Data de Outorga\&quot;, e, \&quot;Error getting info from DB\&quot;);\r\n    } finally {\r\n        try {\r\n            if(rs != null) {\r\n                rs.close();\r\n            }\r\n            if(stmt != null) {\r\n                stmt.close();\r\n            }\r\n            if(con != null &amp;&amp; !con.isClosed()) {\r\n                con.close();\r\n            }\r\n        } catch(Exception e) {\r\n            \/\/LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\r\n            LogUtil.error(\&quot;AO | Verificar Data de Outorga\&quot;, e, \&quot;Error closing DB connection\&quot;);\r\n        }\r\n    }\r\n    \r\n    LogUtil.info(\&quot;TIAGOOOOOOOOOO\&quot;, \&quot; | Data de Outorga: \&quot; + dataOutorga);\r\n    LogUtil.info(\&quot;TIAGOOOOOOOOOO\&quot;, \&quot; | Hora de Outorga: \&quot; + horaOutorga);\r\n    LogUtil.info(\&quot;TIAGOOOOOOOOOO\&quot;, \&quot; | Data Atual: \&quot; + currentDate);\r\n    \r\n    \r\n    try {\r\n        SimpleDateFormat simpleDateFormat = new SimpleDateFormat(\&quot;yyyy-MM-dd HH:mm\&quot;);\r\n        \r\n        String dataHoraOutorga = dataOutorga + \&quot; \&quot; + horaOutorga;\r\n        LogUtil.info(\&quot;TIAGOOOOOOOOOO\&quot;, \&quot; | Data Outorga com Hora: \&quot; + dataHoraOutorga);\r\n        \r\n        String horaDistribuicao = \&quot;#date.yyyy-MM-dd#\&quot; + \&quot;06:00\&quot;;\r\n        LogUtil.info(\&quot;TIAGOOOOOOOOOO\&quot;, \&quot; | Data Distribuição: \&quot; + horaDistribuicao);\r\n        \r\n        Date dtCurrentDate = simpleDateFormat.parse(currentDate);\r\n        Date dtDataHoraOutorga = simpleDateFormat.parse(dataHoraOutorga);\r\n        Date dtHoraDistribuicao = simpleDateFormat.parse(horaDistribuicao);\r\n        \r\n        boolean isAfter = dtCurrentDate.after(dtHoraDistribuicao);\r\n        LogUtil.info(\&quot;TIAGOOOOOOOOOO\&quot;, \&quot; | isAfter? \&quot; + isAfter);\r\n        \r\n            \r\n        if(dtCurrentDate.after(dtHoraDistribuicao)) {\r\n            long diffInMillies = Math.abs(dtDataHoraOutorga.getTime() - dtCurrentDate.getTime());\r\n            LogUtil.info(\&quot;TIAGOOOOOOOOOO\&quot;, \&quot; | DateDiffInMillies: \&quot; + diffInMillies);\r\n            \r\n            long diff = TimeUnit.DAYS.convert(diffInMillies, TimeUnit.MILLISECONDS);\r\n            LogUtil.info(\&quot;TIAGOOOOOOOOOO\&quot;, \&quot; | DateDiff: \&quot; + diff);\r\n            \r\n            if (diff &lt;= 1) {\r\n                LogUtil.info(\&quot;TIAGOOOOOOOOOO\&quot;, \&quot; | Marcar como Urgente\&quot;);       \r\n            }\r\n        }\r\n        \r\n    } catch (ParseException e) {\r\n        e.printStackTrace();\r\n    }\r\n    \r\n    \r\n    \/* \r\n        If (currentDate &gt; 18h) {\r\n            if (data de outorga é hoje ou amanhã) {\r\n                Marcar como urgente -&gt; Tem de ser ordenado na BD\r\n            }\r\n        }\r\n    \r\n    *\/\r\n}\r\n\r\n\r\nverificarDataOutorga();&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>poll_email::check_emails</string>
               <packageActivityPlugin>
                  <processDefId>poll_email</processDefId>
                  <activityDefId>check_emails</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import java.util.Collection;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.Properties;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\nimport java.lang.Integer;\n\nimport javax.mail.BodyPart;\nimport javax.mail.Flags;\nimport javax.mail.Flags.Flag;\nimport javax.mail.Folder;\nimport javax.mail.Message;\nimport javax.mail.MessagingException;\nimport javax.mail.Multipart;\nimport javax.mail.Session;\nimport javax.mail.Store;\nimport javax.mail.event.MessageCountAdapter;\nimport javax.mail.event.MessageCountEvent;\nimport javax.mail.internet.InternetAddress;\nimport javax.mail.Address;\nimport javax.mail.search.FlagTerm;\nimport javax.mail.internet.MimeMultipart;\n\nimport com.sun.mail.imap.IMAPFolder;\nimport com.sun.mail.imap.IMAPStore;\n\nimport org.joget.commons.util.LogUtil;\nimport org.joget.commons.util.StringUtil;\nimport org.joget.apps.app.model.AppDefinition;\nimport org.joget.apps.app.model.PackageActivityForm;\nimport org.joget.apps.app.service.AppUtil;\nimport org.joget.apps.app.service.AppService;\nimport org.joget.apps.form.model.FormData;\nimport org.joget.directory.model.User;\nimport org.joget.directory.model.service.DirectoryManager;\nimport org.joget.workflow.model.WorkflowAssignment;\nimport org.joget.workflow.model.service.WorkflowManager;\nimport org.joget.workflow.model.service.WorkflowUserManager;\nimport org.joget.plugin.base.ApplicationPlugin;\nimport org.joget.plugin.base.Plugin;\nimport org.joget.plugin.base.PluginManager;\nimport org.joget.plugin.property.model.PropertyEditable;\nimport org.joget.apps.form.model.FormRow;\nimport org.joget.apps.form.model.FormRowSet;\nimport org.joget.workflow.model.service.*;\n\n\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport javax.sql.DataSource;\nimport org.joget.commons.util.UuidGenerator;\n \n\npublic FormRowSet activitiesLog = new FormRowSet();\n\npublic void pollEmail() {\n    LogUtil.info(\&quot;Email -&gt;\&quot;,\&quot;Plugin\&quot;);\n    \n    Properties properties = new Properties();\n    if (\&quot;true\&quot;.equals(\&quot;#form.email_listener.debug_imap?java#\&quot;)) {\n        properties.put(\&quot;mail.debug\&quot;, \&quot;true\&quot;);\n    }\n    properties.put(\&quot;mail.store.protocol\&quot;, \&quot;imaps\&quot;);\n    properties.put(\&quot;mail.imaps.host\&quot;, \&quot;#form.email_listener.host?java#\&quot;);\n    properties.put(\&quot;mail.imaps.port\&quot;, \&quot;#form.email_listener.port?java#\&quot;);\n    properties.put(\&quot;mail.imaps.timeout\&quot;, (#form.email_listener.timeout?java# * 1000));\n\n\n\n    Session session = Session.getInstance(properties);\n    \n    \n    IMAPStore store = null;\n    Folder inbox = null;\n\n    int messageCount = 0;\n    String errors = \&quot;\&quot;;\n    try {\n        debug(\&quot;Connect to IMAP for #form.email_listener.email?java#\&quot;);\n        \/\/debug( \&quot;Password #form.email_listener.password?java#\&quot;);\n        store = (IMAPStore) session.getStore(\&quot;imaps\&quot;);\n        store.connect(\&quot;#form.email_listener.email?java#\&quot;, \&quot;#form.email_listener.password?java#\&quot;);\n        debug(\&quot;IMAP connected for #form.email_listener.email?java#\&quot;);\n\n        inbox = (IMAPFolder) store.getFolder(\&quot;#form.email_listener.folder?java#\&quot;);\n        if (null == folder) {\n            throw new Exception(\&quot; no  folder [#form.email_listener.folder?java#] for user [#form.email_listener.email?java#] on host [#form.email_listener.host?java#]\&quot;);\n        }\n\n        \/\/ opening found folder in read\/write\n        inbox.open(Folder.READ_WRITE);\n\n        messageCount = inbox.getUnreadMessageCount();\n        debug(\&quot;Unread Messages: \&quot; + messageCount);\n        debug(\&quot;Filter email by exact subject text: #form.email_listener.subject_filter?java#\&quot;);\n        debug(\&quot;Filter email by regex subject text: #form.email_listener.subject_pattern?java#\&quot;);\n\n        int count = 0;\n\n        Message[] messages = inbox.search(new FlagTerm(new Flags(Flags.Flag.SEEN), false));\n        \n        for (Message message : messages) {\n            try {\n                if (count &gt; #form.email_listener.max_email?java#) {\n                    debug(\&quot;Email checking reach max email per check(#form.email_listener.max_email?java#).\&quot;);\n                    break;\n                }\n                \n\n                \/\/ get email details\n                String subject = message.getSubject();\n                if(!matchFilter(subject)) {\n                    continue;\n                }\n                \n                InternetAddress senderIA = (InternetAddress) message.getFrom()[0];\n                String sender = senderIA.getAddress();\n\n                String content = \&quot;\&quot;;\n                if (message.getContent() instanceof Multipart) {\n                    \n                    Multipart multipart = (Multipart) message.getContent();\n                    debug(\&quot;MULTIPART \&quot; + multipart);\n                    content = getTextFromMimeMultipart(multipart);\n                    \n                } else {\n                    debug(\&quot;NO MULTIPART\&quot; + \&quot;BBB\&quot;);\n                    content = message.getContent().toString();\n                }\n                \n                \n                storeEmail(message, subject, content, sender);\n                \n\n                count++;\n            } catch (MessagingException e) {\n                errors += e.getMessage() + \&quot;\\n\&quot;;\n                LogUtil.error(\&quot;App: eas - Poll Email tool\&quot;, e, e.getMessage());\n            }\n        }\n\n    } catch (Exception e) {\n        errors += e.getMessage() + \&quot;\\n\&quot;;\n        LogUtil.error(\&quot;App: eas - Poll Email tool\&quot;, e, \&quot;\&quot;);\n    } finally {\n        try {\n            if (inbox != null &amp;&amp; inbox.isOpen()) {\n                inbox.close(false);\n            }\n        } catch (Exception e) {\n            \/\/ ignore\n        }\n\n        try {\n            if (store != null &amp;&amp; store.isConnected()) {\n                store.close();\n            }\n        } catch (Exception e) {\n            \/\/ ignore\n        }\n    }\n    if (!errors.isEmpty()) {\n        addError(messageCount, errors);\n    }\n    storeFormData(\&quot;j_ave_log\&quot;, \&quot;log\&quot;, activitiesLog);\n    \n}\n\n\n\npublic void storeEmail(Message msg, String sbj, String content, String sender){\n    \n    Pattern patternGetNWfPl = Pattern.compile(\&quot;(\\\\w{3,}\\\\d{6,}|\\\\d{6,})\&quot;);\n    Matcher m = patternGetNWfPl.matcher(sbj);\n    m.find();\n    String nWfPl = m.group(1);\n    \n    \/\/LogUtil.info(\&quot;Numero Wf Pl\&quot;, \&quot;aa\&quot; + nWfPl);\n    \n    Connection con = null;\n    PreparedStatement stmt = null;\n    ResultSet rs = null;\n    UuidGenerator uuid = UuidGenerator.getInstance();\n    String pId = \&quot;\&quot;;\n    String nomeFicheiro = \&quot;EMAIL-\&quot; + sbj + \&quot;.eml\&quot;;\n    nomeFicheiro = nomeFicheiro.replaceAll(\&quot;[^a-zA-Z0-9\\\\.\\\\-]\&quot;, \&quot;_\&quot;);\n    \n    try{\n        \n                \n        \n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\n        con = ds.getConnection();\n       \n       if(!con.isClosed()){\n           \n           String queryGetProcessId = \&quot;SELECT c_id_processo, c_estado_contratacao FROM app_fd_detalhe_processo WHERE c_n_wf_pl = ? OR c_n_wf_banco = ?\&quot;;\n           stmt = con.prepareStatement(queryGetProcessId);\n           stmt.setString(1, nWfPl);\n           stmt.setString(2, nWfPl);\n           rs = stmt.executeQuery();\n           String estadoContratacao=\&quot;\&quot;;\n          \/\/ LogUtil.info(\&quot;Número WF PL\&quot;,\&quot;AAAAAAAAAAA\&quot; + nWfPl);\n            if(rs.next()){\n              estadoContratacao = rs.getObject(\&quot;c_estado_contratacao\&quot;).toString();\n            \/\/  LogUtil.info(\&quot;Estado Contratação\&quot;,\&quot;AAAAAAAAAAA\&quot; + estadoContratacao);\n                \/\/Inserir Email no processo\n                String processId = rs.getObject(\&quot;c_id_processo\&quot;).toString();\n                String queryInsertEmail = \&quot;INSERT INTO app_fd_comunicacoes_proce(id,c_assunto, c_destinatarios,c_mensagem, c_id_processo, c_anexos) VALUES(?,?,?,?,?,?)\&quot;; \n                pId=uuid.getUuid();\n                \n                \n                stmt = con.prepareStatement(queryInsertEmail);\n                stmt.setString(1, pId);\n                stmt.setString(2,sbj);\n                stmt.setString(3,sender);\n                stmt.setString(4, content);\n                stmt.setString(5, processId);\n                stmt.setString(6, nomeFicheiro);\n                stmt.executeQuery();\n                LogUtil.info(\&quot;Email Pool \&quot; - \&quot;Foi guardado um email no processo \&quot; + processId);\n                \/\/Caso o estado estja pendente\n                if(estadoContratacao.equals(\&quot;PND\&quot;) || estadoContratacao.equals(\&quot;PNDEQ\&quot;)){\n                    \/\/Atualizar Estado do processo    \n                    String queryUpdateState = \&quot;UPDATE app_fd_detalhe_processo SET c_estado_contratacao = &apos;ATV&apos; WHERE c_n_wf_pl = ?\&quot;;\n                    stmt = con.prepareStatement(queryUpdateState);        \n                    stmt.setString(1, nWfPl);\n                    stmt.executeQuery();\n                    \n                    String subProcessId= \&quot;\&quot;;\n                    String activityId = \&quot;\&quot;;\n                    \/\/Obter Id do subProcesso\n                    String queryGetProcessId = \&quot;SELECT Id FROM shkprocesses WHERE ActivityRequesterProcessId = ? order by created desc ;\&quot;;\n                    stmt = con.prepareStatement(queryGetProcessId);\n                    stmt.setObject(1, processId);\n                    rs = stmt.executeQuery();\n                    if(rs.next()){\n                        subProcessId = rs.getObject(\&quot;Id\&quot;);\n                        \n                        \/\/Atualizar o sla de Pendente para Em curso\n                        String queryReset= \&quot;UPDATE app_fd_sla_atividade SET c_estado_atividade = &apos;Em curso&apos; WHERE c_id_processo=? AND c_estado_atividade = &apos;Pendente&apos;;\&quot;; \n                        stmt = con.prepareStatement(queryReset);\n                        stmt.setObject(1, subProcessId);\n                        rs = stmt.executeQuery();\n                        LogUtil.info(\&quot;Email Pool \&quot; - \&quot;Foi atualizado o sla do processo \&quot; + processId);\n                        String queryGetActivityId = \&quot;SELECT id FROM shkactivities WHERE processId= ? order by oid desc\&quot;;\n                        stmt = con.prepareStatement(queryGetActivityId);\n                        stmt.setObject(1, subProcessId);\n                        rs = stmt.executeQuery();\n                        if(rs.next()){\n                            activityId = rs.getObject(\&quot;id\&quot;).toString();\n                        \/\/Atualizar Workflow varible    \n                            WorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\n                            wm.activityVariable(activityId,\&quot;estado\&quot;, \&quot;ATV\&quot;);\n                            LogUtil.info(\&quot;Email Pool \&quot; - \&quot;Foi atualizado o estado do processo\&quot; + processId + \&quot;para ativo \&quot; );\n                            \n                        }\n                    }\n                    \n                    \n                    \n                \n                }\n            }else{\n                \n                \/\/ Se não encontrar o process Id\n            }\n           \n            \n            \n        } else {\n     \n            \/\/System.out.println(\&quot;Connection Problem\&quot;);\n        }\n    } catch(Exception e) {\n            LogUtil.error(\&quot;Sample app - Form 1\&quot;, e, \&quot;Error loading user data in load binder\&quot;);\n    } finally {\n            \/\/always close the connection after used\n            try {\n               if(rs != null){\n                    rs.close();\n                }\n                if(stmt != null){\n                    stmt.close();\n                }\n                if(con != null) {\n                    con.close();\n                }\n            } catch(SQLException e) {\/* ignored *\/}\n    }\n    \n    \n    File theDir = new File(\&quot;C:\/Joget-DX7-Enterprise\/wflow\/app_formuploads\/comunicacoes_proce\/\&quot; + pId);\n    if (!theDir.exists()){\n        theDir.mkdirs();\n    }\n    \n    String whereToSave = theDir + \&quot;\/\&quot; + nomeFicheiro;\n    OutputStream out = new FileOutputStream(new File(whereToSave));\n    try {\n       msg.writeTo(out);\n    }\n    finally {\n       if (out != null) { out.flush(); out.close(); }\n        \n    }\n}\n\n\npublic void parseEmail(String sender, String subject, String content) {\n    String processId = null;\n    String activityId = null;\n    Map variables = new HashMap();\n    FormData formData = new FormData();\n\n    String subject_pattern = \&quot;#form.j_ave_listener.subject_pattern?java#\&quot;;\n    debug(\&quot;subject_pattern: \&quot; + subject_pattern);\n    String subject_reg = StringUtil.escapeString(subject_pattern, StringUtil.TYPE_REGEX, null);\n    debug(\&quot;subject_reg: \&quot; + subject_reg);\n    subject_reg = subject_reg.replaceAll(\&quot;\\\\\\\\\\\\{unuse\\\\\\\\\\\\}\&quot;, \&quot;([\\\\\\\\s\\\\\\\\S]*)\&quot;);\n    subject_reg = subject_reg.replaceAll(\&quot;\\\\\\\\\\\\{[a-zA-Z0-9_]+\\\\\\\\\\\\}\&quot;, \&quot;(.*?)\&quot;);\n    debug(\&quot;subject_reg: \&quot; + subject_reg);\n    String content_pattern = \&quot;#form.j_ave_listener.content_pattern?java#\&quot;;\n    debug(\&quot;content_pattern: \&quot; + content_pattern);\n    String content_reg = StringUtil.escapeString(content_pattern, StringUtil.TYPE_REGEX, null);\n    debug(\&quot;content_reg: \&quot; + content_reg);\n    content_reg = content_reg.replaceAll(\&quot;\\\\\\\\\\\\{unuse\\\\\\\\\\\\}\&quot;, \&quot;([\\\\\\\\s\\\\\\\\S]*)\&quot;);\n    content_reg = content_reg.replaceAll(\&quot;\\\\\\\\\\\\{[a-zA-Z0-9_]+\\\\\\\\\\\\}\&quot;, \&quot;(.*?)\&quot;);\n    debug(\&quot;content_reg: \&quot; + content_reg);\n\n    if (!subject_pattern.equals(subject_reg)) {\n        Pattern pattern = Pattern.compile(\&quot;\\\\{([a-zA-Z0-9_]+)\\\\}\&quot;);\n        Matcher matcher = pattern.matcher(subject_pattern);\n\n        Pattern pattern2 = Pattern.compile(\&quot;^\&quot; + subject_reg + \&quot;$\&quot;);\n        Matcher matcher2 = pattern2.matcher(subject);\n\n        while (matcher2.find()) {\n            int count = 1;\n            while (matcher.find()) {\n                String key = matcher.group(1);\n                String value = matcher2.group(count);\n                debug(\&quot;key: \&quot; + key);\n                debug(\&quot;value: \&quot; + value);\n                if (\&quot;processId\&quot;.equals(key)) {\n                    processId = value;\n                } else if (\&quot;activityId\&quot;.equals(key)) {\n                    activityId = value;\n                } else if (key.startsWith(\&quot;var_\&quot;)) {\n                    key = key.replaceAll(\&quot;var_\&quot;, \&quot;\&quot;);\n                    variables.put(key, value);\n                } else if (key.startsWith(\&quot;form_\&quot;)) {\n                    key = key.replaceAll(\&quot;form_\&quot;, \&quot;\&quot;);\n                    formData.addRequestParameterValues(key, new String[] {value});\n                }\n\n                count++;\n            }\n        }\n    }\n\n    if (!content_pattern.equals(content_reg)) {\n        Pattern pattern = Pattern.compile(\&quot;\\\\{([a-zA-Z0-9_]+)\\\\}\&quot;);\n        Matcher matcher = pattern.matcher(content_pattern);\n\n        Pattern pattern2 = Pattern.compile(\&quot;^\&quot; + content_reg + \&quot;$\&quot;);\n        Matcher matcher2 = pattern2.matcher(content);\n\n        while (matcher2.find()) {\n            int count = 1;\n            while (matcher.find()) {\n                String key = matcher.group(1);\n                String value = matcher2.group(count);\n                debug(\&quot;key: \&quot; + key);\n                debug(\&quot;value: \&quot; + value);\n                if (\&quot;processId\&quot;.equals(key)) {\n                    processId = value.trim();\n                } else if (\&quot;activityId\&quot;.equals(key)) {\n                    activityId = value.trim();\n                } else if (key.startsWith(\&quot;var_\&quot;)) {\n                    key = key.replaceAll(\&quot;var_\&quot;, \&quot;\&quot;);\n                    variables.put(key, value.trim());\n                } else if (key.startsWith(\&quot;form_\&quot;)) {\n                    key = key.replaceAll(\&quot;form_\&quot;, \&quot;\&quot;);\n                    formData.addRequestParameterValues(key, new String[] {value});\n                }\n\n                count++;\n            }\n        }\n    }\n\n    if (processId != null || activityId != null) {\n        completeActivity(sender, processId, activityId, formData, variables, subject, content);\n    }\n}\n\npublic boolean matchFilter(String subject) {\n    String filter = \&quot;#form.email_listener.subject_filter?java#\&quot;;\n    String filterRegex = \&quot;#form.email_listener.subject_filter?java#\&quot;;\n    \n    if ((!filter.isEmpty() &amp;&amp; !filter.startsWith(\&quot;#form.email_listener.subject_filter\&quot;)) ||(\&quot;true\&quot;.equals(\&quot;#form.email_listener.subject_filter_regex?java#\&quot;) &amp;&amp; !filterRegex.isEmpty() &amp;&amp; !filterRegex.startsWith(\&quot;#form.email_listener.subject_pattern\&quot;))){       \n        try {\n            debug(\&quot;Subject filter for (\&quot;+subject+\&quot;).\&quot;);\n            if (\&quot;true\&quot;.equals(\&quot;#form.email_listener.subject_filter_regex?java#\&quot;)) {\n                Pattern patternSubject = Pattern.compile(\&quot;(\\\\w{3,}\\\\d{6,}|\\\\d{6,})\&quot;);\n                Matcher m = patternSubject.matcher(subject);\n                if (m.find()) {\n                    debug(\&quot;Found a match using regex subject filter\&quot;);\n                    return true;\n                }\n            } else if (subject.contains(\&quot;#form.email_listener.subject_filter?java#\&quot;)) {\n                \n                debug(\&quot;Found a match using exact subject filter\&quot;);\n                return true;\n            } else {\n                debug(\&quot;No match found on subject filter.\&quot;);\n            }\n        } catch (Exception ex) {\n            debug(\&quot;Subject filter error for (\&quot;+subject+\&quot;). \&quot; + ex.getMessage());\n        }\n        return false;\n    } else {\n        return true;\n    }\n}\n\npublic void completeActivity(String sender, String processId, String activityId, FormData formData, Map variables, String subject, String message) {\n    String username = getUsername(sender);\n\n    if (username != null) {\n        AppService appService = (AppService)AppUtil.getApplicationContext().getBean(\&quot;appService\&quot;);\n        WorkflowManager workflowManager = (WorkflowManager)AppUtil.getApplicationContext().getBean(\&quot;workflowManager\&quot;);\n        WorkflowUserManager workflowUserManager = (WorkflowUserManager)AppUtil.getApplicationContext().getBean(\&quot;workflowUserManager\&quot;);\n        String currentUsername = workflowUserManager.getCurrentUsername();\n        try {\n            \/\/ set current user\n            workflowUserManager.setCurrentThreadUser(username);\n\n            \/\/ find assignment\n            WorkflowAssignment assignment = null;\n            if (activityId != null) {\n                assignment = workflowManager.getAssignment(activityId);\n            }\n            if (processId != null) {\n                assignment = workflowManager.getAssignmentByProcess(processId);\n            }\n\n            if (assignment != null) {\n                AppDefinition currentAppDef = AppUtil.getCurrentAppDefinition();\n\n                try {\n                    String assignmentId = assignment.getActivityId();\n                    AppDefinition appDef = appService.getAppDefinitionForWorkflowActivity(assignmentId);\n\n                    activityId = assignment.getActivityId();\n                    processId = assignment.getProcessId();\n\n                    \/\/if has form data to submit\n                    if (!formData.getRequestParams().isEmpty()) {\n                        PackageActivityForm activityForm = appService.viewAssignmentForm(appDef, assignment, formData, \&quot;\&quot;, \&quot;\&quot;);\n                        if (activityForm != null &amp;&amp; activityForm.getForm() != null) {\n                            debug(\&quot;Submit Form for assignment: \&quot; + assignmentId + \&quot; \&quot; + formData.getRequestParams());\n                            appService.submitForm(activityForm.getForm(), formData, false);\n                        }\n                    }\n\n                    debug(\&quot;assignmentComplete: \&quot; + assignmentId + \&quot; \&quot; + variables);\n                    if (!assignment.isAccepted()) {\n                        workflowManager.assignmentAccept(assignmentId);\n                    }\n                    workflowManager.assignmentComplete(assignmentId, variables);\n\n                    sendAutoReply(sender, subject);\n                } finally {\n                    AppUtil.setCurrentAppDefinition(currentAppDef);\n                }\n\n                addActivityLog(sender, processId, activityId, subject, message, variables, formData.getRequestParams());\n            } else {\n                debug(\&quot;assignment not found for process(\&quot; + processId + \&quot;) or activityId(\&quot; + activityId + \&quot;)\&quot;);\n            }\n\n        } finally {\n            workflowUserManager.setCurrentThreadUser(currentUsername);\n        }\n    } else {\n        debug(\&quot;No user found for sender : \&quot; + sender);\n    }\n}\n\npublic String getUsername(String sender) {\n    \/\/ get sender\n    User user = null;\n\n    InternetAddress ia = new InternetAddress(sender);\n    String email = ia.getAddress();\n    DirectoryManager directoryManager = (DirectoryManager)AppUtil.getApplicationContext().getBean(\&quot;directoryManager\&quot;);\n    Collection users = directoryManager.getUserList(email, null, null, 0, 1);\n    if (!users.isEmpty()) {\n        user = (User)users.iterator().next();\n        return user.getUsername();\n    }\n    return null;\n}\n\npublic void sendAutoReply(String sender, String subject) {\n    if (\&quot;true\&quot;.equals(\&quot;#form.email_listener.auto_reply?java#\&quot;)) {\n        sendEmail(sender, \&quot;Re: \&quot; + subject, \&quot;#form.email_listener.smtp_message?java#\&quot;);\n    }\n}\n\npublic void sendEmail(String email, String subject, String message) {\n    PluginManager pluginManager = (PluginManager) AppUtil.getApplicationContext().getBean(\&quot;pluginManager\&quot;);\n    Plugin plugin = pluginManager.getPlugin(\&quot;org.joget.apps.app.lib.EmailTool\&quot;);\n    Map propertiesMap = new HashMap();\n    propertiesMap.put(\&quot;pluginManager\&quot;, pluginManager);\n\n    propertiesMap.put(\&quot;host\&quot;, \&quot;#form.email_listener.smtp_host?java#\&quot;);\n    propertiesMap.put(\&quot;port\&quot;, \&quot;#form.email_listener.smtp_port?java#\&quot;);\n    propertiesMap.put(\&quot;from\&quot;, \&quot;#form.email_listener.smtp_email?java#\&quot;);\n    propertiesMap.put(\&quot;username\&quot;, \&quot;#form.email_listener.smtp_email?java#\&quot;);\n    propertiesMap.put(\&quot;password\&quot;, \&quot;#form.email_listener.smtp_password?java#\&quot;);\n    propertiesMap.put(\&quot;security\&quot;, \&quot;#form.email_listener.smtp_security?java#\&quot;);\n    propertiesMap.put(\&quot;toSpecific\&quot;, email);\n    propertiesMap.put(\&quot;subject\&quot;, subject);\n    propertiesMap.put(\&quot;message\&quot;, message);\n\n    ApplicationPlugin emailTool = (ApplicationPlugin) plugin;\n    ((PropertyEditable) emailTool).setProperties(propertiesMap);\n    emailTool.execute(propertiesMap);\n}\n\npublic void addError(int messageCount, String errors) {\n    FormRowSet rows = new FormRowSet();\n    FormRow row = new FormRow();\n    row.setProperty(\&quot;listener_id\&quot;, \&quot;#form.email_listener.uid?java#\&quot;);\n    row.setProperty(\&quot;count\&quot;, Integer.toString(messageCount));\n    row.setProperty(\&quot;errors\&quot;, errors);\n    Date now = new Date();\n    row.setDateCreated(now);\n    row.setDateModified(now);\n    rows.add(row);\n\n    storeFormData(\&quot;j_ave_log_error\&quot;, \&quot;errorLog\&quot;, rows);\n}\n\npublic void addActivityLog(String sender, String processId, String activityId, String subject, String message, Map variables, Map formData) {\n    FormRow row = new FormRow();\n    row.setProperty(\&quot;listener_id\&quot;, \&quot;#form.email_listener.uid?java#\&quot;);\n    row.setProperty(\&quot;sender\&quot;, sender);\n    row.setProperty(\&quot;processId\&quot;, processId);\n    row.setProperty(\&quot;activityId\&quot;, activityId);\n    row.setProperty(\&quot;subject\&quot;, subject);\n    row.setProperty(\&quot;message\&quot;, message);\n    row.setProperty(\&quot;variables\&quot;, \&quot;Variables: \\n\&quot; + variables.toString() + \&quot;\\n\\nData: \\n\&quot; + formData.toString());\n\n    Date now = new Date();\n\n    row.setDateCreated(now);\n    row.setDateModified(now);\n\n    activitiesLog.add(row);\n}\n\npublic void storeFormData(String tableName, String formId, FormRowSet rows) {\n    AppService appService = (AppService) AppUtil.getApplicationContext().getBean(\&quot;appService\&quot;);\n    appService.storeFormData(formId, tableName, rows, null);\n}\n\npublic void debug(String msg) {\n    if (\&quot;true\&quot;.equals(\&quot;#form.email_listener.debug?java#\&quot;)) {\n        LogUtil.info(\&quot;App: Approval Via Email System\&quot;, msg);\n    }\n}\n\nprivate String getTextFromMimeMultipart(MimeMultipart mimeMultipart)  throws MessagingException, IOException{\n    String result = \&quot;\&quot;;\n    int count = mimeMultipart.getCount();\n    for (int i = 0; i &lt; count; i++) {\n        BodyPart bodyPart = mimeMultipart.getBodyPart(i);\n        debug(\&quot;CONTENT TYPE \&quot; + bodyPart.getContentType());\n        \/*if (bodyPart.isMimeType(\&quot;text\/plain\&quot;)) {\n            result = result + \&quot;\\n\&quot; + bodyPart.getContent();\n            debug(\&quot;TEXT PLAIN CONTENT TYPE\&quot; + result);\n            break; \/\/ without break same text appears twice in my tests\n        } else *\/\n        if (bodyPart.isMimeType(\&quot;text\/html\&quot;)) {\n            String html = (String) bodyPart.getContent();\n            result = result + html;\n            debug(\&quot;HTML CONTENT TYPE\&quot; + result);\n            break;\/\/result + \&quot;\\n\&quot; + org.jsoup.Jsoup.parse(html).text();\n        } else if (bodyPart.getContent() instanceof MimeMultipart){\n            result = result + getTextFromMimeMultipart((MimeMultipart)bodyPart.getContent());\n        }\n    }\n    return result;\n}\n\npollEmail();\n&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHProducaoNormal::ConfigurarProcesso</string>
               <packageActivityPlugin>
                  <processDefId>CHProducaoNormal</processDefId>
                  <activityDefId>ConfigurarProcesso</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport java.time.LocalDateTime; \r\nimport java.time.format.DateTimeFormatter;\r\nimport java.time.DayOfWeek;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport javax.sql.DataSource;\r\nimport org.joget.commons.util.UuidGenerator;\r\nimport java.time.temporal.ChronoUnit;\r\nimport java.time.LocalDate;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;flag_ultima_atividade\&quot; , \&quot;0\&quot;);\r\nwm.processVariable(ProcessID, \&quot;proxima_operativa\&quot; , \&quot;\&quot;);\r\n\r\n\r\n\r\n\/******************** SLA ****************************\/\r\n\r\npublic String calculateSLAD(String dataInicio, Collection feriados, String sla, String urgencia){\r\n    \r\n    DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\&quot;yyyy-MM-dd HH:mm\&quot;);\r\n    DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern(\&quot;yyyy-MM-dd\&quot;);\r\n    LocalDateTime dateInit = LocalDateTime.parse(dataInicio, formatter);  \r\n    LocalDateTime endDateTime = null;\r\n    String endDate = \&quot;\&quot;;\r\n    Collection holidays = feriados;\r\n    \r\n    \r\n    var hour = dateInit.getHour();\r\n    int slaNumber = Integer.parseInt(sla);\r\n    \r\n    if(urgencia.equals(\&quot;SIM\&quot;)){\r\n        \/\/Calcular SLA urgente\r\n        endDateTime = dateInit.plusHours(slaNumber);\r\n        \/\/Passar dias não uteis\r\n        while(isWeekend(endDateTime) || holidays.contains(endDateTime.format(dateFormatter))){\r\n           endDateTime = endDateTime.plusDays(1);\r\n        }\r\n        \r\n        endDate = endDateTime.format(formatter);\r\n        \r\n        \r\n     \r\n    }else{\r\n        \/\/Calcular SLA não urgente\r\n\r\n            if(hour &lt; 12){\r\n                endDateTime = dateInit.withHour(23).withMinute(59);   \/**   HORAS UTEIS???   **\/\r\n                \r\n                \/\/Incrementar dias consoante o SLA\r\n                while(slaNumber &gt; 1){\r\n                    endDateTime = endDateTime.plusDays(1);\r\n                    \/\/Passar dias não uteis\r\n                    while(isWeekend(endDateTime) || holidays.contains(endDateTime.format(dateFormatter))){\r\n                       endDateTime = endDateTime.plusDays(1);\r\n                    }   \r\n                    slaNumber -= 1;\r\n                }\r\n            }else{\r\n                endDateTime = dateInit.plusDays(1).withHour(12).withMinute(0);\r\n                \r\n                \/\/Incrementar dias consoante o SLA\r\n                while(slaNumber &gt; 1){\r\n                    endDateTime = endDateTime.plusDays(1);\r\n                    \/\/Passar dias não uteis\r\n                    while(isWeekend(endDateTime) || holidays.contains(endDateTime.format(dateFormatter))){\r\n                       endDateTime = endDateTime.plusDays(1);\r\n                    }\r\n                    slaNumber -= 1;\r\n                }\r\n            }\r\n            \r\n        endDate = endDateTime.format(formatter);\r\n    }\r\n    \r\n    return endDate;\r\n}\r\n\r\n\r\npublic boolean isWeekend(LocalDateTime dt) {\r\n    String dayOfWeek = dt.getDayOfWeek().toString();\r\n    \/\/LogUtil.info(\&quot;DAY OF WEEK\&quot;, \&quot;\&quot; + dayOfWeek);\r\n    switch(dayOfWeek) {\r\n        case \&quot;SATURDAY\&quot;:{\r\n            return true;\r\n        }\r\n        case \&quot;SUNDAY\&quot;:{\r\n            return true;\r\n        }\r\n        default:{\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\npublic String calculateSLADuration(String dataInit, Collection holidays){\r\n    DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\&quot;dd\/MM\/yyyy HH:mm\&quot;);\r\n    DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern(\&quot;yyyy-MM-dd\&quot;);\r\n    String result=\&quot;\&quot;;\r\n    \/\/if Data Init date format is not \&quot;dd\/MM\/yyyy HH:mm\&quot;\r\n    if(dataInit.charAt(2) != &apos;\/&apos;){\r\n        \/\/if Data Init date format is of the format \&quot;yyyy-MM-dd HH:mm\&quot;\r\n        if(dataInit.charAt(4) == &apos;-&apos; &amp;&amp; dataInit.charAt(10) == &apos; &apos; &amp;&amp; dataInit.charAt(13) == &apos;:&apos;){\r\n            dataInit =  dataInit.substring(8,10) + \&quot;\/\&quot; + dataInit.substring(5,7) + \&quot;\/\&quot; + dataInit.substring(0,4) + \&quot; \&quot; + dataInit.substring(11,16);\r\n        }\r\n    }\r\n\r\n    LocalDateTime dateInit = LocalDateTime.parse(dataInit, formatter);\r\n    LocalDateTime dateNow = LocalDateTime.parse(\&quot;#date.dd\/MM\/yyyy HH:mm#\&quot;,formatter);\r\n    \r\n    LocalDate dateInitDays = dateInit.toLocalDate();\r\n    LocalDate dateNowDays = dateNow.toLocalDate();\r\n    long days = ChronoUnit.DAYS.between(dateInitDays, dateNowDays);\r\n    \r\n    int initHours = dateInit.getHour();\r\n    int nowHours = dateNow.getHour();\r\n    \r\n    if(initHours &gt; 12 &amp;&amp; nowHours &lt; 12){\r\n        days= days - 1;    \r\n    }else if(days&gt;0 &amp;&amp; initHours &lt; 12 &amp;&amp; nowHours &gt;= 12){\r\n        days = days + 1;\r\n    }\r\n    \r\n    long workDays = days;\r\n    \r\n    while(days&gt;0){\r\n        \r\n        if(holidays.contains(dateInit.format(dateFormatter))){\r\n            workDays-=1;\r\n            \r\n        }else{\r\n            String day = dateInit.getDayOfWeek().toString();\r\n        \r\n            switch(day) {\r\n                case \&quot;SATURDAY\&quot;:{\r\n                    workDays-=1;\r\n                    break;\r\n                }\r\n                case \&quot;SUNDAY\&quot;:{\r\n                    workDays-=1;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        \r\n\r\n        dateInit = dateInit.plusDays(1);\r\n  \r\n        days-=1;\r\n    }\r\n    \r\n    result = \&quot;D\&quot;;\r\n    if(workDays&gt;0){\r\n        result =result + \&quot;+\&quot; + workDays;\r\n    }\r\n    \r\n    return result;\r\n}\r\n\r\n\r\n\r\npublic void updateSLA(){\r\n    Connection con = null;\r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\n    \r\n    try{\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\r\n        con = ds.getConnection();\r\n        \r\n        if(!con.isClosed()){\r\n            String operativa_anterior = \&quot;#variable.operativa_anterior#\&quot;;\r\n            String id_processo_anterior = \&quot;#variable.id_processo_anterior#\&quot;;\r\n            String id_processo_contratacao = \&quot;#variable.id_processo_contratacao#\&quot;;\r\n            \r\n            \/\/Obter feriados\r\n            String queryGetHolidays = \&quot;SELECT * FROM app_fd_lista_feriados;\&quot;;\r\n            stmt = con.prepareStatement(queryGetHolidays);\r\n            rs = stmt.executeQuery();\r\n            Collection holidays = new ArrayList(); \r\n            \r\n            while(rs.next()){\r\n                holidays.add(rs.getObject(\&quot;c_data\&quot;));\r\n            }\r\n            \r\n            if(!operativa_anterior.equals(\&quot;PRODUCAO\&quot;) &amp;&amp; !operativa_anterior.trim().isEmpty()){\r\n\r\n                if(operativa_anterior.equals(\&quot;FILTRO\&quot;)){\r\n                    \/\/Obter data Inicial do SLA\r\n                    String queryGetDateInitSla = \&quot;SELECT c_data_inicio FROM app_fd_sla_atividade WHERE  c_id_processo=? AND c_estado_atividade = &apos;Em espera&apos;;\&quot;;\r\n                    stmt = con.prepareStatement(queryGetDateInitSla);\r\n                    stmt.setObject(1, id_processo_contratacao);\r\n                    rs = stmt.executeQuery();\r\n                    String dataInitCNT =\&quot;\&quot;;\r\n                    if(rs.next()){\r\n                        dataInitCNT = rs.getObject(\&quot;c_data_inicio\&quot;).toString();\r\n                    }\r\n                    rs=null;\r\n                    \r\n                    \r\n                    String slaDurationCNT = calculateSLADuration(dataInitCNT, holidays);\r\n                    LogUtil.info(\&quot;Data Incio\&quot;, \&quot;AAAAAa\&quot; + dataInitCNT);\r\n                    \/\/Atualizar o sla Em curso para fechado\r\n                    String queryReset= \&quot;UPDATE app_fd_sla_atividade SET c_estado_atividade = &apos;Fechada&apos;, c_data_conclusao=? , c_duracao = ? WHERE c_id_processo=? AND c_estado_atividade = &apos;Em espera&apos;;\&quot;; \r\n                    stmt = con.prepareStatement(queryReset);\r\n                    stmt.setObject(1,\&quot;#date.yyyy-MM-dd HH:mm#\&quot;);\r\n                    stmt.setObject(2, slaDurationCNT);\r\n                    stmt.setObject(3, id_processo_contratacao);\r\n                    rs = stmt.executeQuery();\r\n                    rs=null;\r\n                    \r\n                    \/\/LogUtil.info(\&quot;Fechar SLA Contratação\&quot;, \&quot;AAAAAA\&quot; + id_processo_contratacao);\r\n                }\r\n                \r\n                \r\n                \r\n                \r\n                \r\n                \/\/Obter data Inicial do SLA\r\n                String queryGetDateInitSla = \&quot;SELECT c_data_inicio FROM app_fd_sla_atividade WHERE  c_id_processo=? AND c_estado_atividade = &apos;Em curso&apos;;\&quot;;\r\n                stmt = con.prepareStatement(queryGetDateInitSla);\r\n                stmt.setObject(1, id_processo_anterior);\r\n                rs = stmt.executeQuery();\r\n                String dataInit =\&quot;\&quot;;\r\n                if(rs.next()){\r\n                    dataInit = rs.getObject(\&quot;c_data_inicio\&quot;).toString();\r\n                }\r\n                rs=null;\r\n                \r\n                String slaDuration = \&quot;\&quot;;\r\n                if(!dataInit.isEmpty()){\r\n                    slaDuration = calculateSLADuration(dataInit, holidays);\r\n                }\r\n                LogUtil.info(\&quot;Data Incio\&quot;, \&quot;AAAAAa\&quot; + dataInitCNT);\r\n                LogUtil.info(\&quot;SLA Duracao\&quot;, \&quot;AAAAAa\&quot; + slaDuration);\r\n                \r\n                \/\/Atualizar o sla Em curso para fechado\r\n                String queryReset= \&quot;UPDATE app_fd_sla_atividade SET c_estado_atividade = &apos;Fechada&apos;, c_data_conclusao=? , c_duracao = ? WHERE c_id_processo=? AND c_estado_atividade = &apos;Em curso&apos;;\&quot;; \r\n                stmt = con.prepareStatement(queryReset);\r\n                stmt.setObject(1,\&quot;#date.yyyy-MM-dd HH:mm#\&quot;);\r\n                stmt.setObject(2, slaDuration);\r\n                stmt.setObject(3, id_processo_anterior);\r\n                rs = stmt.executeQuery();\r\n                rs=null;\r\n                \r\n                \/\/Obter detalhes da tarefa\r\n                String queryGetAssignment = \&quot;SELECT name FROM shkprocesses WHERE id=?;\&quot;;\r\n                String queryGetUserAssign = \&quot;SELECT resourceid FROM shkassignmentstable WHERE activityprocessid =?\&quot;;\r\n                String nomeAtividade = \&quot;\&quot;;\r\n                String utilizador = \&quot;\&quot;;\r\n                stmt = con.prepareStatement(queryGetAssignment);\r\n                stmt.setObject(1, ProcessID);\r\n                rs = stmt.executeQuery();\r\n                \r\n                if(rs.next()){\r\n                    nomeAtividade= rs.getObject(\&quot;name\&quot;).toString();\r\n                    rs=null;\r\n                }\r\n                \r\n                stmt = con.prepareStatement(queryGetUserAssign);\r\n                stmt.setObject(1, ProcessID);\r\n                rs = stmt.executeQuery();\r\n                \r\n                if(rs.next()){\r\n                    utilizador= rs.getObject(\&quot;resourceid\&quot;).toString();\r\n                    rs=null;\r\n                }\r\n                \r\n                \r\n                       \r\n                        \r\n                \/\/Obter Urgencia\r\n                String urgente = \&quot;\&quot;;\r\n                String recordId = \&quot;#process.recordId#\&quot;;\r\n                String queryGetUrgencia = \&quot;SELECT c_urgencia FROM app_fd_detalhe_processo WHERE c_id_processo = ?\&quot;;\r\n                stmt = con.prepareStatement(queryGetUrgencia);\r\n                stmt.setObject(1, recordId);\r\n                rs = stmt.executeQuery();\r\n                \r\n                if(rs.next()){\r\n                   urgente = rs.getObject(\&quot;c_urgencia\&quot;);\r\n                }\r\n                \r\n                \/\/Obter configurações de SLA consoante a operativa e urgencia\r\n                String paramOperativa = \&quot;PRODUCAO\&quot;;\r\n                String queryGetSLAConfig = \&quot;SELECT * FROM app_fd_valores_sla WHERE c_nome like ? \&quot;;\r\n                if(urgente.equals(\&quot;SIM\&quot;)){\r\n                    queryGetSLAConfig += \&quot;AND c_nome like &apos;%URGENTE&apos;\&quot;;\r\n                    paramOperativa += \&quot;%\&quot;;\r\n                }\r\n                \r\n                stmt = con.prepareStatement(queryGetSLAConfig);\r\n                stmt.setObject(1, paramOperativa);\r\n                rs = stmt.executeQuery();\r\n                String sla = \&quot;\&quot;; \r\n                if(rs.next()){\r\n                    sla = rs.getObject(\&quot;c_sla\&quot;);\r\n                }\r\n                \r\n                \r\n                \r\n                String queryCreateSLA = \&quot;INSERT INTO app_fd_sla_atividade (id, dateCreated, dateModified, createdBy,createdByName ,modifiedBy, modifiedByName, c_data_inicio, c_data_fim, c_nome_atividade, c_id_processo, c_utilizador_atribuido, c_estado_atividade, c_duracao) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?);\&quot;;\r\n                stmt = con.prepareStatement(queryCreateSLA);\r\n                \r\n                var idSLA = UuidGenerator.getInstance().getUuid();\r\n                var dateNow =\&quot;#date.yyyy-MM-dd HH:mm#\&quot;;\r\n                var currentUsername = \&quot;#currentUser.username#\&quot;;\r\n                var currentNameUser = \&quot;#currentUser.firstName#\&quot; + \&quot;#currentUser.lastName#\&quot;;\r\n                String dataFim = calculateSLAD(dateNow, holidays, sla, urgente);\r\n                String duracao = \&quot;D\&quot;;\r\n                \r\n                var estadoAtividade = \&quot;Em curso\&quot;;\r\n                stmt.setObject(1, idSLA);\r\n                stmt.setObject(2, dateNow);\r\n                stmt.setObject(3, dateNow);\r\n                stmt.setObject(4, currentUsername);\r\n                stmt.setObject(5, currentNameUser);\r\n                stmt.setObject(6, currentUsername);\r\n                stmt.setObject(7, currentNameUser);\r\n                stmt.setObject(8, dateNow);\r\n                stmt.setObject(9, dataFim);   \r\n                stmt.setObject(10, nomeAtividade);\r\n                stmt.setObject(11, ProcessID);\r\n                stmt.setObject(12, utilizador);\r\n                stmt.setObject(13, estadoAtividade);\r\n                stmt.setObject(14, duracao);\r\n    \r\n                rs = stmt.executeQuery();\r\n                \r\n               \r\n            }\r\n\r\n        }\r\n      \r\n    }catch(Exception e){\r\n                LogUtil.error(appDef.toString(), e, \&quot;Error getting info from DB\&quot;);\r\n            }finally{\r\n                try{\r\n                    if(rs != null){\r\n                    rs.close();\r\n                    }\r\n                    if(stmt != null){\r\n                        stmt.close();\r\n                    }\r\n                    if(con != null &amp;&amp; !con.isClosed()) {\r\n                        con.close();\r\n                    }\r\n                }catch(Exception e){\r\n                    LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\r\n                }\r\n                \r\n            }\r\n}\r\nupdateSLA();\r\nwm.processVariable(ProcessID, \&quot;operativa_anterior\&quot; , \&quot;PRODUCAO\&quot;);\r\nwm.processVariable(ProcessID, \&quot;id_processo_anterior\&quot; , ProcessID);&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHValidacaoNormal::ConfigurarProcesso</string>
               <packageActivityPlugin>
                  <processDefId>CHValidacaoNormal</processDefId>
                  <activityDefId>ConfigurarProcesso</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport java.time.LocalDateTime; \r\nimport java.time.format.DateTimeFormatter;\r\nimport java.time.DayOfWeek;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport javax.sql.DataSource;\r\nimport org.joget.commons.util.UuidGenerator;\r\nimport java.time.temporal.ChronoUnit;\r\nimport java.time.LocalDate;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;flag_ultima_atividade\&quot; , \&quot;0\&quot;);\r\nwm.processVariable(ProcessID, \&quot;proxima_operativa\&quot; , \&quot;\&quot;);\r\n\/\/wm.processVariable(ProcessID, \&quot;flag_update_userVal\&quot; , \&quot;NAO\&quot;);\r\n\r\n\r\n\r\n\r\n\/******************** SLA ****************************\/\r\n\r\npublic String calculateSLAD(String dataInicio, Collection feriados, String sla, String urgencia){\r\n    \r\n    DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\&quot;yyyy-MM-dd HH:mm\&quot;);\r\n    DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern(\&quot;yyyy-MM-dd\&quot;);\r\n    LocalDateTime dateInit = LocalDateTime.parse(dataInicio, formatter);  \r\n    LocalDateTime endDateTime = null;\r\n    String endDate = \&quot;\&quot;;\r\n    Collection holidays = feriados;\r\n    \r\n    \r\n    var hour = dateInit.getHour();\r\n    int slaNumber = Integer.parseInt(sla);\r\n    \r\n    if(urgencia.equals(\&quot;SIM\&quot;)){\r\n        \/\/Calcular SLA urgente\r\n        endDateTime = dateInit.plusHours(slaNumber);\r\n        \/\/Passar dias não uteis\r\n        while(isWeekend(endDateTime) || holidays.contains(endDateTime.format(dateFormatter))){\r\n           endDateTime = endDateTime.plusDays(1);\r\n        }\r\n        \r\n        endDate = endDateTime.format(formatter);\r\n        \r\n        \r\n     \r\n    }else{\r\n        \/\/Calcular SLA não urgente\r\n\r\n            if(hour &lt; 12){\r\n                endDateTime = dateInit.withHour(23).withMinute(59);   \/**   HORAS UTEIS???   **\/\r\n                \r\n                \/\/Incrementar dias consoante o SLA\r\n                while(slaNumber &gt; 1){\r\n                    endDateTime = endDateTime.plusDays(1);\r\n                    \/\/Passar dias não uteis\r\n                    while(isWeekend(endDateTime) || holidays.contains(endDateTime.format(dateFormatter))){\r\n                       endDateTime = endDateTime.plusDays(1);\r\n                    }   \r\n                    slaNumber -= 1;\r\n                }\r\n            }else{\r\n                endDateTime = dateInit.plusDays(1).withHour(12).withMinute(0);\r\n                \r\n                \/\/Incrementar dias consoante o SLA\r\n                while(slaNumber &gt; 1){\r\n                    endDateTime = endDateTime.plusDays(1);\r\n                    \/\/Passar dias não uteis\r\n                    while(isWeekend(endDateTime) || holidays.contains(endDateTime.format(dateFormatter))){\r\n                       endDateTime = endDateTime.plusDays(1);\r\n                    }\r\n                    slaNumber -= 1;\r\n                }\r\n            }\r\n            \r\n        endDate = endDateTime.format(formatter);\r\n    }\r\n    \r\n    return endDate;\r\n}\r\n\r\n\r\npublic boolean isWeekend(LocalDateTime dt) {\r\n    String dayOfWeek = dt.getDayOfWeek().toString();\r\n    \/\/LogUtil.info(\&quot;DAY OF WEEK\&quot;, \&quot;\&quot; + dayOfWeek);\r\n    switch(dayOfWeek) {\r\n        case \&quot;SATURDAY\&quot;:{\r\n            return true;\r\n        }\r\n        case \&quot;SUNDAY\&quot;:{\r\n            return true;\r\n        }\r\n        default:{\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\npublic String calculateSLADuration(String dataInit, Collection holidays){\r\n    DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\&quot;dd\/MM\/yyyy HH:mm\&quot;);\r\n    DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern(\&quot;yyyy-MM-dd\&quot;);\r\n    String result=\&quot;\&quot;;\r\n    \/\/if Data Init date format is not \&quot;dd\/MM\/yyyy HH:mm\&quot;\r\n    if(dataInit.charAt(2) != &apos;\/&apos;){\r\n        \/\/if Data Init date format is of the format \&quot;yyyy-MM-dd HH:mm\&quot;\r\n        if(dataInit.charAt(4) == &apos;-&apos; &amp;&amp; dataInit.charAt(10) == &apos; &apos; &amp;&amp; dataInit.charAt(13) == &apos;:&apos;){\r\n            dataInit =  dataInit.substring(8,10) + \&quot;\/\&quot; + dataInit.substring(5,7) + \&quot;\/\&quot; + dataInit.substring(0,4) + \&quot; \&quot; + dataInit.substring(11,16);\r\n        }\r\n    }\r\n\r\n    LocalDateTime dateInit = LocalDateTime.parse(dataInit, formatter);\r\n    LocalDateTime dateNow = LocalDateTime.parse(\&quot;#date.dd\/MM\/yyyy HH:mm#\&quot;,formatter);\r\n    \r\n    LocalDate dateInitDays = dateInit.toLocalDate();\r\n    LocalDate dateNowDays = dateNow.toLocalDate();\r\n    long days = ChronoUnit.DAYS.between(dateInitDays, dateNowDays);\r\n    \r\n    int initHours = dateInit.getHour();\r\n    int nowHours = dateNow.getHour();\r\n    \r\n    if(initHours &gt; 12 &amp;&amp; nowHours &lt; 12){\r\n        days= days - 1;    \r\n    }else if(days&gt;0 &amp;&amp; initHours &lt; 12 &amp;&amp; nowHours &gt;= 12){\r\n        days = days + 1;\r\n    }\r\n    \r\n    long workDays = days;\r\n    \r\n    while(days&gt;0){\r\n        \r\n        if(holidays.contains(dateInit.format(dateFormatter))){\r\n            workDays-=1;\r\n            \r\n        }else{\r\n            String day = dateInit.getDayOfWeek().toString();\r\n        \r\n            switch(day) {\r\n                case \&quot;SATURDAY\&quot;:{\r\n                    workDays-=1;\r\n                    break;\r\n                }\r\n                case \&quot;SUNDAY\&quot;:{\r\n                    workDays-=1;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        \r\n\r\n        dateInit = dateInit.plusDays(1);\r\n  \r\n        days-=1;\r\n    }\r\n    \r\n    result = \&quot;D\&quot;;\r\n    if(workDays&gt;0){\r\n        result =result + \&quot;+\&quot; + workDays;\r\n    }\r\n    \r\n    \r\n    return result;\r\n}\r\n\r\n\r\n\r\npublic void updateSLA(){\r\n    Connection con = null;\r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\n    \r\n    try{\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\r\n        con = ds.getConnection();\r\n        \r\n        if(!con.isClosed()){\r\n            String operativa_anterior = \&quot;#variable.operativa_anterior#\&quot;;\r\n            String id_processo_anterior = \&quot;#variable.id_processo_anterior#\&quot;;\r\n            \r\n            \/\/Obter feriados\r\n            String queryGetHolidays = \&quot;SELECT * FROM app_fd_lista_feriados;\&quot;;\r\n            stmt = con.prepareStatement(queryGetHolidays);\r\n            rs = stmt.executeQuery();\r\n            Collection holidays = new ArrayList(); \r\n            \r\n            while(rs.next()){\r\n                holidays.add(rs.getObject(\&quot;c_data\&quot;));\r\n            }\r\n            \r\n            if(!operativa_anterior.equals(\&quot;VALIDACAO\&quot;) &amp;&amp; !operativa_anterior.trim().isEmpty()){\r\n                \r\n               \/\/Obter data Inicial do SLA\r\n                String queryGetDateInitSla = \&quot;SELECT c_data_inicio FROM app_fd_sla_atividade WHERE  c_id_processo=? AND c_estado_atividade = &apos;Em curso&apos;;\&quot;;\r\n                stmt = con.prepareStatement(queryGetDateInitSla);\r\n                stmt.setObject(1, id_processo_anterior);\r\n                rs = stmt.executeQuery();\r\n                String dataInit =\&quot;\&quot;;\r\n                if(rs.next()){\r\n                    dataInit = rs.getObject(\&quot;c_data_inicio\&quot;).toString();\r\n                }\r\n                rs=null;\r\n                \r\n                String slaDuration = calculateSLADuration(dataInit, holidays);\r\n                \/\/Atualizar o sla Em curso para fechado\r\n                String queryReset= \&quot;UPDATE app_fd_sla_atividade SET c_estado_atividade = &apos;Fechada&apos;, c_data_conclusao=? , c_duracao = ? WHERE c_id_processo=? AND c_estado_atividade = &apos;Em curso&apos;;\&quot;; \r\n                stmt = con.prepareStatement(queryReset);\r\n                stmt.setObject(1,\&quot;#date.yyyy-MM-dd HH:mm#\&quot;);\r\n                stmt.setObject(2, slaDuration);\r\n                stmt.setObject(3, id_processo_anterior);\r\n                rs = stmt.executeQuery();\r\n                rs=null;\r\n                \r\n                \/\/Obter detalhes da tarefa\r\n                String queryGetAssignment = \&quot;SELECT name FROM shkprocesses WHERE id=?;\&quot;;\r\n                String queryGetUserAssign = \&quot;SELECT resourceid FROM shkassignmentstable WHERE activityprocessid =?\&quot;;\r\n                String nomeAtividade = \&quot;\&quot;;\r\n                String utilizador = \&quot;\&quot;;\r\n                stmt = con.prepareStatement(queryGetAssignment);\r\n                stmt.setObject(1, ProcessID);\r\n                rs = stmt.executeQuery();\r\n                \r\n                if(rs.next()){\r\n                    nomeAtividade= rs.getObject(\&quot;name\&quot;).toString();\r\n                    rs=null;\r\n                }\r\n                \r\n                stmt = con.prepareStatement(queryGetUserAssign);\r\n                stmt.setObject(1, ProcessID);\r\n                rs = stmt.executeQuery();\r\n                \r\n                if(rs.next()){\r\n                    utilizador= rs.getObject(\&quot;resourceid\&quot;).toString();\r\n                    rs=null;\r\n                }\r\n                \r\n                \r\n                        \r\n                \/\/Obter Urgencia\r\n                String urgente = \&quot;\&quot;;\r\n                String recordId = \&quot;#process.recordId#\&quot;;\r\n                String queryGetUrgencia = \&quot;SELECT c_urgencia FROM app_fd_detalhe_processo WHERE c_id_processo = ?\&quot;;\r\n                stmt = con.prepareStatement(queryGetUrgencia);\r\n                stmt.setObject(1, recordId);\r\n                rs = stmt.executeQuery();\r\n                \r\n                if(rs.next()){\r\n                   urgente = rs.getObject(\&quot;c_urgencia\&quot;);\r\n                }\r\n                \r\n                \/\/Obter configurações de SLA consoante a operativa e urgencia\r\n                String paramOperativa = \&quot;VALIDACAO\&quot;;\r\n                String queryGetSLAConfig = \&quot;SELECT * FROM app_fd_valores_sla WHERE c_nome like ? \&quot;;\r\n                if(urgente.equals(\&quot;SIM\&quot;)){\r\n                    queryGetSLAConfig += \&quot;AND c_nome like &apos;%URGENTE&apos;\&quot;;\r\n                    paramOperativa += \&quot;%\&quot;;\r\n                }\r\n                \r\n                stmt = con.prepareStatement(queryGetSLAConfig);\r\n                stmt.setObject(1, paramOperativa);\r\n                rs = stmt.executeQuery();\r\n                String sla = \&quot;\&quot;; \r\n                if(rs.next()){\r\n                    sla = rs.getObject(\&quot;c_sla\&quot;);\r\n                }\r\n                \r\n                \r\n                \r\n                String queryCreateSLA = \&quot;INSERT INTO app_fd_sla_atividade (id, dateCreated, dateModified, createdBy,createdByName ,modifiedBy, modifiedByName, c_data_inicio, c_data_fim, c_nome_atividade, c_id_processo, c_utilizador_atribuido, c_estado_atividade, c_duracao) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?);\&quot;;\r\n                stmt = con.prepareStatement(queryCreateSLA);\r\n                \r\n                var idSLA = UuidGenerator.getInstance().getUuid();\r\n                var dateNow =\&quot;#date.yyyy-MM-dd HH:mm#\&quot;;\r\n                var currentUsername = \&quot;#currentUser.username#\&quot;;\r\n                var currentNameUser = \&quot;#currentUser.firstName#\&quot; + \&quot;#currentUser.lastName#\&quot;;\r\n                String dataFim = calculateSLAD(dateNow, holidays, sla, urgente);\r\n               String duracao = \&quot;D\&quot;;\r\n               \r\n                var estadoAtividade = \&quot;Em curso\&quot;;\r\n                stmt.setObject(1, idSLA);\r\n                stmt.setObject(2, dateNow);\r\n                stmt.setObject(3, dateNow);\r\n                stmt.setObject(4, currentUsername);\r\n                stmt.setObject(5, currentNameUser);\r\n                stmt.setObject(6, currentUsername);\r\n                stmt.setObject(7, currentNameUser);\r\n                stmt.setObject(8, dateNow);\r\n                stmt.setObject(9, dataFim);   \r\n                stmt.setObject(10, nomeAtividade);\r\n                stmt.setObject(11, ProcessID);\r\n                stmt.setObject(12, utilizador);\r\n                stmt.setObject(13, estadoAtividade);\r\n                stmt.setObject(14, duracao);\r\n    \r\n                rs = stmt.executeQuery();\r\n                 \r\n            }\r\n            \r\n            \/\/Atualizar fase do processo\r\n            String recordId = \&quot;#process.recordId#\&quot;;\r\n                if(recordId!=null){\r\n                    String updateFaseProcesso = \&quot;UPDATE app_fd_detalhe_processo SET c_fase_processo = ? WHERE c_id_processo = ?\&quot;;\r\n                    stmt = con.prepareStatement(updateFaseProcesso);\r\n                    stmt.setObject(1, \&quot;VAL\&quot;);\r\n                    stmt.setObject(2, recordId);\r\n                    rs = stmt.executeQuery();\r\n                }\r\n            \r\n   \r\n        }\r\n      \r\n    }catch(Exception e){\r\n                LogUtil.error(appDef.toString(), e, \&quot;Error getting info from DB\&quot;);\r\n            }finally{\r\n                try{\r\n                    if(rs != null){\r\n                    rs.close();\r\n                    }\r\n                    if(stmt != null){\r\n                        stmt.close();\r\n                    }\r\n                    if(con != null &amp;&amp; !con.isClosed()) {\r\n                        con.close();\r\n                    }\r\n                }catch(Exception e){\r\n                    LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\r\n                }\r\n                \r\n            }\r\n}\r\nupdateSLA();\r\nwm.processVariable(ProcessID, \&quot;operativa_anterior\&quot; , \&quot;VALIDACAO\&quot;);\r\nwm.processVariable(ProcessID, \&quot;id_processo_anterior\&quot; , ProcessID);&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHProducaoComplexo::ultimaAtividadeProd</string>
               <packageActivityPlugin>
                  <processDefId>CHProducaoComplexo</processDefId>
                  <activityDefId>ultimaAtividadeProd</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;flag_ultima_atividade\&quot; , \&quot;1\&quot;);\r\n&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHAcompanhamentoOutorgas::notificarEntidade2</string>
               <packageActivityPlugin>
                  <processDefId>CHAcompanhamentoOutorgas</processDefId>
                  <activityDefId>notificarEntidade2</activityDefId>
                  <pluginName>org.joget.apps.app.lib.EmailTool</pluginName>
                  <pluginProperties>{&quot;toSpecific&quot;:&quot;#variable.email_entidade#&quot;,&quot;toParticipantId&quot;:&quot;&quot;,&quot;cc&quot;:&quot;&quot;,&quot;bcc&quot;:&quot;&quot;,&quot;subject&quot;:&quot;Email de Teste | Entidade Não-Autónoma&quot;,&quot;message&quot;:&quot;URL: http:\/\/192.168.0.104:8080\/jw\/web\/userview\/workflowPL\/UV_PL_Geral\/_\/processo1?_mode=edit&amp;id=#process.recordId#&quot;,&quot;isHtml&quot;:&quot;&quot;,&quot;from&quot;:&quot;joget_dev@plataformalegal.pt&quot;,&quot;host&quot;:&quot;smtp.gmail.com&quot;,&quot;port&quot;:&quot;587&quot;,&quot;security&quot;:&quot;TLS&quot;,&quot;username&quot;:&quot;joget_dev@plataformalegal.pt&quot;,&quot;password&quot;:&quot;%%%%/vzD1elYplg6VmM2LEvDkP8CuRavnr2Ny881HpW+1xc=%%%%&quot;,&quot;formDefId&quot;:&quot;&quot;,&quot;fields&quot;:[],&quot;files&quot;:[],&quot;icsAttachement&quot;:&quot;&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHAcompanhamentoOutorgas::printEmail</string>
               <packageActivityPlugin>
                  <processDefId>CHAcompanhamentoOutorgas</processDefId>
                  <activityDefId>printEmail</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.commons.util.LogUtil;\n\n\/*\nString entidadeEmail = \&quot;#variable.email_entidade#\&quot;;\nLogUtil.info(\&quot;TIAGOOOOOOOOOOOO\&quot;, \&quot;Email na WF Var: \&quot; + entidadeEmail);\n\nString tipoEntidade = \&quot;#variable.tipo_entidade#\&quot;;\nLogUtil.info(\&quot;TIAGOOOOOOOOOOOO\&quot;, \&quot;Tipo de Entidade na Wf Var: \&quot; + tipoEntidade);\n*\/&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::validacaoBancariaLegalGEN</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <activityDefId>validacaoBancariaLegalGEN</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;validacaoBancariaLegalGEN&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;&quot;,&quot;deptId&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;#i18n.msg_realocar#&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;&quot;,&quot;properties&quot;:{}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;true&quot;,&quot;showProcessName&quot;:&quot;&quot;,&quot;showFutureActivities&quot;:&quot;true&quot;,&quot;showSkippedActivities&quot;:&quot;&quot;,&quot;usernameFormat&quot;:&quot;name&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::PreenchimentoProcessoMG</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <activityDefId>PreenchimentoProcessoMG</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;PreenchimentoProcessoMG&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;&quot;,&quot;deptId&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;#i18n.msg_realocar#&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;&quot;,&quot;properties&quot;:{}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;true&quot;,&quot;showProcessName&quot;:&quot;&quot;,&quot;showFutureActivities&quot;:&quot;true&quot;,&quot;showSkippedActivities&quot;:&quot;&quot;,&quot;usernameFormat&quot;:&quot;name&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::validacaoBancariaLegalBCP</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <activityDefId>validacaoBancariaLegalBCP</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;validacaoBancariaLegalBCP&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;&quot;,&quot;deptId&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;#i18n.msg_realocar#&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;&quot;,&quot;properties&quot;:{}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;true&quot;,&quot;showProcessName&quot;:&quot;&quot;,&quot;showFutureActivities&quot;:&quot;true&quot;,&quot;showSkippedActivities&quot;:&quot;&quot;,&quot;usernameFormat&quot;:&quot;name&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoNormal::ConfigurarProcesso</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <activityDefId>ConfigurarProcesso</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport java.time.LocalDateTime; \r\nimport java.time.format.DateTimeFormatter;\r\nimport java.time.DayOfWeek;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport javax.sql.DataSource;\r\nimport org.joget.commons.util.UuidGenerator;\r\nimport java.time.temporal.ChronoUnit;\r\nimport java.time.LocalDate;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;flag_ultima_atividade\&quot; , \&quot;0\&quot;);\r\nwm.processVariable(ProcessID, \&quot;proxima_operativa\&quot; , \&quot;\&quot;);\r\n\r\n\r\n\r\n\/******************** SLA ****************************\/\r\n\r\npublic String calculateSLAD(String dataInicio, Collection feriados, String sla, String urgencia){\r\n    \r\n    DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\&quot;yyyy-MM-dd HH:mm\&quot;);\r\n    DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern(\&quot;yyyy-MM-dd\&quot;);\r\n    LocalDateTime dateInit = LocalDateTime.parse(dataInicio, formatter);  \r\n    LocalDateTime endDateTime = null;\r\n    String endDate = \&quot;\&quot;;\r\n    Collection holidays = feriados;\r\n    \r\n    \r\n    var hour = dateInit.getHour();\r\n    int slaNumber = Integer.parseInt(sla);\r\n    \r\n    if(urgencia.equals(\&quot;SIM\&quot;)){\r\n        \/\/Calcular SLA urgente\r\n        endDateTime = dateInit.plusHours(slaNumber);\r\n        \/\/Passar dias não uteis\r\n        while(isWeekend(endDateTime) || holidays.contains(endDateTime.format(dateFormatter))){\r\n           endDateTime = endDateTime.plusDays(1);\r\n        }\r\n        \r\n        endDate = endDateTime.format(formatter);\r\n        \r\n        \r\n     \r\n    }else{\r\n        \/\/Calcular SLA não urgente\r\n\r\n            if(hour &lt; 12){\r\n                endDateTime = dateInit.withHour(23).withMinute(59);   \/**   HORAS UTEIS???   **\/\r\n                \r\n                \/\/Incrementar dias consoante o SLA\r\n                while(slaNumber &gt; 1){\r\n                    endDateTime = endDateTime.plusDays(1);\r\n                    \/\/Passar dias não uteis\r\n                    while(isWeekend(endDateTime) || holidays.contains(endDateTime.format(dateFormatter))){\r\n                       endDateTime = endDateTime.plusDays(1);\r\n                    }   \r\n                    slaNumber -= 1;\r\n                }\r\n            }else{\r\n                endDateTime = dateInit.plusDays(1).withHour(12).withMinute(0);\r\n                \r\n                \/\/Incrementar dias consoante o SLA\r\n                while(slaNumber &gt; 1){\r\n                    endDateTime = endDateTime.plusDays(1);\r\n                    \/\/Passar dias não uteis\r\n                    while(isWeekend(endDateTime) || holidays.contains(endDateTime.format(dateFormatter))){\r\n                       endDateTime = endDateTime.plusDays(1);\r\n                    }\r\n                    slaNumber -= 1;\r\n                }\r\n            }\r\n            \r\n        endDate = endDateTime.format(formatter);\r\n    }\r\n    \r\n    return endDate;\r\n}\r\n\r\n\r\n\r\npublic String calculateSLADuration(String dataInit, Collection holidays){\r\n    DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\&quot;dd\/MM\/yyyy HH:mm\&quot;);\r\n    DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern(\&quot;yyyy-MM-dd\&quot;);\r\n    String result=\&quot;\&quot;;\r\n    \/\/if Data Init date format is not \&quot;dd\/MM\/yyyy HH:mm\&quot;\r\n    if(dataInit.charAt(2) != &apos;\/&apos;){\r\n        \/\/if Data Init date format is of the format \&quot;yyyy-MM-dd HH:mm\&quot;\r\n        if(dataInit.charAt(4) == &apos;-&apos; &amp;&amp; dataInit.charAt(10) == &apos; &apos; &amp;&amp; dataInit.charAt(13) == &apos;:&apos;){\r\n            dataInit =  dataInit.substring(8,10) + \&quot;\/\&quot; + dataInit.substring(5,7) + \&quot;\/\&quot; + dataInit.substring(0,4) + \&quot; \&quot; + dataInit.substring(11,16);\r\n        }\r\n    }\r\n\r\n    LocalDateTime dateInit = LocalDateTime.parse(dataInit, formatter);\r\n    LocalDateTime dateNow = LocalDateTime.parse(\&quot;#date.dd\/MM\/yyyy HH:mm#\&quot;,formatter);\r\n    \r\n    LocalDate dateInitDays = dateInit.toLocalDate();\r\n    LocalDate dateNowDays = dateNow.toLocalDate();\r\n    long days = ChronoUnit.DAYS.between(dateInitDays, dateNowDays);\r\n    \r\n    int initHours = dateInit.getHour();\r\n    int nowHours = dateNow.getHour();\r\n    \r\n    if(initHours &gt; 12 &amp;&amp; nowHours &lt; 12){\r\n        days= days - 1;    \r\n    }else if(days&gt;0 &amp;&amp; initHours &lt; 12 &amp;&amp; nowHours &gt;= 12){\r\n        days = days + 1;\r\n    }\r\n    \r\n    long workDays = days;\r\n    \r\n    while(days&gt;0){\r\n        \r\n        if(holidays.contains(dateInit.format(dateFormatter))){\r\n            workDays-=1;\r\n            \r\n        }else{\r\n            String day = dateInit.getDayOfWeek().toString();\r\n        \r\n            switch(day) {\r\n                case \&quot;SATURDAY\&quot;:{\r\n                    workDays-=1;\r\n                    break;\r\n                }\r\n                case \&quot;SUNDAY\&quot;:{\r\n                    workDays-=1;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        \r\n\r\n        dateInit = dateInit.plusDays(1);\r\n  \r\n        days-=1;\r\n    }\r\n    \r\n    result = \&quot;D\&quot;;\r\n    if(workDays&gt;0){\r\n        result =result + \&quot;+\&quot; + workDays;\r\n    }\r\n    \r\n    \r\n    return result;\r\n}\r\n\r\npublic boolean isWeekend(LocalDateTime dt) {\r\n    String dayOfWeek = dt.getDayOfWeek().toString();\r\n    \/\/LogUtil.info(\&quot;DAY OF WEEK\&quot;, \&quot;\&quot; + dayOfWeek);\r\n    switch(dayOfWeek) {\r\n        case \&quot;SATURDAY\&quot;:{\r\n            return true;\r\n        }\r\n        case \&quot;SUNDAY\&quot;:{\r\n            return true;\r\n        }\r\n        default:{\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\npublic void updateSLA(){\r\n    Connection con = null;\r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\n    \r\n    try{\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\r\n        con = ds.getConnection();\r\n        \r\n        if(!con.isClosed()){\r\n            String operativa_anterior = \&quot;#variable.operativa_anterior#\&quot;;\r\n            String id_processo_anterior = \&quot;#variable.id_processo_anterior#\&quot;;\r\n            String id_processo_contratacao = \&quot;#variable.id_processo_contratacao#\&quot;;\r\n\r\n            \/\/Obter feriados\r\n            String queryGetHolidays = \&quot;SELECT * FROM app_fd_lista_feriados;\&quot;;\r\n            stmt = con.prepareStatement(queryGetHolidays);\r\n            rs = stmt.executeQuery();\r\n            Collection holidays = new ArrayList(); \r\n            \r\n            while(rs.next()){\r\n                holidays.add(rs.getObject(\&quot;c_data\&quot;));\r\n            }\r\n\r\n            if(!operativa_anterior.equals(\&quot;CONTRATACAO\&quot;) &amp;&amp; !operativa_anterior.trim().isEmpty()){\r\n\r\n                \/\/Caso a operativa anterior seja Filtro apenas atualizar SLA &apos;Em espera&apos; de contratação para &apos;Em curso&apos; \r\n                if(operativa_anterior.equals(\&quot;FILTRO\&quot;)){\r\n                    \r\n                    \/\/Atualizar o sla &apos;Em espera&apos; de Contratação para &apos;Em curso&apos;\r\n                    String queryReset= \&quot;UPDATE app_fd_sla_atividade SET c_estado_atividade = &apos;Em curso&apos;, c_id_processo=? WHERE c_id_processo=? AND c_estado_atividade = &apos;Em espera&apos;;\&quot;; \r\n                    stmt = con.prepareStatement(queryReset);\r\n                    stmt.setObject(1, ProcessID);\r\n                    stmt.setObject(2, id_processo_contratacao);\r\n                    rs = stmt.executeQuery();\r\n                    rs=null;\r\n                    \r\n                    \r\n                    \/\/Obter data Inicial do SLA\r\n                    String queryGetDateInitSla = \&quot;SELECT c_data_inicio FROM app_fd_sla_atividade WHERE c_id_processo=? AND c_estado_atividade = &apos;Em curso&apos; ;\&quot;;\r\n                    stmt = con.prepareStatement(queryGetDateInitSla);\r\n                    stmt.setObject(1, id_processo_anterior);\r\n                    rs = stmt.executeQuery();\r\n                    String dataInit =\&quot;\&quot;;\r\n                    if(rs.next()){\r\n                        dataInit = rs.getObject(\&quot;c_data_inicio\&quot;).toString();\r\n                    }\r\n                    rs=null;\r\n                    \r\n                    String slaDuration = calculateSLADuration(dataInit, holidays);\r\n                    \/\/Atualizar o sla Em curso para fechado\r\n                    String queryReset= \&quot;UPDATE app_fd_sla_atividade SET c_estado_atividade = &apos;Fechada&apos;, c_data_conclusao=? , c_duracao = ? WHERE c_id_processo=? AND c_estado_atividade = &apos;Em curso&apos;;\&quot;; \r\n                    stmt = con.prepareStatement(queryReset);\r\n                    stmt.setObject(1,\&quot;#date.yyyy-MM-dd HH:mm#\&quot;); \r\n                    stmt.setObject(2, slaDuration);\r\n                    stmt.setObject(3, id_processo_anterior);\r\n                    rs = stmt.executeQuery();\r\n                    rs=null;\r\n                    \r\n                    \r\n                    \r\n                }else{\r\n    \r\n                    \/\/Obter data Inicial do SLA\r\n                    String queryGetDateInitSla = \&quot;SELECT c_data_inicio FROM app_fd_sla_atividade WHERE c_id_processo=? AND c_estado_atividade = &apos;Em curso&apos; ;\&quot;;\r\n                    stmt = con.prepareStatement(queryGetDateInitSla);\r\n                    stmt.setObject(1, id_processo_anterior);\r\n                    rs = stmt.executeQuery();\r\n                    String dataInit =\&quot;\&quot;;\r\n                    if(rs.next()){\r\n                        dataInit = rs.getObject(\&quot;c_data_inicio\&quot;).toString();\r\n                    }\r\n                    rs=null;\r\n                    \r\n                    String slaDuration = calculateSLADuration(dataInit, holidays);\r\n                    \/\/Atualizar o sla Em curso para fechado\r\n                    String queryReset= \&quot;UPDATE app_fd_sla_atividade SET c_estado_atividade = &apos;Fechada&apos;, c_data_conclusao=? , c_duracao = ? WHERE c_id_processo=? AND c_estado_atividade = &apos;Em curso&apos;;\&quot;; \r\n                    stmt = con.prepareStatement(queryReset);\r\n                    stmt.setObject(1,\&quot;#date.yyyy-MM-dd HH:mm#\&quot;); \r\n                    stmt.setObject(2, slaDuration);\r\n                    stmt.setObject(3, id_processo_anterior);\r\n                    rs = stmt.executeQuery();\r\n                    rs=null;\r\n                    \r\n                    \/\/Obter detalhes da tarefa\r\n                    String queryGetAssignment = \&quot;SELECT name FROM shkprocesses WHERE id=?;\&quot;;\r\n                    String queryGetUserAssign = \&quot;SELECT resourceid FROM shkassignmentstable WHERE activityprocessid =?\&quot;;\r\n                    String nomeAtividade = \&quot;\&quot;;\r\n                    String utilizador = \&quot;\&quot;;\r\n                    stmt = con.prepareStatement(queryGetAssignment);\r\n                    stmt.setObject(1, ProcessID);\r\n                    rs = stmt.executeQuery();\r\n                    \r\n                    if(rs.next()){\r\n                        nomeAtividade= rs.getObject(\&quot;name\&quot;).toString();\r\n                        rs=null;\r\n                    }\r\n                    \r\n                    stmt = con.prepareStatement(queryGetUserAssign);\r\n                    stmt.setObject(1, ProcessID);\r\n                    rs = stmt.executeQuery();\r\n                    \r\n                    if(rs.next()){\r\n                        utilizador= rs.getObject(\&quot;resourceid\&quot;).toString();\r\n                        rs=null;\r\n                    }\r\n                    \r\n                            \r\n                    \/\/Obter Urgencia\r\n                    String urgente = \&quot;\&quot;;\r\n                    String recordId = \&quot;#process.recordId#\&quot;;\r\n                    String queryGetUrgencia = \&quot;SELECT c_urgencia FROM app_fd_detalhe_processo WHERE c_id_processo = ?\&quot;;\r\n                    stmt = con.prepareStatement(queryGetUrgencia);\r\n                    stmt.setObject(1, recordId);\r\n                    rs = stmt.executeQuery();\r\n                    \r\n                    if(rs.next()){\r\n                       urgente = rs.getObject(\&quot;c_urgencia\&quot;);\r\n                    }\r\n                    \r\n                    \/\/Obter configurações de SLA consoante a operativa e urgencia\r\n                    String paramOperativa = \&quot;CONTRATACAO\&quot;;\r\n                    String queryGetSLAConfig = \&quot;SELECT * FROM app_fd_valores_sla WHERE c_nome like ? \&quot;;\r\n                    if(urgente.equals(\&quot;SIM\&quot;)){\r\n                        queryGetSLAConfig += \&quot;AND c_nome like &apos;%URGENTE&apos;\&quot;;\r\n                        paramOperativa += \&quot;%\&quot;;\r\n                    }\r\n                    \r\n                    stmt = con.prepareStatement(queryGetSLAConfig);\r\n                    stmt.setObject(1, paramOperativa);\r\n                    rs = stmt.executeQuery();\r\n                    String sla = \&quot;\&quot;; \r\n                    if(rs.next()){\r\n                        sla = rs.getObject(\&quot;c_sla\&quot;);\r\n                    }\r\n                    \r\n                    \r\n                    \r\n                    String queryCreateSLA = \&quot;INSERT INTO app_fd_sla_atividade (id, dateCreated, dateModified, createdBy,createdByName ,modifiedBy, modifiedByName, c_data_inicio, c_data_fim, c_nome_atividade, c_id_processo, c_utilizador_atribuido, c_estado_atividade, c_duracao) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?);\&quot;;\r\n                    stmt = con.prepareStatement(queryCreateSLA);\r\n                    \r\n                    var idSLA = UuidGenerator.getInstance().getUuid();\r\n                    var dateNow =\&quot;#date.yyyy-MM-dd HH:mm#\&quot;;\r\n                    var currentUsername = \&quot;#currentUser.username#\&quot;;\r\n                    var currentNameUser = \&quot;#currentUser.firstName#\&quot; + \&quot;#currentUser.lastName#\&quot;;\r\n                    String dataFim = calculateSLAD(\&quot;#form.detalhe_processo.data_entrada[{form.processos.detalhe_processo}]#\&quot;, holidays, sla, urgente);\r\n                   String duracao = \&quot;D\&quot;;\r\n                   \r\n                    var estadoAtividade = \&quot;Em curso\&quot;;\r\n                    stmt.setObject(1, idSLA);\r\n                    stmt.setObject(2, dateNow);\r\n                    stmt.setObject(3, dateNow);\r\n                    stmt.setObject(4, currentUsername);\r\n                    stmt.setObject(5, currentNameUser);\r\n                    stmt.setObject(6, currentUsername);\r\n                    stmt.setObject(7, currentNameUser);\r\n                    stmt.setObject(8, \&quot;#form.detalhe_processo.data_entrada[{form.processos.detalhe_processo}]#\&quot;); \/\/dateNow);  \/\/ir buscar data de ultima entrada\r\n                    stmt.setObject(9, dataFim);   \r\n                    stmt.setObject(10, nomeAtividade);\r\n                    stmt.setObject(11, ProcessID);\r\n                    stmt.setObject(12, utilizador);\r\n                    stmt.setObject(13, estadoAtividade);\r\n                    stmt.setObject(14, duracao);\r\n        \r\n                    rs = stmt.executeQuery();\r\n  \r\n                }\r\n                \r\n                \/\/Atualizar fase do processo\r\n                String recordId = \&quot;#process.recordId#\&quot;;\r\n                if(recordId != null){\r\n                    String updateFaseProcesso = \&quot;UPDATE app_fd_detalhe_processo SET c_fase_processo = ? WHERE c_id_processo = ?\&quot;;\r\n                    stmt = con.prepareStatement(updateFaseProcesso);\r\n                    stmt.setObject(1, \&quot;CNT\&quot;);\r\n                    stmt.setObject(2, recordId);\r\n                    rs = stmt.executeQuery();    \r\n                }\r\n                \r\n            \/\/Caso o processo venha de filtro (operativa anterior é Contratação pois não atualiza em filtro)\r\n            }\/*else{\r\n                \r\n                \/\/Caso o id_processo_anterior for diferente do atual no SLA\r\n                if(!id_processo_anterior.equals(ProcessID)){\r\n                    \/\/Obter id_processo no SLA\r\n                    String queryGetIdProcesso = \&quot;Update app_fd_sla_atividade SET c_id_processo = ?  WHERE c_id_processo=? AND c_estado_atividade = &apos;Em curso&apos;;\&quot;;\r\n                    stmt = con.prepareStatement(queryGetIdProcesso);\r\n                    stmt.setObject(1, ProcessID);\r\n                    stmt.setObject(2, id_processo_anterior);\r\n                    rs = stmt.executeQuery();\r\n                }\r\n                \r\n            }*\/\r\n\r\n        }\r\n      \r\n    }catch(Exception e){\r\n                LogUtil.error(appDef.toString(), e, \&quot;Error getting info from DB\&quot;);\r\n            }finally{\r\n                try{\r\n                    if(rs != null){\r\n                    rs.close();\r\n                    }\r\n                    if(stmt != null){\r\n                        stmt.close();\r\n                    }\r\n                    if(con != null &amp;&amp; !con.isClosed()) {\r\n                        con.close();\r\n                    }\r\n                }catch(Exception e){\r\n                    LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\r\n                }\r\n                \r\n            }\r\n}\r\nupdateSLA();\r\nwm.processVariable(ProcessID, \&quot;operativa_anterior\&quot; , \&quot;CONTRATACAO\&quot;);\r\nwm.processVariable(ProcessID, \&quot;id_processo_anterior\&quot; , ProcessID);\r\nwm.processVariable(ProcessID, \&quot;id_processo_contratacao\&quot; , ProcessID);\r\n\r\n\r\n&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHRegistos::ConfigurarAtividadeRegisto</string>
               <packageActivityPlugin>
                  <processDefId>CHRegistos</processDefId>
                  <activityDefId>ConfigurarAtividadeRegisto</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport java.time.LocalDateTime; \r\nimport java.time.format.DateTimeFormatter;\r\nimport java.time.DayOfWeek;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport javax.sql.DataSource;\r\nimport org.joget.commons.util.UuidGenerator;\r\nimport java.time.temporal.ChronoUnit;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;flag_ultima_atividade\&quot; , \&quot;5\&quot;);\r\n\r\npublic void updateFaseProcesso(){\r\n    Connection con = null;\r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\n    \r\n    try{\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\r\n        con = ds.getConnection();\r\n        \r\n        if(!con.isClosed()){\r\n            \r\n            \/\/Atualizar subfase do processo\r\n            String recordId = \&quot;#process.recordId#\&quot;;\r\n            if(recordId!=null){\r\n                String updateSubfaseProcesso = \&quot;UPDATE app_fd_detalhe_processo SET c_subfase_processo = ? WHERE c_id_processo = ?\&quot;;\r\n                stmt = con.prepareStatement(updateSubfaseProcesso);\r\n                stmt.setObject(1, \&quot;Registo\&quot;);\r\n                stmt.setObject(2, recordId);\r\n                rs = stmt.executeQuery();\r\n            }\r\n        }\r\n      \r\n    }catch(Exception e){\r\n                LogUtil.error(appDef.toString(), e, \&quot;Error getting info from DB\&quot;);\r\n            }finally{\r\n                try{\r\n                    if(rs != null){\r\n                    rs.close();\r\n                    }\r\n                    if(stmt != null){\r\n                        stmt.close();\r\n                    }\r\n                    if(con != null &amp;&amp; !con.isClosed()) {\r\n                        con.close();\r\n                    }\r\n                }catch(Exception e){\r\n                    LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\r\n                }\r\n                \r\n            }\r\n}\r\n\r\nupdateFaseProcesso();&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoNormal::ultimaAtividadeBSTCont</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <activityDefId>ultimaAtividadeBSTCont</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;flag_ultima_atividade\&quot; , \&quot;1\&quot;);\r\n&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>HIPContratacao::createInfoDiligencia</string>
               <packageActivityPlugin>
                  <processDefId>HIPContratacao</processDefId>
                  <activityDefId>createInfoDiligencia</activityDefId>
                  <pluginName>org.joget.apps.app.lib.MultiTools</pluginName>
                  <pluginProperties>{&quot;tools&quot;:[{&quot;className&quot;:&quot;org.joget.apps.app.lib.BeanShellTool&quot;,&quot;properties&quot;:{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport javax.sql.DataSource;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;estado\&quot; , \&quot;FT\&quot;);\r\n\r\npublic void updateEstado(){\r\n    Connection con = null;\r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\n    \r\n    try{\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\r\n        con = ds.getConnection();\r\n        \r\n        if(!con.isClosed()){\r\n            \r\n            \/\/Atualizar fase do processo\r\n            String recordId = \&quot;#process.recordId#\&quot;;\r\n                if(recordId!=null){\r\n                    String updateFaseProcesso = \&quot;UPDATE app_fd_detalhe_proce_hip SET c_estado_contratacao = ? WHERE c_id_processo = ?\&quot;;\r\n                    stmt = con.prepareStatement(updateFaseProcesso);\r\n                    stmt.setObject(1, \&quot;FT\&quot;);\r\n                    stmt.setObject(2, recordId);\r\n                    rs = stmt.executeQuery();\r\n                    \/\/LogUtil.info(\&quot;Fluxo Produção Beanshell Tool\&quot;, \&quot;Estado do processo \&quot; + recordId + \&quot; atualizado para Processado pelo Robot\&quot;);\r\n                }\r\n        }\r\n      \r\n    }catch(Exception e){\r\n                LogUtil.error(\&quot;HIPOTECAS - Fluxo - Update estado - Em filtro\&quot;, e, \&quot;Error getting info from DB\&quot;);\r\n            }finally{\r\n                try{\r\n                    if(rs != null){\r\n                    rs.close();\r\n                    }\r\n                    if(stmt != null){\r\n                        stmt.close();\r\n                    }\r\n                    if(con != null &amp;&amp; !con.isClosed()) {\r\n                        con.close();\r\n                    }\r\n                }catch(Exception e){\r\n                    LogUtil.error(\&quot;HIPOTECAS - Fluxo - Update estado - Em filtro\&quot;, e, \&quot;Error closing DB connection\&quot;);\r\n                }\r\n                \r\n            }\r\n}\r\nupdateEstado();\r\n&quot;}},{&quot;className&quot;:&quot;org.joget.plugin.enterprise.FormDataUpdateTool&quot;,&quot;properties&quot;:{&quot;formDefId&quot;:&quot;pedirEsclarecimento&quot;,&quot;fields&quot;:[{&quot;field&quot;:&quot;equipa_destinataria&quot;,&quot;value&quot;:&quot;PL_INT_FLT_GEN_NOR_CRH&quot;},{&quot;field&quot;:&quot;equipa_remetente&quot;,&quot;value&quot;:&quot;PL_INT_HIP&quot;},{&quot;field&quot;:&quot;gestor_remetente&quot;,&quot;value&quot;:&quot;#curentUser.username#&quot;},{&quot;field&quot;:&quot;assunto&quot;,&quot;value&quot;:&quot;Filtro Obrigatório&quot;},{&quot;field&quot;:&quot;banco&quot;,&quot;value&quot;:&quot;#form.detalhe_proce_hip.nome_banco#&quot;},{&quot;field&quot;:&quot;servico&quot;,&quot;value&quot;:&quot;HIP&quot;},{&quot;field&quot;:&quot;id_processo&quot;,&quot;value&quot;:&quot;#process.recordId#&quot;},{&quot;field&quot;:&quot;urgencia&quot;,&quot;value&quot;:&quot;#form.detalhe_proce_hip.urgencia#&quot;}]}}],&quot;runInMultiThread&quot;:&quot;&quot;,&quot;comment&quot;:&quot;&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>DSTDistrates::vaiProcuradoria2</string>
               <packageActivityPlugin>
                  <processDefId>DSTDistrates</processDefId>
                  <activityDefId>vaiProcuradoria2</activityDefId>
                  <pluginName>org.joget.apps.app.lib.SimpleTensorFlowAIDecisionPlugin</pluginName>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::validacaoLegalNB</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <activityDefId>validacaoLegalNB</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;validacaoLegalNB&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;&quot;,&quot;deptId&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;#i18n.msg_realocar#&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;&quot;,&quot;properties&quot;:{}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;true&quot;,&quot;showProcessName&quot;:&quot;&quot;,&quot;showFutureActivities&quot;:&quot;true&quot;,&quot;showSkippedActivities&quot;:&quot;&quot;,&quot;usernameFormat&quot;:&quot;name&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHProducaoNormal::processamentoManualMinuta</string>
               <packageActivityPlugin>
                  <processDefId>CHProducaoNormal</processDefId>
                  <activityDefId>processamentoManualMinuta</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;processamentoManualMinuta&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;&quot;,&quot;deptId&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;#i18n.msg_realocar#&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;&quot;,&quot;properties&quot;:{}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;true&quot;,&quot;showProcessName&quot;:&quot;&quot;,&quot;showFutureActivities&quot;:&quot;&quot;,&quot;showSkippedActivities&quot;:&quot;&quot;,&quot;usernameFormat&quot;:&quot;name&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>REGdistribuicaoProcessos::distribuicaoProcessos</string>
               <packageActivityPlugin>
                  <processDefId>REGdistribuicaoProcessos</processDefId>
                  <activityDefId>distribuicaoProcessos</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.WorkflowManager;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport org.joget.workflow.model.service.WorkflowUserManager;\r\nimport org.joget.apps.app.model.AppDefinition;\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.datalist.model.DataListBinderDefaultimport;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport javax.sql.DataSource;\r\n\r\nString idProcesso=\&quot;\&quot;;\r\nString aid = \&quot;\&quot;;\r\nString resourceId = \&quot;\&quot;;\r\n\r\n    Connection con = null;\r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\n    \r\n    PreparedStatement stmt_1 = null;\r\n    ResultSet rs_1 = null;\r\n    \r\n    try{\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\r\n        con = ds.getConnection();\r\n        \r\n        if(!con.isClosed()){\r\n            String queryGetAid = \&quot;SELECT p.id as &apos;IDProcesso&apos;, dp.c_subfase_processo, ag.c_data_agendamento AS &apos;DataAgendamento&apos;, dp.c_urgencia as &apos;Urgencia&apos; FROM shkprocesses sp LEFT JOIN shkprocesses sp2 on sp.ActivityRequesterProcessId = sp2.Id LEFT JOIN app_fd_processos p on sp.ActivityRequesterProcessId = p.id LEFT JOIN shkprocessstates sps ON sps.oid = sp.State  LEFT JOIN SHKActivities sact ON sact.ProcessId = sp.Id LEFT JOIN app_fd_detalhe_processo dp ON dp.id = p.c_detalhe_processo LEFT JOIN app_fd_agendamento ag ON ag.id = p.c_agendamento LEFT JOIN SHKActivityStates ssta ON ssta.oid = sact.State LEFT JOIN (select ActivityId, group_concat(ResourceId separator &apos;; &apos;) as ResourceId from SHKAssignmentsTable group by ActivityId) sass on sact.Id = sass.ActivityId WHERE sps.KeyValue LIKE &apos;open.running&apos; AND p.id is not null AND (ssta.oid = &apos;1000001&apos; OR ssta.oid = &apos;1000003&apos; OR ssta.oid = &apos;1000005&apos;) AND sp.id like &apos;%Registos%&apos; AND dp.c_subfase_processo LIKE &apos;Registo&apos; AND sass.ResourceId LIKE &apos;%registos_geral%&apos; ORDER BY DataAgendamento ASC, Urgencia DESC\&quot;;\r\n    \t\tstmt = con.prepareStatement(queryGetAid);\r\n    \t\trs = stmt.executeQuery();\r\n    \t\t\r\n    \t\tif(rs.next()){\r\n    \t\t\tidProcesso = rs.getObject(\&quot;IDProcesso\&quot;);\r\n    \t\t}\r\n            \r\n            if(idProcesso != null){\r\n                String queryGetAid_1 = \&quot;SELECT a.id as &apos;Aid&apos;, sass.ResourceId as &apos;ResourceId&apos; FROM shkprocesses p LEFT JOIN shkactivities a ON p.id = ProcessId LEFT JOIN shkprocessstates ps ON ps.oid = p.State LEFT JOIN SHKActivityStates acs ON acs.oid = a.State LEFT JOIN shkassignmentstable sass ON sass.ActivityId = a.id WHERE p.ActivityRequesterProcessId = ? AND ps.KeyValue LIKE &apos;open.running&apos; AND (acs.KeyValue LIKE &apos;open.not_running.not_started&apos; OR acs.KeyValue LIKE &apos;open.running&apos;)\&quot;;\r\n                stmt_1 = con.prepareStatement(queryGetAid_1);\r\n                stmt_1.setObject(1, idProcesso);\r\n                rs_1 = stmt_1.executeQuery();\r\n            \r\n                if(rs_1.next()){\r\n                    aid = rs_1.getObject(\&quot;Aid\&quot;);\r\n                    resourceId = rs_1.getObject(\&quot;ResourceId\&quot;);\r\n                    \r\n                    WorkflowManager wm = (WorkflowManager) AppUtil.getApplicationContext().getBean(\&quot;workflowManager\&quot;);\r\n                    WorkflowUserManager wum = (WorkflowUserManager) AppUtil.getApplicationContext().getBean(\&quot;workflowUserManager\&quot;);\r\n                    \r\n                    \/\/get the values from the \r\n                    String replaceUser = resourceId;\r\n                    String username = \&quot;#currentUser.username#\&quot;;\r\n                \r\n                \r\n                    \/\/getCurrentThreadUser() Method used by system to get current thread user\r\n                    String currentUser = wum.getCurrentThreadUser();\r\n                    wum.setCurrentThreadUser(replaceUser);\r\n                    wum.setCurrentThreadUser(currentUser);\r\n                    \r\n                    \/\/Reassigns the assignment from a user (replaceUser) to another user (username)\r\n                    wm.assignmentReassign(\&quot;\&quot;, \&quot;\&quot;, aid, username, replaceUser);\r\n                    \r\n                }\r\n            }\r\n            \r\n        }\r\n            \r\n    }catch(Exception e){\r\n            LogUtil.error(appDef.toString(), e, \&quot;Error getting info from DB\&quot;);\r\n    }finally{\r\n        try{\r\n            if(rs != null){\r\n            rs.close();\r\n            }\r\n            if(stmt != null){\r\n                stmt.close();\r\n            }\r\n            if(con != null &amp;&amp; !con.isClosed()) {\r\n                con.close();\r\n            }\r\n        }catch(Exception e){\r\n            LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\r\n        }\r\n        \r\n    }&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoNormal::PreenchimentoProcessoMG</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <activityDefId>PreenchimentoProcessoMG</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;PreenchimentoProcessoMG&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;&quot;,&quot;deptId&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;#i18n.msg_realocar#&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;org.joget.apps.app.lib.BeanShellTool&quot;,&quot;properties&quot;:{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\nimport org.joget.commons.util.LogUtil;\nimport org.joget.apps.app.service.AppUtil;\n\n\nString assigneeId = \&quot;#process.activityInst.PreenchimentoProcessoMG.assignmentUsers#\&quot;;\nString ProcessID = workflowAssignment.getProcessId();\n\n\nString instanceId = AppUtil.processHashVariable(\&quot;#process.activityInst.PreenchimentoProcessoMG.instanceId[\&quot;+ProcessID+\&quot;]#\&quot;,null,null,null);\n\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\nwm.processVariable(ProcessID, \&quot;user_contratacao_mtg1\&quot; , assigneeId);\nwm.activityVariable(instanceId,\&quot;user_contratacao_mtg1\&quot;, assigneeId);\n&quot;}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;true&quot;,&quot;showProcessName&quot;:&quot;&quot;,&quot;showFutureActivities&quot;:&quot;true&quot;,&quot;showSkippedActivities&quot;:&quot;&quot;,&quot;usernameFormat&quot;:&quot;name&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::validacaoBancariaLegalABA</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <activityDefId>validacaoBancariaLegalABA</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;validacaoBancariaLegalABA&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;&quot;,&quot;deptId&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;#i18n.msg_realocar#&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;&quot;,&quot;properties&quot;:{}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;true&quot;,&quot;showProcessName&quot;:&quot;&quot;,&quot;showFutureActivities&quot;:&quot;true&quot;,&quot;showSkippedActivities&quot;:&quot;&quot;,&quot;usernameFormat&quot;:&quot;name&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoNormal::validacaoBancariaLegalBIC</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <activityDefId>validacaoBancariaLegalBIC</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;validacaoBancariaLegalBIC&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;&quot;,&quot;deptId&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;#i18n.msg_realocar#&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;org.joget.apps.app.lib.BeanShellTool&quot;,&quot;properties&quot;:{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\nimport org.joget.commons.util.LogUtil;\nimport org.joget.apps.app.service.AppUtil;\n\n\nString assigneeId = \&quot;#process.activityInst.validacaoBancariaLegalBIC.assignmentUsers#\&quot;;\nString ProcessID = workflowAssignment.getProcessId();\n\n\nString instanceId = AppUtil.processHashVariable(\&quot;#process.activityInst.validacaoBancariaLegalBIC.instanceId[\&quot;+ProcessID+\&quot;]#\&quot;,null,null,null);\n\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\nwm.processVariable(ProcessID, \&quot;user_contratacao_bic\&quot; , assigneeId);\nwm.activityVariable(instanceId,\&quot;user_contratacao_bic\&quot;, assigneeId);\n&quot;}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;true&quot;,&quot;showProcessName&quot;:&quot;&quot;,&quot;showFutureActivities&quot;:&quot;true&quot;,&quot;showSkippedActivities&quot;:&quot;&quot;,&quot;usernameFormat&quot;:&quot;name&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>HIPProducao::tool4</string>
               <packageActivityPlugin>
                  <processDefId>HIPProducao</processDefId>
                  <activityDefId>tool4</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::validacaoDespacho</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <activityDefId>validacaoDespacho</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;validacaoDespacho&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;&quot;,&quot;deptId&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;#i18n.msg_realocar#&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;&quot;,&quot;properties&quot;:{}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;true&quot;,&quot;showProcessName&quot;:&quot;&quot;,&quot;showFutureActivities&quot;:&quot;true&quot;,&quot;showSkippedActivities&quot;:&quot;&quot;,&quot;usernameFormat&quot;:&quot;name&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::ultimaAtividadeBSTCont</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <activityDefId>ultimaAtividadeBSTCont</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;flag_ultima_atividade\&quot; , \&quot;1\&quot;);\r\n&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>notificacoes::notificacoesProcu</string>
               <packageActivityPlugin>
                  <processDefId>notificacoes</processDefId>
                  <activityDefId>notificacoesProcu</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.commons.util.LogUtil;\nimport org.joget.commons.util.StringUtil;\nimport org.joget.apps.app.model.AppDefinition;\nimport org.joget.apps.app.model.PackageActivityForm;\nimport org.joget.apps.app.service.AppUtil;\nimport org.joget.apps.app.service.AppService;\nimport org.joget.apps.form.model.FormData;\nimport org.joget.workflow.model.WorkflowAssignment;\nimport org.joget.workflow.model.service.WorkflowManager;\nimport org.joget.workflow.model.service.WorkflowUserManager;\nimport org.joget.workflow.model.WorkflowProcess;\nimport org.joget.workflow.model.WorkflowProcessResult;\nimport org.joget.plugin.base.ApplicationPlugin;\nimport org.joget.plugin.base.Plugin;\nimport org.joget.plugin.base.PluginManager;\nimport org.joget.plugin.property.model.PropertyEditable;\nimport org.joget.apps.form.model.FormRow;\nimport org.joget.apps.form.model.FormRowSet;\nimport org.joget.workflow.model.service.*;\n\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport javax.sql.DataSource;\nimport org.joget.commons.util.UuidGenerator;\nimport java.util.HashMap;\n\nAppService appService = (AppService) AppUtil.getApplicationContext().getBean(\&quot;appService\&quot;);\nWorkflowManager workflowManager = (WorkflowManager) AppUtil.getApplicationContext().getBean(\&quot;workflowManager\&quot;);\nAppDefinition appDef = AppUtil.getCurrentAppDefinition();\n\npublic void checkValidadeCertidao(Connection con, PreparedStatement stmt, ResultSet rs, ResultSet rs2){\n    \n    String idDetalhe = \&quot;\&quot;;\n    String banco = \&quot;\&quot;;\n    String processId = \&quot;\&quot;;\n    String nProcesso = \&quot;\&quot;;\n    String diligenciaId = null;\n    String processId = null;\n    String resourceId = null;\n    \n    \n    String query = \&quot;SELECT p.id as &apos;IDProcesso&apos;, dp.id as &apos;IdDetalhe&apos;, dp.c_n_processo as &apos;NProc&apos;, dp.c_validade_certidao, dp.c_banco_fundo as &apos;Banco&apos; FROM app_fd_processos_procu p LEFT JOIN app_fd_detalhe_proce_procu dp ON dp.id = p.c_detalhe_processo AND dp.c_flag_notificacao_certidao != &apos;SIM&apos; WHERE dp.c_validade_certidao != &apos;&apos; AND dp.c_validade_certidao &lt;= DATE_SUB(CURDATE(), INTERVAL -30 DAY);\&quot;;\n    stmt = con.prepareStatement(query); \n    \n    rs = stmt.executeQuery();\n     \n    while(rs.next()){\n        processId = rs.getObject(\&quot;IDProcesso\&quot;);\n        nProcesso = rs.getObject(\&quot;NProc\&quot;);\n        banco = rs.getObject(\&quot;Banco\&quot;);\n        idDetalhe = rs.getObject(\&quot;IdDetalhe\&quot;);\n        \n        String equipaDest = \&quot;SISTEMA\&quot;;\n        String equipaRem = \&quot;PL_SIS_PROCU\&quot;;\n        String gestorRem = \&quot;procuradoria_geral\&quot;;\n        \n        \n        Map variables = new HashMap();\n        variables.put(\&quot;equipa_destinataria\&quot;, equipaDest);\n        variables.put(\&quot;gestor_remetente\&quot;, gestorRem);\n        variables.put(\&quot;gestor_destinatario\&quot;, \&quot;SISTEMA\&quot;);\n        variables.put(\&quot;equipa_remetente\&quot;,equipaRem );\n        variables.put(\&quot;flag_alerta\&quot;,\&quot;1\&quot; );\n        \n        \n        WorkflowProcess process = appService.getWorkflowProcessForApp(appDef.getAppId(), appDef.getVersion().toString(), \&quot;Diligências\&quot;);\n    \n        WorkflowProcessResult result = workflowManager.processStart(process.getId(), variables);\n     \n        diligenciaId = result.getProcess().getInstanceId();\n        \n        \n        String activityIdQuery = \&quot;select ass.activityID, ass.ResourceID  from shkprocesses pro left join shkassignmentstable ass on pro.id = ass.ActivityProcessID where pro.id = ?;\&quot;;\n        stmt = con.prepareStatement(activityIdQuery);\n        stmt.setObject(1, diligenciaId);\n        rs2 = stmt.executeQuery();\n        \n        if(rs2.next()){\n            \n            workflowManager.assignmentForceComplete(process.getId(), diligenciaId, rs2.getString(1), rs2.getString(2));\n         \n            String assunto = \&quot;Alerta | Validade da Certidão | Processo - \&quot; + nProcesso;\n            String mensagem = \&quot;A validade da certidão do processo \&quot; + nProcesso + \&quot; caduca a 30 ou menos dias.\&quot;;\n            String insertQuery = \&quot;INSERT INTO app_fd_info_diligencia(id, c_id_processo, c_operativa_destinataria, c_equipa_destinataria, c_gestor_destinatario, c_operativa_remetente, c_equipa_remetente, c_gestor_remetente, c_assunto, c_tipo_diligencia, c_diligencia, c_urgencia, c_banco, c_complexidade, dateCreated) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)ON DUPLICATE KEY UPDATE id = VALUES(id), c_id_processo = VALUES(c_id_processo), c_operativa_destinataria= VALUE(c_operativa_destinataria), c_equipa_destinataria = VALUES(c_equipa_destinataria), c_gestor_destinatario = VALUES(c_gestor_destinatario), c_operativa_remetente = VALUES(c_operativa_remetente), c_equipa_remetente = VALUES(c_equipa_remetente), c_gestor_remetente = VALUES(c_gestor_remetente), c_assunto = VALUES(c_assunto), c_tipo_diligencia = VALUES(c_tipo_diligencia), c_diligencia = VALUES(c_diligencia), c_urgencia = VALUES(c_urgencia), c_banco= VALUES(c_banco), c_complexidade= VALUES(c_complexidade), dateCreated= VALUES(dateCreated);\&quot;;\n                                       \n            stmt = con.prepareStatement(insertQuery);\n            stmt.setObject(1, diligenciaId);\n            stmt.setObject(2, processId);\n            stmt.setObject(3, \&quot;PROCU\&quot;);\n            stmt.setObject(4, equipaDest);\n            stmt.setObject(5, \&quot;SISTEMA\&quot;);\n            stmt.setObject(6, \&quot;PROCU\&quot;);\n            stmt.setObject(7, equipaRem);\n            stmt.setObject(8, gestorRem);\n            stmt.setObject(9, assunto);\n            stmt.setObject(10, \&quot;ALERTA\&quot;);\n            stmt.setObject(11, mensagem);\n            stmt.setObject(12, \&quot;SIM\&quot;);\n            stmt.setObject(13, banco);\n            stmt.setObject(14, \&quot;NOR\&quot;);\n            stmt.setObject(15, \&quot;#date.yyyy-MM-dd hh:mm:ss#\&quot;);\n            stmt.executeQuery();\n            LogUtil.info(\&quot;Procuradoria - Notificação Validade da Certidão\&quot;, \&quot;Foi enviada uma diligência automática relativa ao processo \&quot; + processId);\n        }\n        \n        \/\/Atualizar flag de notificacao para SIM\n        String queryUpdateCertidaoFlag = \&quot;UPDATE app_fd_detalhe_proce_procu SET c_flag_notificacao_certidao = &apos;SIM&apos; WHERE id = ?\&quot;;\n        stmt = con.prepareStatement(queryUpdateCertidaoFlag);\n        stmt.setObject(1, idDetalhe);\n        stmt.executeQuery();\n    }\n    \n}\n\npublic void checkAlertaGestor(Connection con, PreparedStatement stmt, ResultSet rs, ResultSet rs2){\n    \n    String queryGetAlertas = \&quot;SELECT p.id as &apos;IDProcesso&apos;, dp.c_alerta_gestor as &apos;AlertaGestor&apos; , dp.c_n_processo as &apos;NProc&apos;, dp.c_user_alerta as &apos;UserAlerta&apos;, dp.id as &apos;IdDetalhe&apos;, dp.c_banco_fundo as &apos;Banco&apos; FROM app_fd_processos_procu p LEFT JOIN app_fd_detalhe_proce_procu dp ON dp.id = p.c_detalhe_processo AND c_alerta_gestor = &apos;SIM&apos; WHERE dp.c_data_alerta = CURDATE()\&quot;;\n    stmt = con.prepareStatement(queryGetAlertas);\n    rs = stmt.executeQuery();\n    \n    String processId = null;\n    String banco = null;\n    String nProc = null;\n    String userAlerta = null;\n    String complexidade = null;\n    String faseProcesso = null;\n    String diligenciaId = null;\n    String idDetalhe = null;\n\n    while(rs.next()){\n        \n        processId = rs.getObject(\&quot;IDProcesso\&quot;);\n        idDetalhe = rs.getObject(\&quot;IdDetalhe\&quot;);\n        banco = rs.getObject(\&quot;Banco\&quot;);\n        nProc= rs.getObject(\&quot;NProc\&quot;);\n        userAlerta = rs.getObject(\&quot;UserAlerta\&quot;);\n        \n        String equipaDest = \&quot;SISTEMA\&quot;;\n        String equipaRem = \&quot;PL_INT_PROCU\&quot;;\n        \n        Map variables = new HashMap();\n        variables.put(\&quot;equipa_destinataria\&quot;, equipaDest);\n        variables.put(\&quot;gestor_remetente\&quot;, userAlerta);\n        variables.put(\&quot;gestor_destinatario\&quot;, \&quot;SISTEMA\&quot;);\n        variables.put(\&quot;equipa_remetente\&quot;,equipaRem );\n        variables.put(\&quot;flag_alerta\&quot;,\&quot;1\&quot; );\n        \n        WorkflowProcess process = appService.getWorkflowProcessForApp(appDef.getAppId(), appDef.getVersion().toString(), \&quot;Diligências\&quot;);\n        WorkflowProcessResult result = workflowManager.processStart(process.getId(), variables);\n        diligenciaId = result.getProcess().getInstanceId();\n        \n        String queryGetActivity = \&quot;select ass.activityID as &apos;ActivityId&apos;, ass.ResourceID as &apos;ResourceId&apos;  from shkprocesses pro left join shkassignmentstable ass on pro.id = ass.ActivityProcessID where pro.id = ?;\&quot;;\n        stmt = con.prepareStatement(queryGetActivity);\n        stmt.setObject(1, diligenciaId);\n        rs2 = stmt.executeQuery();\n        \n        if(rs2.next()){\n            \/\/Avançar dilig~encia uma fase\n            workflowManager.assignmentForceComplete(process.getId(), diligenciaId, rs2.getObject(\&quot;ActivityId\&quot;), rs2.getObject(\&quot;ResourceId\&quot;));\n            \n            \/\/Inserir registo de Diligência\n            String assunto = \&quot;Alerta | Gestor | Processo - \&quot; + nProc;\n            String mensagem = \&quot;Existe um alerta no processo \&quot; + nProc ;\n            String insertQuery = \&quot;INSERT INTO app_fd_info_diligencia(id, c_id_processo, c_operativa_destinataria, c_equipa_destinataria, c_gestor_destinatario, c_operativa_remetente, c_equipa_remetente, c_gestor_remetente, c_assunto, c_tipo_diligencia, c_diligencia, c_urgencia, c_banco, c_complexidade, dateCreated) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE id = VALUES(id), c_id_processo = VALUES(c_id_processo), c_operativa_destinataria= VALUE(c_operativa_destinataria), c_equipa_destinataria = VALUES(c_equipa_destinataria), c_gestor_destinatario = VALUES(c_gestor_destinatario), c_operativa_remetente = VALUES(c_operativa_remetente), c_equipa_remetente = VALUES(c_equipa_remetente), c_gestor_remetente = VALUES(c_gestor_remetente), c_assunto = VALUES(c_assunto), c_tipo_diligencia = VALUES(c_tipo_diligencia), c_diligencia = VALUES(c_diligencia), c_urgencia = VALUES(c_urgencia), c_banco= VALUES(c_banco), c_complexidade= VALUES(c_complexidade), dateCreated= VALUES(dateCreated);\&quot;;\n            stmt = con.prepareStatement(insertQuery);\n            stmt.setObject(1, diligenciaId);\n            stmt.setObject(2, processId);\n            stmt.setObject(3, \&quot;PROCU\&quot;);\n            stmt.setObject(4, equipaDest);\n            stmt.setObject(5, \&quot;SISTEMA\&quot;);\n            stmt.setObject(6, \&quot;PROCU\&quot;);\n            stmt.setObject(7, equipaRem);\n            stmt.setObject(8, userAlerta);\n            stmt.setObject(9, assunto);\n            stmt.setObject(10, \&quot;ALERTA\&quot;);\n            stmt.setObject(11, mensagem);\n            stmt.setObject(12, \&quot;SIM\&quot;);\n            stmt.setObject(13, banco);\n            stmt.setObject(14, \&quot;NOR\&quot;);\n            stmt.setObject(15, \&quot;#date.yyyy-MM-dd hh:mm:ss#\&quot;);\n            stmt.executeQuery();\n            \n            LogUtil.info(\&quot;Alerta Gestor\&quot;, \&quot;Foi enviada uma diligência automática relativa ao processo \&quot; + processId);\n            \/\/Reset na flag de Alerta\n            String queryResetFlagAlerta = \&quot;UPDATE app_fd_detalhe_proce_procu SET c_alerta_gestor = &apos;&apos;, c_user_alerta = &apos;&apos; WHERE id= ?\&quot;;\n            stmt = con.prepareStatement(queryResetFlagAlerta);\n            stmt.setObject(1, idDetalhe);\n            stmt.executeQuery();\n            \n        }\n    }\n}\n\npublic void checkNotificacoes(){\n    Connection con = null;\n    PreparedStatement stmt = null;\n    ResultSet rs = null;\n    ResultSet rs2 = null;\n    \n    try{\n        DataSource ds = (DataSource) AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\n        con = ds.getConnection();\n        if(!con.isClosed()){\n            checkValidadeCertidao(con, stmt, rs, rs2);\n            checkAlertaGestor(con, stmt, rs, rs2);\n        }\n        \n    }catch(Exception e){\n        LogUtil.error(\&quot;Notificações Procuradoriao\&quot;, e, \&quot;Error in Notificações\&quot;);\n    }finally{\n        try{\n            if(rs != null){\n                rs.close();\n            }\n            if(rs2 != null){\n                rs2.close();\n            }\n            if(stmt != null){\n                stmt.close();\n            }\n            if(con != null &amp;&amp; !con.isClosed()) {\n                con.close();\n            }\n            }catch(Exception e){\n                LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\n            }\n    }\n}\n\n\n\n\ncheckNotificacoes();&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHProducaoNormal::tool4</string>
               <packageActivityPlugin>
                  <processDefId>CHProducaoNormal</processDefId>
                  <activityDefId>tool4</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport java.time.LocalDateTime; \r\nimport java.time.format.DateTimeFormatter;\r\nimport java.time.DayOfWeek;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport javax.sql.DataSource;\r\nimport org.joget.commons.util.UuidGenerator;\r\nimport java.time.temporal.ChronoUnit;\r\n\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\n\/\/WorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\n\/\/wm.processVariable(ProcessID, \&quot;flag_ultima_atividade\&quot; , \&quot;0\&quot;);\r\n\/\/wm.processVariable(ProcessID, \&quot;proxima_operativa\&quot; , \&quot;\&quot;);\r\n\r\npublic void updateFaseProcesso(){\r\n    Connection con = null;\r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\n    \r\n    try{\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\r\n        con = ds.getConnection();\r\n        \r\n        if(!con.isClosed()){\r\n            \r\n            \/\/Atualizar fase do processo\r\n            String recordId = \&quot;#process.recordId#\&quot;;\r\n                if(recordId!=null){\r\n                    String updateFaseProcesso = \&quot;UPDATE app_fd_detalhe_processo SET c_fase_processo = ? WHERE c_id_processo = ?\&quot;;\r\n                    stmt = con.prepareStatement(updateFaseProcesso);\r\n                    stmt.setObject(1, \&quot;PRD\&quot;);\r\n                    stmt.setObject(2, recordId);\r\n                    rs = stmt.executeQuery();\r\n                }\r\n        }\r\n      \r\n    }catch(Exception e){\r\n                LogUtil.error(appDef.toString(), e, \&quot;Error getting info from DB\&quot;);\r\n            }finally{\r\n                try{\r\n                    if(rs != null){\r\n                    rs.close();\r\n                    }\r\n                    if(stmt != null){\r\n                        stmt.close();\r\n                    }\r\n                    if(con != null &amp;&amp; !con.isClosed()) {\r\n                        con.close();\r\n                    }\r\n                }catch(Exception e){\r\n                    LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\r\n                }\r\n                \r\n            }\r\n}\r\nupdateFaseProcesso();\r\n&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CreditoHabitacao::envioDiligenciaContratacao</string>
               <packageActivityPlugin>
                  <processDefId>CreditoHabitacao</processDefId>
                  <activityDefId>envioDiligenciaContratacao</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.commons.util.LogUtil;\nimport org.joget.apps.app.service.AppUtil;\nimport org.joget.apps.app.service.AppService;\nimport org.joget.apps.app.model.AppDefinition;\nimport org.joget.workflow.model.service.WorkflowManager;\nimport org.joget.workflow.model.service.WorkflowUserManager;\nimport org.joget.workflow.model.WorkflowProcess;\nimport org.joget.workflow.model.WorkflowProcessResult;\n\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport javax.sql.DataSource;\n\npublic void envioAlertaContratacao(){\n    \n    AppService appService = (AppService) AppUtil.getApplicationContext().getBean(\&quot;appService\&quot;);\n    WorkflowManager workflowManager = (WorkflowManager) AppUtil.getApplicationContext().getBean(\&quot;workflowManager\&quot;);\n    AppDefinition appDef = AppUtil.getCurrentAppDefinition();\n    \n    \n    Connection con = null;\n    PreparedStatement stmt = null;\n    ResultSet rs = null;\n    String diligenciaId = null;\n    \n        try{\n            DataSource ds = (DataSource) AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\n            con = ds.getConnection();\n        \n            if(!con.isClosed()){\n                \/\/variável que indica se o processo passou por Produção Robot\n                String producao_robot = \&quot;#variable.producao_robot#\&quot;;\n                String banco = \&quot;#variable.banco#\&quot;;\n                String complexidade = \&quot;#variable.complexidade#\&quot;;\n                String variableUserContName = \&quot;user_contratacao_\&quot; + banco;\n                if(banco.equals(\&quot;MTG\&quot;)){\n                    variableUserContName += \&quot;2\&quot;;\n                }\n                if(complexidade.equals(\&quot;COM\&quot;)){\n                    variableUserContName = variableUserContName + \&quot;_com\&quot;; \n                }\n\n                String pid = \&quot;#process.recordId#\&quot;;\n                \n                \n                \/\/Se o processo passou por Produção Robot\n                if(producao_robot.trim().equals(\&quot;1\&quot;)){\n                    \n                    String queryGetProcesso = \&quot;SELECT dp.c_fase_processo as &apos;FaseProcesso&apos;, DP.c_n_wf_pl as &apos;NWFPL&apos;, sactdata.VariableValueVCHAR as &apos;UserContratacao&apos; FROM app_fd_processos p LEFT JOIN app_fd_detalhe_processo dp ON dp.id = p.c_detalhe_processo JOIN shkprocesses shk ON p.id = shk.ActivityRequesterProcessId JOIN SHKActivities sact ON sact.ProcessId = shk.Id JOIN shkactivitydata sactdata ON sact.oid = sactdata.activity WHERE sactdata.VariableDefinitionId = ? AND p.id = ? ORDER BY sact.oid DESC \&quot;;\n                    stmt = con.prepareStatement(queryGetProcesso);\n                    stmt.setObject(1, variableUserContName);\n                    stmt.setObject(2, pid);\n                    rs=stmt.executeQuery();\n                    \n                    if(rs.next()){\n                        String faseProcesso = rs.getObject(\&quot;FaseProcesso\&quot;);\n                        String equipaDest =\&quot;SISTEMA\&quot;;\n                        String equipaRem = \&quot;PL_INT_CNT_\&quot; + banco + \&quot;_\&quot; + complexidade + \&quot;_CRH\&quot;;\n                        String userContratacao = rs.getObject(\&quot;UserContratacao\&quot;);\n                        String nWfPl = rs.getObject(\&quot;NWFPL\&quot;);\n                        \n                        \/\/if User Contratacao existir\n                        if(!userContratacao.isEmpty()){\n                            Map variables = new HashMap();\n                            variables.put(\&quot;equipa_destinataria\&quot;, equipaDest);\n                            variables.put(\&quot;gestor_remetente\&quot;, userContratacao);\n                            variables.put(\&quot;gestor_destinatario\&quot;, \&quot;SISTEMA\&quot;);\n                            variables.put(\&quot;equipa_remetente\&quot;,equipaRem );\n                            variables.put(\&quot;flag_alerta\&quot;,\&quot;1\&quot; );\n                            \n                            WorkflowProcess process = appService.getWorkflowProcessForApp(appDef.getAppId(), appDef.getVersion().toString(), \&quot;Diligências\&quot;);\n                        \n                            WorkflowProcessResult result = workflowManager.processStart(process.getId(), variables);\n                        \n                            diligenciaId = result.getProcess().getInstanceId();\n                            \n                            \/\/Obter id da atividade da Diligência para avançar uma fase\n                            String activityIdQuery = \&quot;select ass.activityID as &apos;ActivityId&apos;, ass.ResourceID as &apos;ResourceId&apos;  from shkprocesses pro left join shkassignmentstable ass on pro.id = ass.ActivityProcessID where pro.id = ?;\&quot;;\n                            stmt = con.prepareStatement(activityIdQuery);\n                            stmt.setObject(1, diligenciaId);\n                            rs = stmt.executeQuery();\n                            if(rs.next()){\n                                workflowManager.assignmentForceComplete(process.getId(), diligenciaId, rs.getObject(\&quot;ActivityId\&quot;), rs.getObject(\&quot;ResourceId\&quot;));\n                                \n                                String assunto = \&quot;Alerta | Envio Robot Sucesso | Processo - \&quot; + nWfPl;\n                                String mensagem = \&quot;O processo \&quot; + nWfPl + \&quot; foi enviado pelo Robot para Validação com sucesso.\&quot;;    \n                                String insertQuery = \&quot;INSERT INTO app_fd_info_diligencia(id, c_id_processo, c_operativa_destinataria, c_equipa_destinataria, c_gestor_destinatario, c_operativa_remetente, c_equipa_remetente, c_gestor_remetente, c_assunto, c_tipo_diligencia, c_diligencia, c_urgencia, c_banco, c_complexidade, dateCreated) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE id = VALUES(id), c_id_processo = VALUES(c_id_processo), c_operativa_destinataria= VALUE(c_operativa_destinataria), c_equipa_destinataria = VALUES(c_equipa_destinataria), c_gestor_destinatario = VALUES(c_gestor_destinatario), c_operativa_remetente = VALUES(c_operativa_remetente), c_equipa_remetente = VALUES(c_equipa_remetente), c_gestor_remetente = VALUES(c_gestor_remetente), c_assunto = VALUES(c_assunto), c_tipo_diligencia = VALUES(c_tipo_diligencia), c_diligencia = VALUES(c_diligencia), c_urgencia = VALUES(c_urgencia), c_banco= VALUES(c_banco), c_complexidade= VALUES(c_complexidade), dateCreated= VALUES(dateCreated);\&quot;;\n                                stmt = con.prepareStatement(insertQuery);\n                                stmt.setObject(1, diligenciaId);\n                                stmt.setObject(2, pid);\n                                stmt.setObject(3, faseProcesso);\n                                stmt.setObject(4, equipaDest);\n                                stmt.setObject(5, \&quot;SISTEMA\&quot;);\n                                stmt.setObject(6, faseProcesso);\n                                stmt.setObject(7, equipaRem);\n                                stmt.setObject(8, userContratacao);\n                                stmt.setObject(9, assunto);\n                                stmt.setObject(10, \&quot;ALERTA\&quot;);\n                                stmt.setObject(11, mensagem);\n                                stmt.setObject(12, \&quot;SIM\&quot;);\n                                stmt.setObject(13, banco);\n                                stmt.setObject(14, complexidade);\n                                stmt.setObject(15, \&quot;#date.yyyy-MM-dd hh:mm:ss#\&quot;);\n                                stmt.executeQuery();\n                                LogUtil.info(\&quot;Fluxo CH Alerta Validação\&quot;, \&quot;Diligência enviada para contratação. O processo \&quot; + pid + \&quot; avançou para Validação\&quot;);\n                            }\n                        }   \n                        \n                        \n                    }\n                }\n            }\n        } catch(Exception e) {\n                        LogUtil.error(\&quot;Sample app - Form 1\&quot;, e, \&quot;Error loading user data in load binder\&quot;);\n                    } finally{\n                        try{\n                            if(rs != null){\n                                rs.close();\n                            }\n                            if(stmt != null){\n                                stmt.close();\n                            }\n                            if(con != null &amp;&amp; !con.isClosed()) {\n                                con.close();\n                            }\n                        }catch(Exception e){\n                            LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\n                        }\n                    }\n        \n        \n    \n    \n}\n\nenvioAlertaContratacao();&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHRegistos::pagamentoDeposito</string>
               <packageActivityPlugin>
                  <processDefId>CHRegistos</processDefId>
                  <activityDefId>pagamentoDeposito</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;pagamentoDeposito&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;PL&quot;,&quot;deptId&quot;:&quot;PL_SIS_REG&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;REALOCAR&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;&quot;,&quot;properties&quot;:{}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHValidacaoNormal::tool3</string>
               <packageActivityPlugin>
                  <processDefId>CHValidacaoNormal</processDefId>
                  <activityDefId>tool3</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport javax.sql.DataSource;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\/\/Update user_validacao\r\n\r\n\r\n\r\npublic String getUserVal(){\r\n    \r\n    Connection con = null;\r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\n     String userVal= \&quot;\&quot;;\r\n    try{\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\r\n        con = ds.getConnection();\r\n        \r\n        if(!con.isClosed()){\r\n            \r\n            String queryGetUserAssign = \&quot;SELECT resourceid FROM shkassignmentstable WHERE activityprocessid =?\&quot;;\r\n            stmt = con.prepareStatement(queryGetUserAssign);\r\n            stmt.setObject(1, ProcessID);\r\n            rs = stmt.executeQuery();\r\n            if(rs.next()){\r\n                userVal = rs.getObject(\&quot;resourceid\&quot;);\r\n                String recordId = \&quot;#process.recordId#\&quot;;     \r\n                String updateUserValidacao = \&quot;UPDATE app_fd_processos SET c_user_validacao= ? WHERE id = ? \&quot;;\r\n                stmt = con.prepareStatement(updateUserValidacao);\r\n                stmt.setObject(1, userVal);\r\n                stmt.setObject(2, recordId);\r\n                rs = stmt.executeQuery();\r\n                \r\n                \/*\r\n                String queryUpdateWFVariable = \&quot;UPDATE shkactivitydata ad INNER JOIN shkactivities a ON ad.Activity = a.oid SET ad.VariableValueVCHAR= ? WHERE a.Id LIKE ? AND a.State = 1000003 AND ad.VariableDefinitionId LIKE user_validacao ;\&quot;; \r\n                LogUtil.info(\&quot;InstanceId\&quot;, \&quot;AAAAA\&quot;+ instanceId);\r\n                stmt = con.prepareStatement(queryUpdateWFVariable);\r\n                stmt.setObject(1, userVal);\r\n                stmt.setObject(2, instanceId);*\/\r\n            }   \/\/stmt.executeQuery();\r\n        }\r\n      \r\n    }catch(Exception e){\r\n        LogUtil.error(appDef.toString(), e, \&quot;Error getting info from DB\&quot;);\r\n    }finally{\r\n        try{\r\n            if(rs != null){\r\n            rs.close();\r\n            }\r\n            if(stmt != null){\r\n                stmt.close();\r\n            }\r\n            if(con != null &amp;&amp; !con.isClosed()) {\r\n                con.close();\r\n            }\r\n        }catch(Exception e){\r\n            LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\r\n        }\r\n        \r\n    }\r\n    return userVal;\r\n}\r\nString instanceId = \&quot;#process.activityInst.validacaoContratoDocumentacao.instanceId#\&quot;;\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nString user = getUserVal();\r\nwm.processVariable(ProcessID, \&quot;user_validacao\&quot; , user);\r\nwm.activityVariable(instanceId,\&quot;user_validacao\&quot;, user);\r\n\/\/wm.activityAbort(ProcessID,\&quot;set_user\&quot;);\r\n&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>DISTdistribuicaoProcessosBIC2::distribuicaoProcessos</string>
               <packageActivityPlugin>
                  <processDefId>DISTdistribuicaoProcessosBIC2</processDefId>
                  <activityDefId>distribuicaoProcessos</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.WorkflowManager;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport org.joget.workflow.model.service.WorkflowUserManager;\r\nimport org.joget.apps.app.model.AppDefinition;\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.datalist.model.DataListBinderDefaultimport;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport javax.sql.DataSource;\r\n\r\nString idProcesso=\&quot;\&quot;;\r\nString aid = \&quot;\&quot;;\r\nString resourceId = \&quot;\&quot;;\r\n\r\n    Connection con = null;\r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\n    \r\n    PreparedStatement stmt_1 = null;\r\n    ResultSet rs_1 = null;\r\n    \r\n    try{\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\r\n        con = ds.getConnection();\r\n        \r\n        if(!con.isClosed()){\r\n                String queryGetAid = \&quot;SELECT p.id as &apos;idDist&apos; FROM shkprocesses sp LEFT JOIN shkprocesses sp2 on sp.ActivityRequesterProcessId = sp2.Id LEFT JOIN app_fd_processos_distrates p on sp.ActivityRequesterProcessId = p.id LEFT JOIN shkprocessstates sps ON sps.oid = sp.State LEFT JOIN SHKActivities sact ON sact.ProcessId = sp.Id LEFT JOIN SHKActivityStates ssta ON ssta.oid = sact.State LEFT JOIN (select ActivityId, group_concat(ResourceId separator &apos;; &apos;) as ResourceId from SHKAssignmentsTable group by ActivityId) sass on sact.Id = sass.ActivityId WHERE sps.KeyValue LIKE &apos;open.running&apos; AND p.id is not null AND (ssta.oid = &apos;1000001&apos; OR ssta.oid = &apos;1000003&apos; OR ssta.oid = &apos;1000005&apos;) AND sp.id like &apos;%DSTDistrates%&apos; AND sass.ResourceId LIKE &apos;%distrates_geral_bic%&apos;\&quot;;\r\n        \t\tstmt = con.prepareStatement(queryGetAid);\r\n        \t\trs = stmt.executeQuery();\r\n    \t\t\r\n    \t\tif(rs.next()){\r\n    \t\t\tidProcesso = rs.getObject(\&quot;idDist\&quot;);\r\n    \t\t}\r\n            \r\n            if(idProcesso != null){\r\n                String queryGetAid_1 = \&quot;SELECT a.id as &apos;Aid&apos;, sass.ResourceId as &apos;ResourceId&apos; FROM shkprocesses p LEFT JOIN shkactivities a ON p.id = ProcessId LEFT JOIN shkprocessstates ps ON ps.oid = p.State LEFT JOIN SHKActivityStates acs ON acs.oid = a.State LEFT JOIN shkassignmentstable sass ON sass.ActivityId = a.id WHERE p.ActivityRequesterProcessId = ? AND ps.KeyValue LIKE &apos;open.running&apos; AND (acs.KeyValue LIKE &apos;open.not_running.not_started&apos; OR acs.KeyValue LIKE &apos;open.running&apos;)\&quot;;\r\n                stmt_1 = con.prepareStatement(queryGetAid_1);\r\n                stmt_1.setObject(1, idProcesso);\r\n                rs_1 = stmt_1.executeQuery();\r\n            \r\n                if(rs_1.next()){\r\n                    aid = rs_1.getObject(\&quot;Aid\&quot;);\r\n                    resourceId = rs_1.getObject(\&quot;ResourceId\&quot;);\r\n                    \r\n                    WorkflowManager wm = (WorkflowManager) AppUtil.getApplicationContext().getBean(\&quot;workflowManager\&quot;);\r\n                    WorkflowUserManager wum = (WorkflowUserManager) AppUtil.getApplicationContext().getBean(\&quot;workflowUserManager\&quot;);\r\n                    \r\n                    \/\/get the values from the \r\n                    String replaceUser = resourceId;\r\n                    String username = \&quot;#currentUser.username#\&quot;;\r\n                \r\n                \r\n                    \/\/getCurrentThreadUser() Method used by system to get current thread user\r\n                    String currentUser = wum.getCurrentThreadUser();\r\n                    wum.setCurrentThreadUser(replaceUser);\r\n                    wum.setCurrentThreadUser(currentUser);\r\n                    \r\n                    \/\/Reassigns the assignment from a user (replaceUser) to another user (username)\r\n                    wm.assignmentReassign(\&quot;\&quot;, \&quot;\&quot;, aid, username, replaceUser);\r\n                    \r\n                }\r\n            }\r\n            \r\n        }\r\n            \r\n    }catch(Exception e){\r\n            LogUtil.error(appDef.toString(), e, \&quot;Error getting info from DB\&quot;);\r\n    }finally{\r\n        try{\r\n            if(rs != null){\r\n            rs.close();\r\n            }\r\n            if(stmt != null){\r\n                stmt.close();\r\n            }\r\n            if(con != null &amp;&amp; !con.isClosed()) {\r\n                con.close();\r\n            }\r\n        }catch(Exception e){\r\n            LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\r\n        }\r\n        \r\n    }&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHModelo11::ConfigurarProcessoModelo11</string>
               <packageActivityPlugin>
                  <processDefId>CHModelo11</processDefId>
                  <activityDefId>ConfigurarProcessoModelo11</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport java.time.LocalDateTime; \r\nimport java.time.format.DateTimeFormatter;\r\nimport java.time.DayOfWeek;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport javax.sql.DataSource;\r\nimport org.joget.commons.util.UuidGenerator;\r\nimport java.time.temporal.ChronoUnit;\r\n\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\npublic void updateFaseProcesso(){\r\n    Connection con = null;\r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\n    \r\n    PreparedStatement stmt_2 = null;\r\n    ResultSet rs_2 = null;\r\n    \r\n    try{\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\r\n        con = ds.getConnection();\r\n        \r\n        if(!con.isClosed()){\r\n            \r\n            \/\/Atualizar fase, subfase do processo e variável \&quot;Já processado pelo Modelo 11\&quot;\r\n            String recordId = \&quot;#process.recordId#\&quot;;\r\n                if(recordId!=null){\r\n                    String updateFaseProcesso = \&quot;UPDATE app_fd_detalhe_processo SET c_fase_processo = ? WHERE c_id_processo = ?\&quot;;\r\n                    stmt = con.prepareStatement(updateFaseProcesso);\r\n                    stmt.setObject(1, \&quot;MOD\&quot;);\r\n                    stmt.setObject(2, recordId);\r\n                    rs = stmt.executeQuery();\r\n                    \r\n                    String updateSubfaseProcesso = \&quot;UPDATE app_fd_detalhe_processo SET c_subfase_processo = ? WHERE c_id_processo = ?\&quot;;\r\n                    stmt_2 = con.prepareStatement(updateSubfaseProcesso);\r\n                    stmt_2.setObject(1, \&quot;Processamento do Modelo 11 pelo Robot\&quot;);\r\n                    stmt_2.setObject(2, recordId);\r\n                    rs_2 = stmt_2.executeQuery();\r\n                    \r\n                }\r\n    \r\n        }\r\n      \r\n    }catch(Exception e){\r\n                LogUtil.error(appDef.toString(), e, \&quot;Error getting info from DB\&quot;);\r\n            }finally{\r\n                try{\r\n                    if(rs != null){\r\n                    rs.close();\r\n                    }\r\n                    if(stmt != null){\r\n                        stmt.close();\r\n                    }\r\n                    if(con != null &amp;&amp; !con.isClosed()) {\r\n                        con.close();\r\n                    }\r\n                }catch(Exception e){\r\n                    LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\r\n                }\r\n                \r\n            }\r\n}\r\n\r\nupdateFaseProcesso();&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHProducaoNormal::AtualizarVariavelRobot</string>
               <packageActivityPlugin>
                  <processDefId>CHProducaoNormal</processDefId>
                  <activityDefId>AtualizarVariavelRobot</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport javax.sql.DataSource;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;producao_robot\&quot; , \&quot;1\&quot;);\r\nwm.processVariable(ProcessID, \&quot;estado\&quot; , \&quot;RBT\&quot;);\r\n\r\npublic void updateEstado(){\r\n    Connection con = null;\r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\n    \r\n    try{\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\r\n        con = ds.getConnection();\r\n        \r\n        if(!con.isClosed()){\r\n            \r\n            \/\/Atualizar fase do processo\r\n            String recordId = \&quot;#process.recordId#\&quot;;\r\n                if(recordId!=null){\r\n                    String updateFaseProcesso = \&quot;UPDATE app_fd_detalhe_processo SET c_estado_contratacao = ? WHERE c_id_processo = ?\&quot;;\r\n                    stmt = con.prepareStatement(updateFaseProcesso);\r\n                    stmt.setObject(1, \&quot;RBT\&quot;);\r\n                    stmt.setObject(2, recordId);\r\n                    rs = stmt.executeQuery();\r\n                    LogUtil.info(\&quot;Fluxo Produção Beanshell Tool\&quot;, \&quot;Estado do processo \&quot; + recordId + \&quot; atualizado para Processado pelo Robot\&quot;);\r\n                }\r\n        }\r\n      \r\n    }catch(Exception e){\r\n                LogUtil.error(appDef.toString(), e, \&quot;Error getting info from DB\&quot;);\r\n            }finally{\r\n                try{\r\n                    if(rs != null){\r\n                    rs.close();\r\n                    }\r\n                    if(stmt != null){\r\n                        stmt.close();\r\n                    }\r\n                    if(con != null &amp;&amp; !con.isClosed()) {\r\n                        con.close();\r\n                    }\r\n                }catch(Exception e){\r\n                    LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\r\n                }\r\n                \r\n            }\r\n}\r\nupdateEstado();\r\n&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoNormal::emissaoMinutas</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <activityDefId>emissaoMinutas</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;emissaoMinutas&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;&quot;,&quot;deptId&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;#i18n.msg_realocar#&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;org.joget.apps.app.lib.BeanShellTool&quot;,&quot;properties&quot;:{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\nimport org.joget.commons.util.LogUtil;\nimport org.joget.apps.app.service.AppUtil;\n\n\nString assigneeId = \&quot;#process.activityInst.emissaoMinutas.assignmentUsers#\&quot;;\nString ProcessID = workflowAssignment.getProcessId();\n\n\nString instanceId = AppUtil.processHashVariable(\&quot;#process.activityInst.emissaoMinutas.instanceId[\&quot;+ProcessID+\&quot;]#\&quot;,null,null,null);\n\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\nwm.processVariable(ProcessID, \&quot;user_contratacao_mtg2\&quot; , assigneeId);\nwm.activityVariable(instanceId,\&quot;user_contratacao_mtg2\&quot;, assigneeId);\n&quot;}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;true&quot;,&quot;showProcessName&quot;:&quot;&quot;,&quot;showFutureActivities&quot;:&quot;true&quot;,&quot;showSkippedActivities&quot;:&quot;&quot;,&quot;usernameFormat&quot;:&quot;name&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHRegistos::ConfigurarAtividadeAO</string>
               <packageActivityPlugin>
                  <processDefId>CHRegistos</processDefId>
                  <activityDefId>ConfigurarAtividadeAO</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport java.time.LocalDateTime; \r\nimport java.time.format.DateTimeFormatter;\r\nimport java.time.DayOfWeek;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport javax.sql.DataSource;\r\nimport org.joget.commons.util.UuidGenerator;\r\nimport java.time.temporal.ChronoUnit;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;operativa_anterior\&quot; , \&quot;registos\&quot;);\r\nwm.processVariable(ProcessID, \&quot;proxima_operativa\&quot; , \&quot;acompanhamento_outorgas\&quot;);\r\n\r\npublic void updateFaseProcesso(){\r\n    Connection con = null;\r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\n    \r\n    PreparedStatement stmt_2 = null;\r\n    ResultSet rs_2 = null;\r\n    \r\n    try{\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\r\n        con = ds.getConnection();\r\n        \r\n        if(!con.isClosed()){\r\n            \r\n            \/\/Atualizar fase e subfase do processo\r\n            String recordId = \&quot;#process.recordId#\&quot;;\r\n            if(recordId!=null){\r\n                String updateFaseProcesso = \&quot;UPDATE app_fd_detalhe_processo SET c_fase_processo = ? WHERE c_id_processo = ?\&quot;;\r\n                stmt = con.prepareStatement(updateFaseProcesso);\r\n                stmt.setObject(1, \&quot;AO\&quot;);\r\n                stmt.setObject(2, recordId);\r\n                rs = stmt.executeQuery();\r\n                \r\n                String updateSubfaseProcesso = \&quot;UPDATE app_fd_detalhe_processo SET c_subfase_processo = ? WHERE c_id_processo = ?\&quot;;\r\n                stmt_2 = con.prepareStatement(updateSubfaseProcesso);\r\n                stmt_2.setObject(1, \&quot;Acompanhamento\&quot;);\r\n                stmt_2.setObject(2, recordId);\r\n                rs_2 = stmt_2.executeQuery();\r\n        \r\n            }\r\n        }\r\n      \r\n    }catch(Exception e){\r\n                LogUtil.error(appDef.toString(), e, \&quot;Error getting info from DB\&quot;);\r\n            }finally{\r\n                try{\r\n                    if(rs != null){\r\n                    rs.close();\r\n                    }\r\n                    if(stmt != null){\r\n                        stmt.close();\r\n                    }\r\n                    if(con != null &amp;&amp; !con.isClosed()) {\r\n                        con.close();\r\n                    }\r\n                }catch(Exception e){\r\n                    LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\r\n                }\r\n                \r\n            }\r\n}\r\n\r\nupdateFaseProcesso();&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>hipotecas::route5</string>
               <packageActivityPlugin>
                  <processDefId>hipotecas</processDefId>
                  <activityDefId>route5</activityDefId>
                  <pluginName>org.joget.apps.app.lib.RulesDecisionPlugin</pluginName>
                  <pluginProperties>{&quot;rules&quot;:{&quot;ifrules&quot;:[{&quot;revert&quot;:false,&quot;andOr&quot;:&quot;and&quot;,&quot;conditions&quot;:[{&quot;revert&quot;:false,&quot;variable&quot;:&quot;proxima_operativa&quot;,&quot;operation&quot;:&quot;==&quot;,&quot;value&quot;:&quot;contratacao&quot;}],&quot;actions&quot;:[{&quot;type&quot;:&quot;transition&quot;,&quot;name&quot;:&quot;transition37&quot;,&quot;value&quot;:&quot;&quot;}]},{&quot;revert&quot;:false,&quot;andOr&quot;:&quot;or&quot;,&quot;conditions&quot;:[{&quot;revert&quot;:false,&quot;variable&quot;:&quot;proxima_operativa&quot;,&quot;operation&quot;:&quot;==&quot;,&quot;value&quot;:&quot;producao_manual&quot;},{&quot;revert&quot;:false,&quot;variable&quot;:&quot;proxima_operativa&quot;,&quot;operation&quot;:&quot;==&quot;,&quot;value&quot;:&quot;producao_robot&quot;}],&quot;actions&quot;:[{&quot;type&quot;:&quot;transition&quot;,&quot;name&quot;:&quot;transition19&quot;,&quot;value&quot;:&quot;&quot;}]}],&quot;else&quot;:[{&quot;type&quot;:&quot;transition&quot;,&quot;name&quot;:&quot;transition22&quot;,&quot;value&quot;:&quot;&quot;}]}}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>hipotecas::route6</string>
               <packageActivityPlugin>
                  <processDefId>hipotecas</processDefId>
                  <activityDefId>route6</activityDefId>
                  <pluginName>org.joget.apps.app.lib.RulesDecisionPlugin</pluginName>
                  <pluginProperties>{&quot;rules&quot;:{&quot;ifrules&quot;:[{&quot;revert&quot;:false,&quot;andOr&quot;:&quot;and&quot;,&quot;conditions&quot;:[{&quot;revert&quot;:false,&quot;variable&quot;:&quot;proxima_operativa&quot;,&quot;operation&quot;:&quot;==&quot;,&quot;value&quot;:&quot;conclusoes&quot;}],&quot;actions&quot;:[{&quot;type&quot;:&quot;transition&quot;,&quot;name&quot;:&quot;transition23&quot;,&quot;value&quot;:&quot;&quot;}]},{&quot;revert&quot;:false,&quot;andOr&quot;:&quot;and&quot;,&quot;conditions&quot;:[{&quot;revert&quot;:false,&quot;variable&quot;:&quot;proxima_operativa&quot;,&quot;operation&quot;:&quot;==&quot;,&quot;value&quot;:&quot;acompanhamento_outorgas&quot;}],&quot;actions&quot;:[{&quot;type&quot;:&quot;transition&quot;,&quot;name&quot;:&quot;transition24&quot;,&quot;value&quot;:&quot;&quot;}]}],&quot;else&quot;:[{&quot;type&quot;:&quot;transition&quot;,&quot;name&quot;:&quot;transition34&quot;,&quot;value&quot;:&quot;&quot;}]}}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>hipotecas::route8</string>
               <packageActivityPlugin>
                  <processDefId>hipotecas</processDefId>
                  <activityDefId>route8</activityDefId>
                  <pluginName>org.joget.apps.app.lib.RulesDecisionPlugin</pluginName>
                  <pluginProperties>{&quot;rules&quot;:{&quot;ifrules&quot;:[{&quot;revert&quot;:false,&quot;andOr&quot;:&quot;and&quot;,&quot;conditions&quot;:[{&quot;revert&quot;:false,&quot;variable&quot;:&quot;proxima_operativa&quot;,&quot;operation&quot;:&quot;==&quot;,&quot;value&quot;:&quot;contratacao&quot;}],&quot;actions&quot;:[{&quot;type&quot;:&quot;transition&quot;,&quot;name&quot;:&quot;transition29&quot;,&quot;value&quot;:&quot;&quot;}]},{&quot;revert&quot;:false,&quot;andOr&quot;:&quot;and&quot;,&quot;conditions&quot;:[{&quot;revert&quot;:false,&quot;variable&quot;:&quot;proxima_operativa&quot;,&quot;operation&quot;:&quot;==&quot;,&quot;value&quot;:&quot;validacao&quot;}],&quot;actions&quot;:[{&quot;type&quot;:&quot;transition&quot;,&quot;name&quot;:&quot;transition36&quot;,&quot;value&quot;:&quot;&quot;}]}],&quot;else&quot;:[]}}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::ultimaAtividadeNBCont</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <activityDefId>ultimaAtividadeNBCont</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;flag_ultima_atividade\&quot; , \&quot;1\&quot;);\r\n&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>HIPProducao::AtualizarVariavelRobot</string>
               <packageActivityPlugin>
                  <processDefId>HIPProducao</processDefId>
                  <activityDefId>AtualizarVariavelRobot</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport javax.sql.DataSource;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;producao_robot\&quot; , \&quot;1\&quot;);\r\nwm.processVariable(ProcessID, \&quot;estado\&quot; , \&quot;RBT\&quot;);\r\n\r\npublic void updateEstado(){\r\n    Connection con = null;\r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\n    \r\n    try{\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\r\n        con = ds.getConnection();\r\n        \r\n        if(!con.isClosed()){\r\n            \r\n            \/\/Atualizar fase do processo\r\n            String recordId = \&quot;#process.recordId#\&quot;;\r\n                if(recordId!=null){\r\n                    String updateFaseProcesso = \&quot;UPDATE app_fd_detalhe_proce_hip SET c_estado_contratacao = ? WHERE c_id_processo = ?\&quot;;\r\n                    stmt = con.prepareStatement(updateFaseProcesso);\r\n                    stmt.setObject(1, \&quot;RBT\&quot;);\r\n                    stmt.setObject(2, recordId);\r\n                    rs = stmt.executeQuery();\r\n                    LogUtil.info(\&quot;Fluxo Produção Beanshell Tool\&quot;, \&quot;Estado do processo \&quot; + recordId + \&quot; atualizado para Processado pelo Robot\&quot;);\r\n                }\r\n        }\r\n      \r\n    }catch(Exception e){\r\n                LogUtil.error(appDef.toString(), e, \&quot;Error getting info from DB\&quot;);\r\n            }finally{\r\n                try{\r\n                    if(rs != null){\r\n                    rs.close();\r\n                    }\r\n                    if(stmt != null){\r\n                        stmt.close();\r\n                    }\r\n                    if(con != null &amp;&amp; !con.isClosed()) {\r\n                        con.close();\r\n                    }\r\n                }catch(Exception e){\r\n                    LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\r\n                }\r\n                \r\n            }\r\n}\r\nupdateEstado();\r\n&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>DISTdistribuicaoProcessosBCP2::distribuicaoProcessos</string>
               <packageActivityPlugin>
                  <processDefId>DISTdistribuicaoProcessosBCP2</processDefId>
                  <activityDefId>distribuicaoProcessos</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.WorkflowManager;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport org.joget.workflow.model.service.WorkflowUserManager;\r\nimport org.joget.apps.app.model.AppDefinition;\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.datalist.model.DataListBinderDefaultimport;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport javax.sql.DataSource;\r\n\r\nString idProcesso=\&quot;\&quot;;\r\nString aid = \&quot;\&quot;;\r\nString resourceId = \&quot;\&quot;;\r\n\r\n    Connection con = null;\r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\n    \r\n    PreparedStatement stmt_1 = null;\r\n    ResultSet rs_1 = null;\r\n    \r\n    try{\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\r\n        con = ds.getConnection();\r\n        \r\n        if(!con.isClosed()){\r\n                String queryGetAid = \&quot;SELECT p.id as &apos;idDist&apos; FROM shkprocesses sp LEFT JOIN shkprocesses sp2 on sp.ActivityRequesterProcessId = sp2.Id LEFT JOIN app_fd_processos_distrates p on sp.ActivityRequesterProcessId = p.id LEFT JOIN shkprocessstates sps ON sps.oid = sp.State LEFT JOIN SHKActivities sact ON sact.ProcessId = sp.Id LEFT JOIN SHKActivityStates ssta ON ssta.oid = sact.State LEFT JOIN (select ActivityId, group_concat(ResourceId separator &apos;; &apos;) as ResourceId from SHKAssignmentsTable group by ActivityId) sass on sact.Id = sass.ActivityId WHERE sps.KeyValue LIKE &apos;open.running&apos; AND p.id is not null AND (ssta.oid = &apos;1000001&apos; OR ssta.oid = &apos;1000003&apos; OR ssta.oid = &apos;1000005&apos;) AND sp.id like &apos;%DSTDistrates%&apos; AND sass.ResourceId LIKE &apos;%distrates_geral_bcp%&apos;\&quot;;\r\n        \t\tstmt = con.prepareStatement(queryGetAid);\r\n        \t\trs = stmt.executeQuery();\r\n    \t\t\r\n    \t\tif(rs.next()){\r\n    \t\t\tidProcesso = rs.getObject(\&quot;idDist\&quot;);\r\n    \t\t}\r\n            \r\n            if(idProcesso != null){\r\n                String queryGetAid_1 = \&quot;SELECT a.id as &apos;Aid&apos;, sass.ResourceId as &apos;ResourceId&apos; FROM shkprocesses p LEFT JOIN shkactivities a ON p.id = ProcessId LEFT JOIN shkprocessstates ps ON ps.oid = p.State LEFT JOIN SHKActivityStates acs ON acs.oid = a.State LEFT JOIN shkassignmentstable sass ON sass.ActivityId = a.id WHERE p.ActivityRequesterProcessId = ? AND ps.KeyValue LIKE &apos;open.running&apos; AND (acs.KeyValue LIKE &apos;open.not_running.not_started&apos; OR acs.KeyValue LIKE &apos;open.running&apos;)\&quot;;\r\n                stmt_1 = con.prepareStatement(queryGetAid_1);\r\n                stmt_1.setObject(1, idProcesso);\r\n                rs_1 = stmt_1.executeQuery();\r\n            \r\n                if(rs_1.next()){\r\n                    aid = rs_1.getObject(\&quot;Aid\&quot;);\r\n                    resourceId = rs_1.getObject(\&quot;ResourceId\&quot;);\r\n                    \r\n                    WorkflowManager wm = (WorkflowManager) AppUtil.getApplicationContext().getBean(\&quot;workflowManager\&quot;);\r\n                    WorkflowUserManager wum = (WorkflowUserManager) AppUtil.getApplicationContext().getBean(\&quot;workflowUserManager\&quot;);\r\n                    \r\n                    \/\/get the values from the \r\n                    String replaceUser = resourceId;\r\n                    String username = \&quot;#currentUser.username#\&quot;;\r\n                \r\n                \r\n                    \/\/getCurrentThreadUser() Method used by system to get current thread user\r\n                    String currentUser = wum.getCurrentThreadUser();\r\n                    wum.setCurrentThreadUser(replaceUser);\r\n                    wum.setCurrentThreadUser(currentUser);\r\n                    \r\n                    \/\/Reassigns the assignment from a user (replaceUser) to another user (username)\r\n                    wm.assignmentReassign(\&quot;\&quot;, \&quot;\&quot;, aid, username, replaceUser);\r\n                    \r\n                }\r\n            }\r\n            \r\n        }\r\n            \r\n    }catch(Exception e){\r\n            LogUtil.error(appDef.toString(), e, \&quot;Error getting info from DB\&quot;);\r\n    }finally{\r\n        try{\r\n            if(rs != null){\r\n            rs.close();\r\n            }\r\n            if(stmt != null){\r\n                stmt.close();\r\n            }\r\n            if(con != null &amp;&amp; !con.isClosed()) {\r\n                con.close();\r\n            }\r\n        }catch(Exception e){\r\n            LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\r\n        }\r\n        \r\n    }&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>processoTesteAssync::route2</string>
               <packageActivityPlugin>
                  <processDefId>processoTesteAssync</processDefId>
                  <activityDefId>route2</activityDefId>
                  <pluginName>org.joget.apps.app.lib.RulesDecisionPlugin</pluginName>
                  <pluginProperties>{&quot;rules&quot;:{&quot;ifrules&quot;:[{&quot;revert&quot;:false,&quot;andOr&quot;:&quot;or&quot;,&quot;conditions&quot;:[{&quot;revert&quot;:false,&quot;variable&quot;:&quot;precisa_filtro&quot;,&quot;operation&quot;:&quot;==&quot;,&quot;value&quot;:&quot;NAO&quot;},{&quot;revert&quot;:false,&quot;andOr&quot;:&quot;and&quot;,&quot;conditions&quot;:[{&quot;revert&quot;:false,&quot;variable&quot;:&quot;precisa_filtro&quot;,&quot;operation&quot;:&quot;==&quot;,&quot;value&quot;:&quot;SIM&quot;},{&quot;revert&quot;:false,&quot;variable&quot;:&quot;estado_filtro&quot;,&quot;operation&quot;:&quot;==&quot;,&quot;value&quot;:&quot;OK&quot;}]}],&quot;actions&quot;:[{&quot;type&quot;:&quot;transition&quot;,&quot;name&quot;:&quot;transition7&quot;,&quot;value&quot;:&quot;&quot;}]}],&quot;else&quot;:[{&quot;type&quot;:&quot;variable&quot;,&quot;name&quot;:&quot;estado_filtro&quot;,&quot;value&quot;:&quot;ANL&quot;},{&quot;type&quot;:&quot;transition&quot;,&quot;name&quot;:&quot;transition5&quot;,&quot;value&quot;:&quot;&quot;}]}}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CreditoHabitacao::alterarJaProcessadoMod11</string>
               <packageActivityPlugin>
                  <processDefId>CreditoHabitacao</processDefId>
                  <activityDefId>alterarJaProcessadoMod11</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport java.time.LocalDateTime; \r\nimport java.time.format.DateTimeFormatter;\r\nimport java.time.DayOfWeek;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport javax.sql.DataSource;\r\nimport org.joget.commons.util.UuidGenerator;\r\nimport java.time.temporal.ChronoUnit;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;ja_processado_mod11\&quot; , \&quot;SIM\&quot;);&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::emissaoCarta</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <activityDefId>emissaoCarta</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;emissaoMinutas&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;&quot;,&quot;deptId&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;#i18n.msg_realocar#&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;&quot;,&quot;properties&quot;:{}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;true&quot;,&quot;showProcessName&quot;:&quot;&quot;,&quot;showFutureActivities&quot;:&quot;true&quot;,&quot;showSkippedActivities&quot;:&quot;&quot;,&quot;usernameFormat&quot;:&quot;name&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoNormal::validacaoBancariaLegalABA</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <activityDefId>validacaoBancariaLegalABA</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;validacaoBancariaLegalABA&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;&quot;,&quot;deptId&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;#i18n.msg_realocar#&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;org.joget.apps.app.lib.BeanShellTool&quot;,&quot;properties&quot;:{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\nimport org.joget.commons.util.LogUtil;\nimport org.joget.apps.app.service.AppUtil;\n\n\nString assigneeId = \&quot;#process.activityInst.validacaoBancariaLegalABA.assignmentUsers#\&quot;;\nString ProcessID = workflowAssignment.getProcessId();\n\n\nString instanceId = AppUtil.processHashVariable(\&quot;#process.activityInst.validacaoBancariaLegalABA.instanceId[\&quot;+ProcessID+\&quot;]#\&quot;,null,null,null);\n\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\nwm.processVariable(ProcessID, \&quot;user_contratacao_abn\&quot; , assigneeId);\nwm.activityVariable(instanceId,\&quot;user_contratacao_abn\&quot;, assigneeId);\n&quot;}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;true&quot;,&quot;showProcessName&quot;:&quot;&quot;,&quot;showFutureActivities&quot;:&quot;true&quot;,&quot;showSkippedActivities&quot;:&quot;&quot;,&quot;usernameFormat&quot;:&quot;name&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHRegistos::insercaoChave</string>
               <packageActivityPlugin>
                  <processDefId>CHRegistos</processDefId>
                  <activityDefId>insercaoChave</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;insercaoChave&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;PL&quot;,&quot;deptId&quot;:&quot;PL_SIS_REG&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;REALOCAR&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;&quot;,&quot;properties&quot;:{}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHRegistos::preencherCamposQualidade</string>
               <packageActivityPlugin>
                  <processDefId>CHRegistos</processDefId>
                  <activityDefId>preencherCamposQualidade</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport java.time.LocalDateTime;\r\nimport java.time.LocalDate;\r\nimport java.time.format.DateTimeFormatter;\r\nimport java.time.DayOfWeek;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport javax.sql.DataSource;\r\nimport org.joget.commons.util.UuidGenerator;\r\nimport java.time.temporal.ChronoUnit;\r\n\r\npublic void updateCamposQualidade(){\r\n    \r\n    Connection con = null;\r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\n    \r\n    try{\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\r\n        con = ds.getConnection();\r\n        \r\n        if(!con.isClosed()){\r\n            \r\n            \/\/Atualizar subfase do processo\r\n            String recordId = \&quot;#process.recordId#\&quot;;\r\n            if(recordId!=null){\r\n\r\n                String date = \&quot;#date.yyyy-MM-dd HH:mm:ss#\&quot;;\r\n                String user = \&quot;#currentUser.fullName#\&quot;;\r\n            \r\n                String updateDataValidacaoRegisto = \&quot;UPDATE app_fd_detalhe_processo SET c_data_de_validacao_registo = ?, c_gestor_validacao_registo = ? WHERE c_id_processo = ?\&quot;;\r\n                stmt = con.prepareStatement(updateDataValidacaoRegisto);\r\n                stmt.setObject(1, date);\r\n                stmt.setObject(2, user);\r\n                stmt.setObject(3, recordId);\r\n                rs = stmt.executeQuery();\r\n            }\r\n        }\r\n      \r\n    }catch(Exception e){\r\n                LogUtil.error(appDef.toString(), e, \&quot;Error getting info from DB\&quot;);\r\n            }finally{\r\n                try{\r\n                    if(rs != null){\r\n                    rs.close();\r\n                    }\r\n                    if(stmt != null){\r\n                        stmt.close();\r\n                    }\r\n                    if(con != null &amp;&amp; !con.isClosed()) {\r\n                        con.close();\r\n                    }\r\n                }catch(Exception e){\r\n                    LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\r\n                }\r\n                \r\n            }\r\n}\r\n\r\nupdateCamposQualidade();&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>DISTdistribuicaoProcessosBIC::distribuicaoProcessos</string>
               <packageActivityPlugin>
                  <processDefId>DISTdistribuicaoProcessosBIC</processDefId>
                  <activityDefId>distribuicaoProcessos</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.WorkflowManager;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport org.joget.workflow.model.service.WorkflowUserManager;\r\nimport org.joget.apps.app.model.AppDefinition;\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.datalist.model.DataListBinderDefaultimport;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport javax.sql.DataSource;\r\n\r\nString idProcesso=\&quot;\&quot;;\r\nString aid = \&quot;\&quot;;\r\nString resourceId = \&quot;\&quot;;\r\n\r\n    Connection con = null;\r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\n    \r\n    PreparedStatement stmt_1 = null;\r\n    ResultSet rs_1 = null;\r\n    \r\n    try{\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\r\n        con = ds.getConnection();\r\n        \r\n        if(!con.isClosed()){\r\n                String queryGetAid = \&quot;SELECT p.id as &apos;idDist&apos; FROM shkprocesses sp LEFT JOIN shkprocesses sp2 on sp.ActivityRequesterProcessId = sp2.Id LEFT JOIN app_fd_processos_distrates p on sp.ActivityRequesterProcessId = p.id LEFT JOIN shkprocessstates sps ON sps.oid = sp.State LEFT JOIN SHKActivities sact ON sact.ProcessId = sp.Id LEFT JOIN SHKActivityStates ssta ON ssta.oid = sact.State LEFT JOIN (select ActivityId, group_concat(ResourceId separator &apos;; &apos;) as ResourceId from SHKAssignmentsTable group by ActivityId) sass on sact.Id = sass.ActivityId WHERE sps.KeyValue LIKE &apos;open.running&apos; AND p.id is not null AND (ssta.oid = &apos;1000001&apos; OR ssta.oid = &apos;1000003&apos; OR ssta.oid = &apos;1000005&apos;) AND sp.id like &apos;%DSTDistrates%&apos; AND sass.ResourceId LIKE &apos;%distrates_geral_bic%&apos;\&quot;;\r\n        \t\tstmt = con.prepareStatement(queryGetAid);\r\n        \t\trs = stmt.executeQuery();\r\n    \t\t\r\n    \t\tif(rs.next()){\r\n    \t\t\tidProcesso = rs.getObject(\&quot;idDist\&quot;);\r\n    \t\t}\r\n            \r\n            if(idProcesso != null){\r\n                String queryGetAid_1 = \&quot;SELECT a.id as &apos;Aid&apos;, sass.ResourceId as &apos;ResourceId&apos; FROM shkprocesses p LEFT JOIN shkactivities a ON p.id = ProcessId LEFT JOIN shkprocessstates ps ON ps.oid = p.State LEFT JOIN SHKActivityStates acs ON acs.oid = a.State LEFT JOIN shkassignmentstable sass ON sass.ActivityId = a.id WHERE p.ActivityRequesterProcessId = ? AND ps.KeyValue LIKE &apos;open.running&apos; AND (acs.KeyValue LIKE &apos;open.not_running.not_started&apos; OR acs.KeyValue LIKE &apos;open.running&apos;)\&quot;;\r\n                stmt_1 = con.prepareStatement(queryGetAid_1);\r\n                stmt_1.setObject(1, idProcesso);\r\n                rs_1 = stmt_1.executeQuery();\r\n            \r\n                if(rs_1.next()){\r\n                    aid = rs_1.getObject(\&quot;Aid\&quot;);\r\n                    resourceId = rs_1.getObject(\&quot;ResourceId\&quot;);\r\n                    \r\n                    WorkflowManager wm = (WorkflowManager) AppUtil.getApplicationContext().getBean(\&quot;workflowManager\&quot;);\r\n                    WorkflowUserManager wum = (WorkflowUserManager) AppUtil.getApplicationContext().getBean(\&quot;workflowUserManager\&quot;);\r\n                    \r\n                    \/\/get the values from the \r\n                    String replaceUser = resourceId;\r\n                    String username = \&quot;#currentUser.username#\&quot;;\r\n                \r\n                \r\n                    \/\/getCurrentThreadUser() Method used by system to get current thread user\r\n                    String currentUser = wum.getCurrentThreadUser();\r\n                    wum.setCurrentThreadUser(replaceUser);\r\n                    wum.setCurrentThreadUser(currentUser);\r\n                    \r\n                    \/\/Reassigns the assignment from a user (replaceUser) to another user (username)\r\n                    wm.assignmentReassign(\&quot;\&quot;, \&quot;\&quot;, aid, username, replaceUser);\r\n                    \r\n                }\r\n            }\r\n            \r\n        }\r\n            \r\n    }catch(Exception e){\r\n            LogUtil.error(appDef.toString(), e, \&quot;Error getting info from DB\&quot;);\r\n    }finally{\r\n        try{\r\n            if(rs != null){\r\n            rs.close();\r\n            }\r\n            if(stmt != null){\r\n                stmt.close();\r\n            }\r\n            if(con != null &amp;&amp; !con.isClosed()) {\r\n                con.close();\r\n            }\r\n        }catch(Exception e){\r\n            LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\r\n        }\r\n        \r\n    }&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>diligencias::tool1</string>
               <packageActivityPlugin>
                  <processDefId>diligencias</processDefId>
                  <activityDefId>tool1</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport javax.sql.DataSource;\r\n\r\nString idDiligencia = workflowAssignment.getProcessId();\r\n\r\npublic void updateWFVariableHip(){\r\n    \/\/String ProcessID = \&quot;#variable.id_processo_pai#\&quot;;\r\n    \r\n    String instanceId = AppUtil.processHashVariable(\&quot;#process.activityInst.preenchimentoProcesso.instanceId[\&quot;+ProcessID+\&quot;]#\&quot;,null,null,null);\r\n    LogUtil.info(\&quot;InstanceId\&quot;, instanceId);\r\n    \r\n    WorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\n    \/\/wm.processVariable(ProcessID, \&quot;estado_filtro\&quot; , \&quot;OK\&quot;);\r\n    \/\/wm.activityVariable(instanceId,\&quot;estado_filtro\&quot;, \&quot;OK\&quot;);\r\n    \r\n    wm.processVariable(ProcessID, \&quot;estado\&quot; , \&quot;FLT\&quot;);\r\n    wm.activityVariable(instanceId,\&quot;estado\&quot;, \&quot;FLT\&quot;);\r\n    \r\n    Connection con = null;\r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\n    \r\n    try{\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\r\n        con = ds.getConnection();\r\n        \r\n        if(!con.isClosed()){\r\n            \r\n            \/\/Atualizar fase do processo\r\n            String recordId = \&quot;#process.recordId#\&quot;;\r\n                if(recordId!=null){\r\n                    String updateFaseProcesso = \&quot;UPDATE app_fd_detalhe_proce_hip SET c_estado_contratacao = ? WHERE c_id_processo = ?\&quot;;\r\n                    stmt = con.prepareStatement(updateFaseProcesso);\r\n                    stmt.setObject(1, \&quot;FLT\&quot;);\r\n                    stmt.setObject(2, recordId);\r\n                    rs = stmt.executeQuery();\r\n                    \/\/LogUtil.info(\&quot;Fluxo Produção Beanshell Tool\&quot;, \&quot;Estado do processo \&quot; + recordId + \&quot; atualizado para Processado pelo Robot\&quot;);\r\n                }\r\n        }\r\n      \r\n    }catch(Exception e){\r\n                LogUtil.error(\&quot;HIPOTECAS - Fluxo - Update estado - Filtrado\&quot;, e, \&quot;Error getting info from DB\&quot;);\r\n            }finally{\r\n                try{\r\n                    if(rs != null){\r\n                    rs.close();\r\n                    }\r\n                    if(stmt != null){\r\n                        stmt.close();\r\n                    }\r\n                    if(con != null &amp;&amp; !con.isClosed()) {\r\n                        con.close();\r\n                    }\r\n                }catch(Exception e){\r\n                    LogUtil.error(\&quot;HIPOTECAS - Fluxo - Update estado - Filtrado\&quot;, e, \&quot;Error closing DB connection\&quot;);\r\n                }\r\n                \r\n            }\r\n}\r\n\r\n\/\/Atualizar flags de Alterações\r\npublic void updateFlags(){\r\n    Connection con = null;\r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\n\r\n    try{\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\r\n        con = ds.getConnection();\r\n        if(!con.isClosed()){\r\n            String queryGetDiligencia = \&quot;SELECT c_id_processo as &apos;idProcesso&apos; FROM app_fd_info_diligencia WHERE id = ? ;\&quot;;\r\n            stmt = con.prepareStatement(queryGetDiligencia);\r\n            stmt.setObject(1,idDiligencia);\r\n            rs = stmt.executeQuery();\r\n            String idProcesso = \&quot;\&quot;;\r\n            if(rs.next()){\r\n                idProcesso = rs.getObject(\&quot;idProcesso\&quot;);\r\n                String queryGetProcesso = \&quot;SELECT c_flag_alerta_alteracoes as &apos;flagAlteracoes&apos; FROM app_fd_processos WHERE id = ? ;\&quot;;\r\n                stmt = con.prepareStatement(queryGetProcesso);\r\n                stmt.setObject(1,idProcesso);\r\n                rs = stmt.executeQuery();\r\n                String flagAlteracoes = \&quot;\&quot;;\r\n                if(rs.next()){\r\n                    flagAlteracoes = rs.getObject(\&quot;flagAlteracoes\&quot;);\r\n                    if(flagAlteracoes.equals(\&quot;1\&quot;)){\r\n                        String queryResetFlag = \&quot;UPDATE app_fd_processos SET c_flag_alerta_alteracoes = &apos;0&apos;, c_flag_alteracoes= &apos;NAO&apos; WHERE id = ? ;\&quot;;\r\n                        stmt = con.prepareStatement(queryResetFlag);\r\n                        stmt.setObject(1,idProcesso);\r\n                        stmt.executeQuery();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n    }catch(Exception e){\r\n        LogUtil.error(appDef.toString(), e, \&quot;Error getting info from DB\&quot;);\r\n    }finally{\r\n        try{\r\n            if(rs != null){\r\n            rs.close();\r\n            }\r\n            if(stmt != null){\r\n                stmt.close();\r\n            }\r\n            if(con != null &amp;&amp; !con.isClosed()) {\r\n                con.close();\r\n            }\r\n        }catch(Exception e){\r\n            LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nString flag_alerta = \&quot;#variable.flag_alerta#\&quot;;\r\nString tipo_alerta = \&quot;#variable.tipo_alerta#\&quot;;\r\n\/\/Só dar reset a variáveis caso a diligência terminada seja um alerta do tipo de alterações de campo\r\nif(flag_alerta.equals(\&quot;1\&quot;) &amp;&amp; tipo_alerta.equals(\&quot;ALTERACOES\&quot;)){\r\n    \/\/LogUtil.info(\&quot;AAAAAA\&quot;, \&quot;RESET DE VARIAVEIS\&quot;);\r\n    updateFlags();\r\n}\r\n\r\nString ProcessID = \&quot;#variable.id_processo_pai#\&quot;;\r\nif(ProcessID.contains(\&quot;HIPContratacao\&quot;)){\r\n    updateWFVariableHip();\r\n}&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>hipotecas::route14</string>
               <packageActivityPlugin>
                  <processDefId>hipotecas</processDefId>
                  <activityDefId>route14</activityDefId>
                  <pluginName>org.joget.apps.app.lib.RulesDecisionPlugin</pluginName>
                  <pluginProperties>{&quot;rules&quot;:{&quot;ifrules&quot;:[{&quot;revert&quot;:false,&quot;andOr&quot;:&quot;and&quot;,&quot;conditions&quot;:[{&quot;revert&quot;:false,&quot;variable&quot;:&quot;proxima_operativa&quot;,&quot;operation&quot;:&quot;==&quot;,&quot;value&quot;:&quot;contratacao&quot;}],&quot;actions&quot;:[{&quot;type&quot;:&quot;transition&quot;,&quot;name&quot;:&quot;transition20&quot;,&quot;value&quot;:&quot;&quot;}]}],&quot;else&quot;:[{&quot;type&quot;:&quot;transition&quot;,&quot;name&quot;:&quot;transition25&quot;,&quot;value&quot;:&quot;&quot;}]}}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHRegistos::configurarDeposito</string>
               <packageActivityPlugin>
                  <processDefId>CHRegistos</processDefId>
                  <activityDefId>configurarDeposito</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport java.time.LocalDateTime; \r\nimport java.time.format.DateTimeFormatter;\r\nimport java.time.DayOfWeek;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport javax.sql.DataSource;\r\nimport org.joget.commons.util.UuidGenerator;\r\nimport java.time.temporal.ChronoUnit;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;flag_ultima_atividade\&quot; , \&quot;1\&quot;);\r\n\r\npublic void updateFaseProcesso(){\r\n    Connection con = null;\r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\n    \r\n    try{\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\r\n        con = ds.getConnection();\r\n        \r\n        if(!con.isClosed()){\r\n            \r\n            \/\/Atualizar subfase do processo\r\n            String recordId = \&quot;#process.recordId#\&quot;;\r\n            if(recordId!=null){\r\n                String updateSubfaseProcesso = \&quot;UPDATE app_fd_detalhe_processo SET c_subfase_processo = ? WHERE c_id_processo = ?\&quot;;\r\n                stmt = con.prepareStatement(updateSubfaseProcesso);\r\n                stmt.setObject(1, \&quot;Depósito\&quot;);\r\n                stmt.setObject(2, recordId);\r\n                rs = stmt.executeQuery();\r\n            }\r\n        }\r\n      \r\n    }catch(Exception e){\r\n                LogUtil.error(appDef.toString(), e, \&quot;Error getting info from DB\&quot;);\r\n            }finally{\r\n                try{\r\n                    if(rs != null){\r\n                    rs.close();\r\n                    }\r\n                    if(stmt != null){\r\n                        stmt.close();\r\n                    }\r\n                    if(con != null &amp;&amp; !con.isClosed()) {\r\n                        con.close();\r\n                    }\r\n                }catch(Exception e){\r\n                    LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\r\n                }\r\n                \r\n            }\r\n}\r\n\r\nupdateFaseProcesso();&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::PreenchimentoProcessoBST</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <activityDefId>PreenchimentoProcessoBST</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;PreenchimentoProcessoBST&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;&quot;,&quot;deptId&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;#i18n.msg_realocar#&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;&quot;,&quot;properties&quot;:{}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;true&quot;,&quot;showProcessName&quot;:&quot;&quot;,&quot;showFutureActivities&quot;:&quot;true&quot;,&quot;showSkippedActivities&quot;:&quot;&quot;,&quot;usernameFormat&quot;:&quot;name&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHConclusoes::ultimaAtividadeConc</string>
               <packageActivityPlugin>
                  <processDefId>CHConclusoes</processDefId>
                  <activityDefId>ultimaAtividadeConc</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport java.time.LocalDateTime; \r\nimport java.time.format.DateTimeFormatter;\r\nimport java.time.DayOfWeek;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport javax.sql.DataSource;\r\nimport org.joget.commons.util.UuidGenerator;\r\nimport java.time.temporal.ChronoUnit;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\nString proxOperativa = \&quot;#variable.proxima_operativa#\&quot;;\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;flag_ultima_atividade\&quot; , \&quot;2\&quot;);\r\n\r\npublic void updateFaseProcesso(){\r\n    Connection con = null;\r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\n    \r\n    try{\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\r\n        con = ds.getConnection();\r\n        \r\n        if(!con.isClosed()){\r\n            \r\n            \/\/Atualizar fase do processo\r\n            String recordId = \&quot;#process.recordId#\&quot;;\r\n                if(recordId!=null){\r\n                    String updateFaseProcesso = \&quot;UPDATE app_fd_detalhe_processo SET c_fase_processo = ? WHERE c_id_processo = ?\&quot;;\r\n                    stmt = con.prepareStatement(updateFaseProcesso);\r\n                    stmt.setObject(1, \&quot;CNC\&quot;);\r\n                    stmt.setObject(2, recordId);\r\n                    rs = stmt.executeQuery();\r\n                }\r\n        }\r\n      \r\n    }catch(Exception e){\r\n                LogUtil.error(appDef.toString(), e, \&quot;Error getting info from DB\&quot;);\r\n            }finally{\r\n                try{\r\n                    if(rs != null){\r\n                    rs.close();\r\n                    }\r\n                    if(stmt != null){\r\n                        stmt.close();\r\n                    }\r\n                    if(con != null &amp;&amp; !con.isClosed()) {\r\n                        con.close();\r\n                    }\r\n                }catch(Exception e){\r\n                    LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\r\n                }\r\n                \r\n            }\r\n}\r\nupdateFaseProcesso();\r\n&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHValidacaoComplexo::validacaoContratoDocumentacao</string>
               <packageActivityPlugin>
                  <processDefId>CHValidacaoComplexo</processDefId>
                  <activityDefId>validacaoContratoDocumentacao</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;validacaoContratoDocumentacao&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;&quot;,&quot;deptId&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;#i18n.msg_realocar#&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;&quot;,&quot;properties&quot;:{}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;true&quot;,&quot;showProcessName&quot;:&quot;&quot;,&quot;showFutureActivities&quot;:&quot;&quot;,&quot;showSkippedActivities&quot;:&quot;&quot;,&quot;usernameFormat&quot;:&quot;name&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoNormal::validacaoBancariaLegalGEN</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <activityDefId>validacaoBancariaLegalGEN</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;validacaoBancariaLegalGEN&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;&quot;,&quot;deptId&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;#i18n.msg_realocar#&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;org.joget.apps.app.lib.BeanShellTool&quot;,&quot;properties&quot;:{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\nimport org.joget.commons.util.LogUtil;\nimport org.joget.apps.app.service.AppUtil;\n\n\nString assigneeId = \&quot;#process.activityInst.validacaoBancariaLegalGEN.assignmentUsers#\&quot;;\nString ProcessID = workflowAssignment.getProcessId();\n\n\nString instanceId = AppUtil.processHashVariable(\&quot;#process.activityInst.validacaoBancariaLegalGEN.instanceId[\&quot;+ProcessID+\&quot;]#\&quot;,null,null,null);\n\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\nwm.processVariable(ProcessID, \&quot;user_contratacao_gen\&quot; , assigneeId);\nwm.activityVariable(instanceId,\&quot;user_contratacao_gen\&quot;, assigneeId);\n&quot;}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;true&quot;,&quot;showProcessName&quot;:&quot;&quot;,&quot;showFutureActivities&quot;:&quot;true&quot;,&quot;showSkippedActivities&quot;:&quot;&quot;,&quot;usernameFormat&quot;:&quot;name&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoNormal::validacaoBancariaLegalBCP</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <activityDefId>validacaoBancariaLegalBCP</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;validacaoBancariaLegalBCP&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;&quot;,&quot;deptId&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;#i18n.msg_realocar#&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;org.joget.apps.app.lib.BeanShellTool&quot;,&quot;properties&quot;:{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\nimport org.joget.commons.util.LogUtil;\nimport org.joget.apps.app.service.AppUtil;\n\n\nString assigneeId = \&quot;#process.activityInst.validacaoBancariaLegalBCP.assignmentUsers#\&quot;;\nString ProcessID = workflowAssignment.getProcessId();\n\n\nString instanceId = AppUtil.processHashVariable(\&quot;#process.activityInst.validacaoBancariaLegalBCP.instanceId[\&quot;+ProcessID+\&quot;]#\&quot;,null,null,null);\n\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\nwm.processVariable(ProcessID, \&quot;user_contratacao_bcp\&quot; , assigneeId);\nwm.activityVariable(instanceId,\&quot;user_contratacao_bcp\&quot;, assigneeId);\n&quot;}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;true&quot;,&quot;showProcessName&quot;:&quot;&quot;,&quot;showFutureActivities&quot;:&quot;true&quot;,&quot;showSkippedActivities&quot;:&quot;&quot;,&quot;usernameFormat&quot;:&quot;name&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>alertasValidacao::check_alertas</string>
               <packageActivityPlugin>
                  <processDefId>alertasValidacao</processDefId>
                  <activityDefId>check_alertas</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.commons.util.LogUtil;\nimport org.joget.commons.util.StringUtil;\nimport org.joget.apps.app.model.AppDefinition;\nimport org.joget.apps.app.model.PackageActivityForm;\nimport org.joget.apps.app.service.AppUtil;\nimport org.joget.apps.app.service.AppService;\nimport org.joget.apps.form.model.FormData;\nimport org.joget.workflow.model.WorkflowAssignment;\nimport org.joget.workflow.model.service.WorkflowManager;\nimport org.joget.workflow.model.service.WorkflowUserManager;\nimport org.joget.workflow.model.WorkflowProcess;\nimport org.joget.workflow.model.WorkflowProcessResult;\nimport org.joget.plugin.base.ApplicationPlugin;\nimport org.joget.plugin.base.Plugin;\nimport org.joget.plugin.base.PluginManager;\nimport org.joget.plugin.property.model.PropertyEditable;\nimport org.joget.apps.form.model.FormRow;\nimport org.joget.apps.form.model.FormRowSet;\nimport org.joget.workflow.model.service.*;\n\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport javax.sql.DataSource;\nimport org.joget.commons.util.UuidGenerator;\n\nimport java.util.HashMap;\n\npublic void processosAlertas(){\n    AppService appService = (AppService) AppUtil.getApplicationContext().getBean(\&quot;appService\&quot;);\n    WorkflowManager workflowManager = (WorkflowManager) AppUtil.getApplicationContext().getBean(\&quot;workflowManager\&quot;);\n    AppDefinition appDef = AppUtil.getCurrentAppDefinition();\n    \n    Connection con = null;\n    PreparedStatement stmt = null;\n    ResultSet rs = null;\n    String diligenciaId = null;\n    String processId = null;\n    String resourceId = null;\n    String alerta = \&quot;\&quot;;\n    String idAgendamento= \&quot;\&quot;;\n    String faseProcesso = \&quot;\&quot;;\n    String nWfPl = \&quot;\&quot;;\n    String alertaSwift = \&quot;\&quot;;\n    String userValidacao = \&quot;\&quot;;\n    Connection con2 = null;\n    PreparedStatement stmt2 = null;\n    PreparedStatement stmt3 = null;\n    ResultSet rs2 = null;\n    ResultSet rs3 = null;\n    \n    try{\n        DataSource ds = (DataSource) AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\n        con = ds.getConnection();\n        \n        if(!con.isClosed()){\n            \n            \n            String query = \&quot;SELECT p.id as &apos;IDProcesso&apos;, a.id as &apos;IDAgendamento&apos;, b.c_nome_banco, dp.c_complex_processo ,sass.resourceid as &apos;ResourceID&apos;, a.c_flag_alerta_agendamento as &apos;Alerta&apos;, dp.c_fase_processo as &apos;FaseProcesso&apos;, c_n_wf_pl as &apos;NWFPL&apos;, a.c_flag_alerta_agendamento_swift as &apos;AlertaSwift&apos;, sactdata.VariableValueVCHAR as &apos;UserValidacao&apos;, ato.c_status, ato.c_dataOutorga FROM shkprocesses shk LEFT JOIN app_fd_processos p ON p.id = shk.ActivityRequesterProcessId LEFT JOIN app_fd_banco b ON b.id = p.c_banco LEFT JOIN app_fd_detalhe_processo dp ON dp.id = p.c_detalhe_processo LEFT JOIN app_fd_agendamento a ON a.id = p.c_agendamento AND (a.c_flag_alerta_agendamento != &apos;SIM&apos; OR a.c_flag_alerta_agendamento_swift != &apos;SIM&apos;) RIGHT JOIN app_fd_atos ato ON ato.c_id_agendamento = a.id AND ato.c_status = &apos;AGD&apos; LEFT JOIN SHKActivities sact ON sact.ProcessId = shk.Id LEFT JOIN shkactivitydata sactdata ON sact.oid = sactdata.activity AND sactdata.VariableDefinitionId = &apos;user_validacao&apos; JOIN SHKAssignmentsTable sass ON sact.Id = sass.ActivityId WHERE DATE(ato.c_dataOutorga) &lt;= DATE_SUB(CURDATE(), INTERVAL -1 DAY);\&quot;;\n            stmt = con.prepareStatement(query);\n            \n            rs = stmt.executeQuery();\n            \n            while(rs.next()){\n                \/\/Alertas Pedidos de Guia\n                processId = rs.getString(1);\n                resourceId = rs.getString(5);\n                alerta = rs.getObject(\&quot;Alerta\&quot;);\n                idAgendamento = rs.getObject(\&quot;IDAgendamento\&quot;);\n                faseProcesso= rs.getObject(\&quot;FaseProcesso\&quot;);\n                nWfPl= rs.getObject(\&quot;NWFPL\&quot;);\n                alertaSwift = rs.getObject(\&quot;AlertaSwift\&quot;);\n                userValidacao= rs.getObject(\&quot;UserValidacao\&quot;);\n                \/\/LogUtil.info(\&quot;Processo Id\&quot;, \&quot;AAAAa\&quot;  + processId);\n                \/\/LogUtil.info(\&quot;User validação\&quot;, \&quot;AAAAa\&quot;  + userValidacao);\n                \/\/LogUtil.info(\&quot;Alerta\&quot;, \&quot;AAAAa\&quot;  + alerta);\n                \/\/Se o não estiver já com alerta\n                if(!alerta.equals(\&quot;SIM\&quot;) &amp;&amp; userValidacao != null &amp;&amp; !userValidacao.isEmpty() ){\n                    String banco =rs.getString(3);\n                    String complexidade = rs.getString(4);\n                    String equipaDest = \&quot;SISTEMA\&quot;;\n                    String equipaRem = \&quot;PL_INT_VAL_\&quot; + banco + \&quot;_\&quot; + complexidade + \&quot;_CRH\&quot;;\n                    \n                    Map variables = new HashMap();\n                    variables.put(\&quot;equipa_destinataria\&quot;, equipaDest);\n                    variables.put(\&quot;gestor_remetente\&quot;, userValidacao);\n                    variables.put(\&quot;gestor_destinatario\&quot;, \&quot;SISTEMA\&quot;);\n                    variables.put(\&quot;equipa_remetente\&quot;,equipaRem );\n                    variables.put(\&quot;flag_alerta\&quot;,\&quot;1\&quot; );\n                    \n                    WorkflowProcess process = appService.getWorkflowProcessForApp(appDef.getAppId(), appDef.getVersion().toString(), \&quot;Diligências\&quot;);\n                    \n                    WorkflowProcessResult result = workflowManager.processStart(process.getId(), variables);\n                    \n                    diligenciaId = result.getProcess().getInstanceId();\n                    \n                    try{\n                        con2 = ds.getConnection();\n                        \n                        if(!con2.isClosed()){\n                            String activityIdQuery = \&quot;select ass.activityID, ass.ResourceID  from shkprocesses pro left join shkassignmentstable ass on pro.id = ass.ActivityProcessID where pro.id = ?;\&quot;;\n                            stmt2 = con2.prepareStatement(activityIdQuery);\n                            stmt2.setObject(1, diligenciaId);\n                            rs2 = stmt2.executeQuery();\n                            if(rs2.next()){\n                                workflowManager.assignmentForceComplete(process.getId(), diligenciaId, rs2.getString(1), rs2.getString(2));\n                                                                            \n                                \/\/LogUtil.info(\&quot;ID Diligencia -&gt; \&quot;, diligenciaId);\n                                String assunto = \&quot;Alerta | Data de Agendamento | Processo - \&quot; + nWfPl;\n                                String mensagem = \&quot;Data de agendamento do processo \&quot; + nWfPl + \&quot; dentro de 24 horas. Pedir guias de imposto.\&quot;;\n                                String insertQuery = \&quot;INSERT INTO app_fd_info_diligencia(id, c_id_processo, c_operativa_destinataria, c_equipa_destinataria, c_gestor_destinatario, c_operativa_remetente, c_equipa_remetente, c_gestor_remetente, c_assunto, c_tipo_diligencia, c_diligencia, c_urgencia, c_banco, c_complexidade, dateCreated) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)ON DUPLICATE KEY UPDATE id = VALUES(id), c_id_processo = VALUES(c_id_processo), c_operativa_destinataria= VALUE(c_operativa_destinataria), c_equipa_destinataria = VALUES(c_equipa_destinataria), c_gestor_destinatario = VALUES(c_gestor_destinatario), c_operativa_remetente = VALUES(c_operativa_remetente), c_equipa_remetente = VALUES(c_equipa_remetente), c_gestor_remetente = VALUES(c_gestor_remetente), c_assunto = VALUES(c_assunto), c_tipo_diligencia = VALUES(c_tipo_diligencia), c_diligencia = VALUES(c_diligencia), c_urgencia = VALUES(c_urgencia), c_banco= VALUES(c_banco), c_complexidade= VALUES(c_complexidade), dateCreated= VALUES(dateCreated);\&quot;;\n                                stmt3 = con2.prepareStatement(insertQuery);\n                                stmt3.setObject(1, diligenciaId);\n                                stmt3.setObject(2, processId);\n                                stmt3.setObject(3, faseProcesso);\n                                stmt3.setObject(4, equipaDest);\n                                stmt3.setObject(5, \&quot;SISTEMA\&quot;);\n                                stmt3.setObject(6, faseProcesso);\n                                stmt3.setObject(7, equipaRem);\n                                stmt3.setObject(8, userValidacao);\n                                stmt3.setObject(9, assunto);\n                                stmt3.setObject(10, \&quot;ALERTA\&quot;);\n                                stmt3.setObject(11, mensagem);\n                                stmt3.setObject(12, \&quot;SIM\&quot;);\n                                stmt3.setObject(13, banco);\n                                stmt3.setObject(14, complexidade);\n                                stmt3.setObject(15, \&quot;#date.yyyy-MM-dd hh:mm:ss#\&quot;);\n                                stmt3.executeQuery();\n                                LogUtil.info(\&quot;Alertas Validação Guias de Imposto\&quot;, \&quot;Foi enviada uma diligência automática relativa ao processo \&quot; + processId);\n                            }\n                            \n                            \/\/Atualizar flag de alerta para SIM\n                            String queryUpdateAgendamentoFlag = \&quot;UPDATE app_fd_agendamento SET c_flag_alerta_agendamento = &apos;SIM&apos; WHERE id = ?\&quot;;\n                            stmt2 = con2.prepareStatement(queryUpdateAgendamentoFlag);\n                            stmt2.setObject(1, idAgendamento);\n                            rs2 = stmt2.executeQuery();\n                            \n                            \n                            \n                        }\n                    } catch(Exception e) {\n                        LogUtil.error(\&quot;Alertas Validacao\&quot;, e, \&quot;Error loading user data in load binder\&quot;);\n                    } finally{\n                        try{\n                            if(rs2 != null){\n                                rs2.close();\n                            }\n                            if(rs3 != null){\n                                rs3.close();\n                            }\n                            if(stmt2 != null){\n                                stmt2.close();\n                            }\n                            if(stmt3 != null){\n                                stmt3.close();\n                            }\n                            if(con2 != null &amp;&amp; !con2.isClosed()) {\n                                con2.close();\n                            }\n                        }catch(Exception e){\n                            LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\n                        }\n                    }\n                }\n                \n                \/\/Alerta Swift\n                if(!alertaSwift.equals(\&quot;SIM\&quot;)){\n                    String banco =rs.getString(3);\n                    String complexidade = rs.getString(4);\n                    String equipaDest = \&quot;SISTEMA\&quot;;\n                    String equipaRem = \&quot;PL_INT_\&quot;+faseProcesso+\&quot;_\&quot; + banco + \&quot;_\&quot; + complexidade + \&quot;_CRH\&quot;;\n                    \n                    if(resourceId.equals(\&quot;registos_geral\&quot;)){\n                        equipaRem = \&quot;PL_SIS_REG\&quot;;\n                    }\n                    Map variables = new HashMap();\n                    variables.put(\&quot;equipa_destinataria\&quot;, equipaDest);\n                    variables.put(\&quot;gestor_remetente\&quot;, resourceId);\n                    variables.put(\&quot;gestor_destinatario\&quot;, \&quot;SISTEMA\&quot;);\n                    variables.put(\&quot;equipa_remetente\&quot;,equipaRem );\n                    variables.put(\&quot;flag_alerta\&quot;,\&quot;1\&quot; );\n                    \n                    \n                    WorkflowProcess process = appService.getWorkflowProcessForApp(appDef.getAppId(), appDef.getVersion().toString(), \&quot;Diligências\&quot;);\n                    \n                    WorkflowProcessResult result = workflowManager.processStart(process.getId(), variables);\n                    \n                    diligenciaId = result.getProcess().getInstanceId();\n                    try{\n                        con2 = ds.getConnection();\n                        \n                        if(!con2.isClosed()){\n                            String activityIdQuery = \&quot;select ass.activityID, ass.ResourceID  from shkprocesses pro left join shkassignmentstable ass on pro.id = ass.ActivityProcessID where pro.id = ?;\&quot;;\n                            stmt2 = con2.prepareStatement(activityIdQuery);\n                            stmt2.setObject(1, diligenciaId);\n                            rs2 = stmt2.executeQuery();\n                            \n                            if(rs2.next()){\n                                workflowManager.assignmentForceComplete(process.getId(), diligenciaId, rs2.getString(1), rs2.getString(2));\n                                LogUtil.info(\&quot;Alerta Swift\&quot;, \&quot;Diligencia \&quot; +diligenciaId);\n                                \/\/LogUtil.info(\&quot;ID Diligencia -&gt; \&quot;, diligenciaId);\n                                String assunto = \&quot;Alerta | SWIFT | Processo - \&quot; + nWfPl;\n                                String mensagem = \&quot;SWIFT do processo \&quot; + nWfPl + \&quot; dentro de 24 horas. Anexar ficheiro.\&quot;;\n                                String insertQuery = \&quot;INSERT INTO app_fd_info_diligencia(id, c_id_processo, c_operativa_destinataria, c_equipa_destinataria, c_gestor_destinatario, c_operativa_remetente, c_equipa_remetente, c_gestor_remetente, c_assunto, c_tipo_diligencia, c_diligencia, c_urgencia, c_banco, c_complexidade, dateCreated) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)ON DUPLICATE KEY UPDATE id = VALUES(id), c_id_processo = VALUES(c_id_processo), c_operativa_destinataria= VALUE(c_operativa_destinataria), c_equipa_destinataria = VALUES(c_equipa_destinataria), c_gestor_destinatario = VALUES(c_gestor_destinatario), c_operativa_remetente = VALUES(c_operativa_remetente), c_equipa_remetente = VALUES(c_equipa_remetente), c_gestor_remetente = VALUES(c_gestor_remetente), c_assunto = VALUES(c_assunto), c_tipo_diligencia = VALUES(c_tipo_diligencia), c_diligencia = VALUES(c_diligencia), c_urgencia = VALUES(c_urgencia), c_banco= VALUES(c_banco), c_complexidade= VALUES(c_complexidade), dateCreated= VALUES(dateCreated);\&quot;;\n                                stmt3 = con2.prepareStatement(insertQuery);\n                                stmt3.setObject(1, diligenciaId);\n                                stmt3.setObject(2, processId);\n                                stmt3.setObject(3, faseProcesso);\n                                stmt3.setObject(4, equipaDest);\n                                stmt3.setObject(5, \&quot;SISTEMA\&quot;);\n                                stmt3.setObject(6, faseProcesso);\n                                stmt3.setObject(7, equipaRem);\n                                stmt3.setObject(8, resourceId);\n                                stmt3.setObject(9, assunto);\n                                stmt3.setObject(10, \&quot;ALERTA\&quot;);\n                                stmt3.setObject(11, mensagem);\n                                stmt3.setObject(12, \&quot;SIM\&quot;);\n                                stmt3.setObject(13, banco);\n                                stmt3.setObject(14, complexidade);\n                                stmt3.setObject(15, \&quot;#date.yyyy-MM-dd hh:mm:ss#\&quot;);\n                                stmt3.executeQuery();\n                                LogUtil.info(\&quot;Alertas Validação SWIFT \&quot;, \&quot;Foi enviada uma diligência automática relativa ao processo \&quot; + processId);\n                               \n                            }\n                            \n                            \/\/Atualizar flag de alerta para SIM\n                            String queryUpdateAgendamentoFlag = \&quot;UPDATE app_fd_agendamento SET c_flag_alerta_agendamento_swift = &apos;SIM&apos; WHERE id = ?\&quot;;\n                            stmt2 = con2.prepareStatement(queryUpdateAgendamentoFlag);\n                            stmt2.setObject(1, idAgendamento);\n                            rs2 = stmt2.executeQuery();\n                            \n                            \n                        }\n                    } catch(Exception e) {\n                        LogUtil.error(\&quot;Beanshell Alertas Validacao\&quot;, e, \&quot;Erro\&quot;);\n                    } finally{\n                        try{\n                            if(rs2 != null){\n                                rs2.close();\n                            }\n                            if(rs3 != null){\n                                rs3.close();\n                            }\n                            if(stmt2 != null){\n                                stmt2.close();\n                            }\n                            if(stmt3 != null){\n                                stmt3.close();\n                            }\n                            if(con2 != null &amp;&amp; !con2.isClosed()) {\n                                con2.close();\n                            }\n                        }catch(Exception e){\n                            LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\n                        }\n                    }\n                }\n                \n            }\n        }\n    } catch(Exception e) {\n            LogUtil.error(\&quot;Alertas Validacao\&quot;, e, \&quot;Error loading user data in load binder\&quot;);\n    } finally{\n        try{\n            if(rs != null){\n                rs.close();\n            }\n            if(stmt != null){\n                stmt.close();\n            }\n            if(con != null &amp;&amp; !con.isClosed()) {\n                con.close();\n            }\n            }catch(Exception e){\n                LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\n            }\n        }\n}\n\nprocessosAlertas();&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>hipotecas::route10</string>
               <packageActivityPlugin>
                  <processDefId>hipotecas</processDefId>
                  <activityDefId>route10</activityDefId>
                  <pluginName>org.joget.apps.app.lib.RulesDecisionPlugin</pluginName>
                  <pluginProperties>{&quot;rules&quot;:{&quot;ifrules&quot;:[{&quot;revert&quot;:false,&quot;andOr&quot;:&quot;and&quot;,&quot;conditions&quot;:[{&quot;revert&quot;:false,&quot;variable&quot;:&quot;proxima_operativa&quot;,&quot;operation&quot;:&quot;==&quot;,&quot;value&quot;:&quot;acompanhamento_outorgas&quot;}],&quot;actions&quot;:[{&quot;type&quot;:&quot;transition&quot;,&quot;name&quot;:&quot;transition27&quot;,&quot;value&quot;:&quot;&quot;}]}],&quot;else&quot;:[{&quot;type&quot;:&quot;transition&quot;,&quot;name&quot;:&quot;transition26&quot;,&quot;value&quot;:&quot;&quot;}]}}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::PreenchimentoProcessoBCP</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <activityDefId>PreenchimentoProcessoBCP</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;PreenchimentoProcessoBCP&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;&quot;,&quot;deptId&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;#i18n.msg_realocar#&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;&quot;,&quot;properties&quot;:{}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;true&quot;,&quot;showProcessName&quot;:&quot;&quot;,&quot;showFutureActivities&quot;:&quot;true&quot;,&quot;showSkippedActivities&quot;:&quot;&quot;,&quot;usernameFormat&quot;:&quot;name&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHFiltroNormal::atualizarEstadoContratacao</string>
               <packageActivityPlugin>
                  <processDefId>CHFiltroNormal</processDefId>
                  <activityDefId>atualizarEstadoContratacao</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport javax.sql.DataSource;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;estado\&quot; , \&quot;FLT\&quot;);\r\n\r\npublic void updateEstado(){\r\n    Connection con = null;\r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\n    \r\n    try{\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\r\n        con = ds.getConnection();\r\n        \r\n        if(!con.isClosed()){\r\n            \r\n            \/\/Atualizar fase do processo\r\n            String recordId = \&quot;#process.recordId#\&quot;;\r\n                if(recordId!=null){\r\n                    String updateFaseProcesso = \&quot;UPDATE app_fd_detalhe_processo SET c_estado_contratacao = ? WHERE c_id_processo = ?\&quot;;\r\n                    stmt = con.prepareStatement(updateFaseProcesso);\r\n                    stmt.setObject(1, \&quot;FLT\&quot;);\r\n                    stmt.setObject(2, recordId);\r\n                    rs = stmt.executeQuery();\r\n                    LogUtil.info(\&quot;Fluxo Filtro Beanshell Tool\&quot;, \&quot;Estado do processo \&quot; + recordId + \&quot; atualizado para filtrado\&quot;);\r\n                }\r\n        }\r\n      \r\n    }catch(Exception e){\r\n                LogUtil.error(appDef.toString(), e, \&quot;Error getting info from DB\&quot;);\r\n            }finally{\r\n                try{\r\n                    if(rs != null){\r\n                    rs.close();\r\n                    }\r\n                    if(stmt != null){\r\n                        stmt.close();\r\n                    }\r\n                    if(con != null &amp;&amp; !con.isClosed()) {\r\n                        con.close();\r\n                    }\r\n                }catch(Exception e){\r\n                    LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\r\n                }\r\n                \r\n            }\r\n}\r\nupdateEstado();\r\n&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::PreenchimentoProcessoGEN</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <activityDefId>PreenchimentoProcessoGEN</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;PreenchimentoProcessoGEN&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;&quot;,&quot;deptId&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;#i18n.msg_realocar#&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;&quot;,&quot;properties&quot;:{}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;true&quot;,&quot;showProcessName&quot;:&quot;&quot;,&quot;showFutureActivities&quot;:&quot;true&quot;,&quot;showSkippedActivities&quot;:&quot;&quot;,&quot;usernameFormat&quot;:&quot;name&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::ultimaAtividadeBICCont</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <activityDefId>ultimaAtividadeBICCont</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;flag_ultima_atividade\&quot; , \&quot;1\&quot;);\r\n&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoNormal::ultimaAtividadeBICCont</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <activityDefId>ultimaAtividadeBICCont</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;flag_ultima_atividade\&quot; , \&quot;1\&quot;);\r\n&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoNormal::ultimaAtividadeGenCont</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <activityDefId>ultimaAtividadeGenCont</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;flag_ultima_atividade\&quot; , \&quot;1\&quot;);\r\n&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CreditoHabitacao::route14</string>
               <packageActivityPlugin>
                  <processDefId>CreditoHabitacao</processDefId>
                  <activityDefId>route14</activityDefId>
                  <pluginName>org.joget.apps.app.lib.RulesDecisionPlugin</pluginName>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHValidacaoComplexo::ultimaAtividadeVal</string>
               <packageActivityPlugin>
                  <processDefId>CHValidacaoComplexo</processDefId>
                  <activityDefId>ultimaAtividadeVal</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;flag_ultima_atividade\&quot; , \&quot;1\&quot;);\r\n&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoNormal::ultimaAtividadeBNICont</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <activityDefId>ultimaAtividadeBNICont</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\n\r\nString ProcessID = workflowAssignment.getProcessId();\r\n\r\n\/\/Set the workflow variable\r\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\r\nwm.processVariable(ProcessID, \&quot;flag_ultima_atividade\&quot; , \&quot;1\&quot;);&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>CHContratacaoNormal::validacaoBancariaLegalBST</string>
               <packageActivityPlugin>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <activityDefId>validacaoBancariaLegalBST</activityDefId>
                  <pluginName>org.joget.process.AssignmentFormActions</pluginName>
                  <pluginProperties>{&quot;runInBackground&quot;:&quot;&quot;,&quot;readonly&quot;:&quot;&quot;,&quot;enableClarification&quot;:&quot;&quot;,&quot;enableReassignment&quot;:&quot;true&quot;,&quot;reassignmentActivityId&quot;:&quot;validacaoBancariaLegalBST&quot;,&quot;optionsBinder&quot;:{&quot;className&quot;:&quot;org.joget.plugin.enterprise.UserOptionsBinder&quot;,&quot;properties&quot;:{&quot;orgId&quot;:&quot;&quot;,&quot;deptId&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;addEmptyOption&quot;:&quot;&quot;,&quot;emptyLabel&quot;:&quot;&quot;,&quot;optionLabel&quot;:&quot;&quot;,&quot;grouping&quot;:&quot;&quot;,&quot;useAjax&quot;:&quot;&quot;,&quot;cacheInterval&quot;:&quot;&quot;}},&quot;reassignButtonLabel&quot;:&quot;#i18n.msg_realocar#&quot;,&quot;reassignIgnoreValidation&quot;:&quot;true&quot;,&quot;postReassignTool&quot;:{&quot;className&quot;:&quot;org.joget.apps.app.lib.BeanShellTool&quot;,&quot;properties&quot;:{&quot;script&quot;:&quot;import org.joget.workflow.model.service.*;\nimport org.joget.commons.util.LogUtil;\nimport org.joget.apps.app.service.AppUtil;\n\n\nString assigneeId = \&quot;#process.activityInst.validacaoBancariaLegalBST.assignmentUsers#\&quot;;\nString ProcessID = workflowAssignment.getProcessId();\n\n\nString instanceId = AppUtil.processHashVariable(\&quot;#process.activityInst.validacaoBancariaLegalBST.instanceId[\&quot;+ProcessID+\&quot;]#\&quot;,null,null,null);\n\nWorkflowManager wm = (WorkflowManager) pluginManager.getBean(\&quot;workflowManager\&quot;);\nwm.processVariable(ProcessID, \&quot;user_contratacao_bst\&quot; , assigneeId);\nwm.activityVariable(instanceId,\&quot;user_contratacao_bst\&quot;, assigneeId);\n&quot;}},&quot;updateAsigneeField&quot;:&quot;&quot;,&quot;reassignTooltip&quot;:&quot;&quot;,&quot;enableWithdrawal&quot;:&quot;&quot;,&quot;enableApproval&quot;:&quot;&quot;,&quot;completeUpdateStatus&quot;:&quot;&quot;,&quot;completeButtonLabel&quot;:&quot;&quot;,&quot;enableComments&quot;:&quot;&quot;,&quot;enableProcessStatus&quot;:&quot;true&quot;,&quot;showProcessName&quot;:&quot;&quot;,&quot;showFutureActivities&quot;:&quot;true&quot;,&quot;showSkippedActivities&quot;:&quot;&quot;,&quot;usernameFormat&quot;:&quot;name&quot;,&quot;processTable&quot;:&quot;{appId}_pd&quot;,&quot;updateStatus&quot;:&quot;true&quot;,&quot;workflowVariable&quot;:&quot;status&quot;,&quot;updateDraft&quot;:&quot;&quot;,&quot;parentFieldId&quot;:&quot;status&quot;,&quot;statusValue&quot;:[{&quot;status&quot;:&quot;Approved&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Rejected&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Clarification&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Reassignment&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Withdrawal&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Completed&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;},{&quot;status&quot;:&quot;Draft&quot;,&quot;customValue&quot;:&quot;&quot;,&quot;customLabel&quot;:&quot;&quot;}]}</pluginProperties>
               </packageActivityPlugin>
            </entry>
         </packageActivityPluginMap>
         <packageParticipantMap>
            <entry>
               <string>CHProducaoComplexo::processStartWhiteList</string>
               <packageParticipant>
                  <processDefId>CHProducaoComplexo</processDefId>
                  <participantId>processStartWhiteList</participantId>
                  <type>role</type>
                  <value>adminUser</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>HIPContratacao::hip_user_contratacao</string>
               <packageParticipant>
                  <processDefId>HIPContratacao</processDefId>
                  <participantId>hip_user_contratacao</participantId>
                  <type>workflowVariable</type>
                  <value>user_contratacao,user</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>DSTDistrates::dist_bcp_1</string>
               <packageParticipant>
                  <processDefId>DSTDistrates</processDefId>
                  <participantId>dist_bcp_1</participantId>
                  <type>plugin</type>
                  <value>org.joget.marketplace.EnhancedLoadBalancedParticipant</value>
                  <pluginProperties>{&quot;orgId&quot;:&quot;PL&quot;,&quot;deptId&quot;:&quot;PL_INT_DIST_BCP&quot;,&quot;deptIdDesc&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;getChoiceThisApp&quot;:&quot;&quot;,&quot;getChoiceDatabaseType&quot;:&quot;mySql&quot;,&quot;getChoiceDatabaseAddress&quot;:&quot;#envVariable.databaseAddress#&quot;,&quot;getChoiceDatabasePort&quot;:&quot;#envVariable.databasePort#&quot;,&quot;getChoiceDatabaseUser&quot;:&quot;#envVariable.databaseUser#&quot;,&quot;getChoiceDatabasePass&quot;:&quot;%%%%A8LtZ84V6E5jGb5mFIraVsumynuOKStcIRRwGtCfl1vhvN319/UPxw==%%%%&quot;,&quot;getChoiceAssignToLastPerformer&quot;:&quot;true&quot;,&quot;getChoiceLastLanePerformer&quot;:&quot;#variable.user_dist_bcp#&quot;,&quot;getChoiceCurrentUser&quot;:&quot;&quot;,&quot;exclusion&quot;:&quot;&quot;,&quot;debugMode&quot;:&quot;&quot;}</pluginProperties>
               </packageParticipant>
            </entry>
            <entry>
               <string>DSTDistrates::dist_bcp_2</string>
               <packageParticipant>
                  <processDefId>DSTDistrates</processDefId>
                  <participantId>dist_bcp_2</participantId>
                  <type>plugin</type>
                  <value>org.joget.marketplace.EnhancedLoadBalancedParticipant</value>
                  <pluginProperties>{&quot;orgId&quot;:&quot;PL&quot;,&quot;deptId&quot;:&quot;PL_SIS_DIST_BCP&quot;,&quot;deptIdDesc&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;getChoiceThisApp&quot;:&quot;&quot;,&quot;getChoiceDatabaseType&quot;:&quot;mySql&quot;,&quot;getChoiceDatabaseAddress&quot;:&quot;#envVariable.databaseAddress#&quot;,&quot;getChoiceDatabasePort&quot;:&quot;#envVariable.databasePort#&quot;,&quot;getChoiceDatabaseUser&quot;:&quot;#envVariable.databaseUser#&quot;,&quot;getChoiceDatabasePass&quot;:&quot;%%%%Y9v5BQ+jIhE+7CxP6JabHToLyB1QveYV+Zn9vHgYonVLmde70wDvDA==%%%%&quot;,&quot;getChoiceAssignToLastPerformer&quot;:&quot;true&quot;,&quot;getChoiceLastLanePerformer&quot;:&quot;#variable.user_dist_geral_bcp#&quot;,&quot;getChoiceCurrentUser&quot;:&quot;&quot;,&quot;exclusion&quot;:&quot;&quot;,&quot;debugMode&quot;:&quot;&quot;}</pluginProperties>
               </packageParticipant>
            </entry>
            <entry>
               <string>PCDProcuradoria::processStartWhiteList</string>
               <packageParticipant>
                  <processDefId>PCDProcuradoria</processDefId>
                  <participantId>processStartWhiteList</participantId>
                  <type>role</type>
                  <value>adminUser</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>DSTDistrates::dist_bcp_3</string>
               <packageParticipant>
                  <processDefId>DSTDistrates</processDefId>
                  <participantId>dist_bcp_3</participantId>
                  <type>plugin</type>
                  <value>org.joget.apps.app.lib.BeanShellTool</value>
                  <pluginProperties>{&quot;script&quot;:&quot;w&quot;}</pluginProperties>
               </packageParticipant>
            </entry>
            <entry>
               <string>poll_email::starter</string>
               <packageParticipant>
                  <processDefId>poll_email</processDefId>
                  <participantId>starter</participantId>
                  <type>requester</type>
                  <value>terminate</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>alertasValidacao::processStartWhiteList</string>
               <packageParticipant>
                  <processDefId>alertasValidacao</processDefId>
                  <participantId>processStartWhiteList</participantId>
                  <type>role</type>
                  <value>adminUser</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>CHValidacaoComplexo::validacao_com</string>
               <packageParticipant>
                  <processDefId>CHValidacaoComplexo</processDefId>
                  <participantId>validacao_com</participantId>
                  <type>plugin</type>
                  <value>org.joget.marketplace.EnhancedLoadBalancedParticipant</value>
                  <pluginProperties>{&quot;orgId&quot;:&quot;PL&quot;,&quot;deptId&quot;:&quot;PL_INT_VAL_GEN_COM_CRH&quot;,&quot;deptIdDesc&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;getChoiceThisApp&quot;:&quot;&quot;,&quot;getChoiceDatabaseType&quot;:&quot;mySql&quot;,&quot;getChoiceDatabaseAddress&quot;:&quot;#envVariable.databaseAddress#&quot;,&quot;getChoiceDatabasePort&quot;:&quot;#envVariable.databasePort#&quot;,&quot;getChoiceDatabaseUser&quot;:&quot;#envVariable.databaseUser#&quot;,&quot;getChoiceDatabasePass&quot;:&quot;%%%%PYIJj8vaE1wPTS1S+MvwZWoZuCUQbssG/ifZLIkxgwlsugA6E/hiqw==%%%%&quot;,&quot;getChoiceAssignToLastPerformer&quot;:&quot;true&quot;,&quot;getChoiceLastLanePerformer&quot;:&quot;#variable.user_validacao_com#&quot;,&quot;getChoiceCurrentUser&quot;:&quot;&quot;,&quot;exclusion&quot;:&quot;&quot;,&quot;debugMode&quot;:&quot;true&quot;}</pluginProperties>
               </packageParticipant>
            </entry>
            <entry>
               <string>CHContratacaoNormal::contratacao_mtg2</string>
               <packageParticipant>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <participantId>contratacao_mtg2</participantId>
                  <type>plugin</type>
                  <value>org.joget.marketplace.EnhancedLoadBalancedParticipant</value>
                  <pluginProperties>{&quot;orgId&quot;:&quot;PL&quot;,&quot;deptId&quot;:&quot;PL_INT_CNT_MTG_NOR_CRH&quot;,&quot;deptIdDesc&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;getChoiceThisApp&quot;:&quot;&quot;,&quot;getChoiceDatabaseType&quot;:&quot;mySql&quot;,&quot;getChoiceDatabaseAddress&quot;:&quot;#envVariable.databaseAddress#&quot;,&quot;getChoiceDatabasePort&quot;:&quot;#envVariable.databasePort#&quot;,&quot;getChoiceDatabaseUser&quot;:&quot;#envVariable.databaseUser#&quot;,&quot;getChoiceDatabasePass&quot;:&quot;%%%%D5Cjs+1rSNwNc20WW5kWxbOfnWD+GZsuglr8lw6ZxyT0D1Yj5vSrzQ==%%%%&quot;,&quot;getChoiceAssignToLastPerformer&quot;:&quot;true&quot;,&quot;getChoiceLastLanePerformer&quot;:&quot;#variable.user_contratacao_mtg2#&quot;,&quot;getChoiceCurrentUser&quot;:&quot;&quot;,&quot;exclusion&quot;:&quot;&quot;,&quot;debugMode&quot;:&quot;true&quot;}</pluginProperties>
               </packageParticipant>
            </entry>
            <entry>
               <string>CHFiltroComplexo::processStartWhiteList</string>
               <packageParticipant>
                  <processDefId>CHFiltroComplexo</processDefId>
                  <participantId>processStartWhiteList</participantId>
                  <type>role</type>
                  <value>adminUser</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>CHAcompanhamentoOutorgas::processStartWhiteList</string>
               <packageParticipant>
                  <processDefId>CHAcompanhamentoOutorgas</processDefId>
                  <participantId>processStartWhiteList</participantId>
                  <type>role</type>
                  <value>adminUser</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>CHContratacaoNormal::contratacao_mtg1</string>
               <packageParticipant>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <participantId>contratacao_mtg1</participantId>
                  <type>plugin</type>
                  <value>org.joget.marketplace.EnhancedLoadBalancedParticipant</value>
                  <pluginProperties>{&quot;orgId&quot;:&quot;PL&quot;,&quot;deptId&quot;:&quot;PL_INT_CNT_MTG_NOR_CRH&quot;,&quot;deptIdDesc&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;getChoiceThisApp&quot;:&quot;&quot;,&quot;getChoiceDatabaseType&quot;:&quot;mySql&quot;,&quot;getChoiceDatabaseAddress&quot;:&quot;#envVariable.databaseAddress#&quot;,&quot;getChoiceDatabasePort&quot;:&quot;#envVariable.databasePort#&quot;,&quot;getChoiceDatabaseUser&quot;:&quot;#envVariable.databaseUser#&quot;,&quot;getChoiceDatabasePass&quot;:&quot;%%%%9stNPXq9hbRznHmQ1Dy1QXlmd0gfskyGcBpOrGDMzroUyHTKqiQpjQ==%%%%&quot;,&quot;getChoiceAssignToLastPerformer&quot;:&quot;true&quot;,&quot;getChoiceLastLanePerformer&quot;:&quot;#variable.user_contratacao_mtg1#&quot;,&quot;getChoiceCurrentUser&quot;:&quot;&quot;,&quot;exclusion&quot;:&quot;&quot;,&quot;debugMode&quot;:&quot;true&quot;}</pluginProperties>
               </packageParticipant>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::contratacao_abn_com</string>
               <packageParticipant>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <participantId>contratacao_abn_com</participantId>
                  <type>plugin</type>
                  <value>org.joget.marketplace.EnhancedLoadBalancedParticipant</value>
                  <pluginProperties>{&quot;orgId&quot;:&quot;PL&quot;,&quot;deptId&quot;:&quot;PL_INT_CNT_ABN_COM_CRH&quot;,&quot;deptIdDesc&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;getChoiceThisApp&quot;:&quot;&quot;,&quot;getChoiceDatabaseType&quot;:&quot;mySql&quot;,&quot;getChoiceDatabaseAddress&quot;:&quot;#envVariable.databaseAddress#&quot;,&quot;getChoiceDatabasePort&quot;:&quot;#envVariable.databasePort#&quot;,&quot;getChoiceDatabaseUser&quot;:&quot;#envVariable.databaseUser#&quot;,&quot;getChoiceDatabasePass&quot;:&quot;%%%%zUdOh4DNGlSayKvHc0H0dwPJyLFwNU1p+9n8gAcNjbWDL+brn7sBfg==%%%%&quot;,&quot;getChoiceAssignToLastPerformer&quot;:&quot;true&quot;,&quot;getChoiceLastLanePerformer&quot;:&quot;#variable.user_contratacao_abn#&quot;,&quot;getChoiceCurrentUser&quot;:&quot;&quot;,&quot;exclusion&quot;:&quot;&quot;,&quot;debugMode&quot;:&quot;true&quot;}</pluginProperties>
               </packageParticipant>
            </entry>
            <entry>
               <string>DSTDistrates::dist_mtg_2</string>
               <packageParticipant>
                  <processDefId>DSTDistrates</processDefId>
                  <participantId>dist_mtg_2</participantId>
                  <type>plugin</type>
                  <value>org.joget.marketplace.EnhancedLoadBalancedParticipant</value>
                  <pluginProperties>{&quot;orgId&quot;:&quot;PL&quot;,&quot;deptId&quot;:&quot;PL_SIS_DIST_MTG&quot;,&quot;deptIdDesc&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;getChoiceThisApp&quot;:&quot;&quot;,&quot;getChoiceDatabaseType&quot;:&quot;mySql&quot;,&quot;getChoiceDatabaseAddress&quot;:&quot;#envVariable.databaseAddress#&quot;,&quot;getChoiceDatabasePort&quot;:&quot;#envVariable.databasePort#&quot;,&quot;getChoiceDatabaseUser&quot;:&quot;#envVariable.databaseUser#&quot;,&quot;getChoiceDatabasePass&quot;:&quot;%%%%2wnc5pe579W7MaMv4uTwZtdM7Yt7bRBRvEI1NQYczwAOJulCokfjBg==%%%%&quot;,&quot;getChoiceAssignToLastPerformer&quot;:&quot;true&quot;,&quot;getChoiceLastLanePerformer&quot;:&quot;#variable.user_dist_geral_mtg#&quot;,&quot;getChoiceCurrentUser&quot;:&quot;&quot;,&quot;exclusion&quot;:&quot;&quot;,&quot;debugMode&quot;:&quot;&quot;}</pluginProperties>
               </packageParticipant>
            </entry>
            <entry>
               <string>CHContratacaoNormal::contratacao_gen</string>
               <packageParticipant>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <participantId>contratacao_gen</participantId>
                  <type>plugin</type>
                  <value>org.joget.marketplace.EnhancedLoadBalancedParticipant</value>
                  <pluginProperties>{&quot;orgId&quot;:&quot;PL&quot;,&quot;deptId&quot;:&quot;PL_INT_DUM&quot;,&quot;deptIdDesc&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;getChoiceThisApp&quot;:&quot;&quot;,&quot;getChoiceDatabaseType&quot;:&quot;mySql&quot;,&quot;getChoiceDatabaseAddress&quot;:&quot;#envVariable.databaseAddress#&quot;,&quot;getChoiceDatabasePort&quot;:&quot;#envVariable.databasePort#&quot;,&quot;getChoiceDatabaseUser&quot;:&quot;#envVariable.databaseUser#&quot;,&quot;getChoiceDatabasePass&quot;:&quot;%%%%UakwPbWtw5xVnZkXJ8tXj+ZIUd4GaG7j86F2ZQpkGBeaNdif0KJKVQ==%%%%&quot;,&quot;getChoiceAssignToLastPerformer&quot;:&quot;true&quot;,&quot;getChoiceLastLanePerformer&quot;:&quot;#variable.user_contratacao_gen#&quot;,&quot;getChoiceCurrentUser&quot;:&quot;&quot;,&quot;exclusion&quot;:&quot;&quot;,&quot;debugMode&quot;:&quot;true&quot;}</pluginProperties>
               </packageParticipant>
            </entry>
            <entry>
               <string>DSTDistrates::dist_mtg_1</string>
               <packageParticipant>
                  <processDefId>DSTDistrates</processDefId>
                  <participantId>dist_mtg_1</participantId>
                  <type>plugin</type>
                  <value>org.joget.marketplace.EnhancedLoadBalancedParticipant</value>
                  <pluginProperties>{&quot;orgId&quot;:&quot;PL&quot;,&quot;deptId&quot;:&quot;PL_INT_DIST_MTG&quot;,&quot;deptIdDesc&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;getChoiceThisApp&quot;:&quot;&quot;,&quot;getChoiceDatabaseType&quot;:&quot;mySql&quot;,&quot;getChoiceDatabaseAddress&quot;:&quot;#envVariable.databaseAddress#&quot;,&quot;getChoiceDatabasePort&quot;:&quot;#envVariable.databasePort#&quot;,&quot;getChoiceDatabaseUser&quot;:&quot;#envVariable.databaseUser#&quot;,&quot;getChoiceDatabasePass&quot;:&quot;%%%%TzJEGQqHr1cR28rgANi33ktzVYfRPn+UvjUjRGLGv9q6KSBThpXBkA==%%%%&quot;,&quot;getChoiceAssignToLastPerformer&quot;:&quot;true&quot;,&quot;getChoiceLastLanePerformer&quot;:&quot;#variable.user_dist_mtg1#&quot;,&quot;getChoiceCurrentUser&quot;:&quot;&quot;,&quot;exclusion&quot;:&quot;&quot;,&quot;debugMode&quot;:&quot;&quot;}</pluginProperties>
               </packageParticipant>
            </entry>
            <entry>
               <string>HIPProducao::process29_ProdRobot</string>
               <packageParticipant>
                  <processDefId>HIPProducao</processDefId>
                  <participantId>process29_ProdRobot</participantId>
                  <type>department</type>
                  <value>PL_INT_PRD_GEN_RPA_CRH</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>CHContratacaoNormal::contratacao_bcp</string>
               <packageParticipant>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <participantId>contratacao_bcp</participantId>
                  <type>plugin</type>
                  <value>org.joget.marketplace.EnhancedLoadBalancedParticipant</value>
                  <pluginProperties>{&quot;orgId&quot;:&quot;PL&quot;,&quot;deptId&quot;:&quot;PL_INT_CNT_BCP_NOR_CRH&quot;,&quot;deptIdDesc&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;getChoiceThisApp&quot;:&quot;&quot;,&quot;getChoiceDatabaseType&quot;:&quot;mySql&quot;,&quot;getChoiceDatabaseAddress&quot;:&quot;#envVariable.databaseAddress#&quot;,&quot;getChoiceDatabasePort&quot;:&quot;#envVariable.databasePort#&quot;,&quot;getChoiceDatabaseUser&quot;:&quot;#envVariable.databaseUser#&quot;,&quot;getChoiceDatabasePass&quot;:&quot;%%%%pVGAmoNJ37XLiZTfIwsOVShcLp/70O5rvCVgqp1lix9sqoLjNOzFIw==%%%%&quot;,&quot;getChoiceAssignToLastPerformer&quot;:&quot;true&quot;,&quot;getChoiceLastLanePerformer&quot;:&quot;#variable.user_contratacao_bcp#&quot;,&quot;getChoiceCurrentUser&quot;:&quot;&quot;,&quot;exclusion&quot;:&quot;&quot;,&quot;debugMode&quot;:&quot;true&quot;}</pluginProperties>
               </packageParticipant>
            </entry>
            <entry>
               <string>diligenciaAut::participant2_1</string>
               <packageParticipant>
                  <processDefId>diligenciaAut</processDefId>
                  <participantId>participant2_1</participantId>
                  <type>user</type>
                  <value>a_aferreira</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>CHContratacaoNormal::contratacao_bst</string>
               <packageParticipant>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <participantId>contratacao_bst</participantId>
                  <type>plugin</type>
                  <value>org.joget.marketplace.EnhancedLoadBalancedParticipant</value>
                  <pluginProperties>{&quot;orgId&quot;:&quot;PL&quot;,&quot;deptId&quot;:&quot;PL_INT_CNT_BST_NOR_CRH&quot;,&quot;deptIdDesc&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;getChoiceThisApp&quot;:&quot;&quot;,&quot;getChoiceDatabaseType&quot;:&quot;mySql&quot;,&quot;getChoiceDatabaseAddress&quot;:&quot;#envVariable.databaseAddress#&quot;,&quot;getChoiceDatabasePort&quot;:&quot;#envVariable.databasePort#&quot;,&quot;getChoiceDatabaseUser&quot;:&quot;#envVariable.databaseUser#&quot;,&quot;getChoiceDatabasePass&quot;:&quot;%%%%nttQQI4HCsh0ggoeMts79kaJfTMnGB4dXnJmYZcDN5YGgK99Xf50sw==%%%%&quot;,&quot;getChoiceAssignToLastPerformer&quot;:&quot;true&quot;,&quot;getChoiceLastLanePerformer&quot;:&quot;#variable.user_contratacao_bst#&quot;,&quot;getChoiceCurrentUser&quot;:&quot;&quot;,&quot;exclusion&quot;:&quot;&quot;,&quot;debugMode&quot;:&quot;true&quot;}</pluginProperties>
               </packageParticipant>
            </entry>
            <entry>
               <string>CHProducaoComplexo::ProdRobot_com</string>
               <packageParticipant>
                  <processDefId>CHProducaoComplexo</processDefId>
                  <participantId>ProdRobot_com</participantId>
                  <type>department</type>
                  <value>PL_INT_PRD_GEN_RPA_CRH</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>DSTDistrates::processStartWhiteList</string>
               <packageParticipant>
                  <processDefId>DSTDistrates</processDefId>
                  <participantId>processStartWhiteList</participantId>
                  <type>role</type>
                  <value>adminUser</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>CHAcompanhamentoOutorgas::validadorInicial</string>
               <packageParticipant>
                  <processDefId>CHAcompanhamentoOutorgas</processDefId>
                  <participantId>validadorInicial</participantId>
                  <type>plugin</type>
                  <value>org.joget.apps.app.lib.BeanShellTool</value>
                  <pluginProperties>{&quot;script&quot;:&quot;import java.lang.Exception;\r\nimport java.util.ArrayList;\r\nimport java.util.Collection;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.SQLException;\r\nimport java.sql.ResultSet;\r\nimport javax.sql.DataSource;\r\nimport org.joget.plugin.base.PluginManager;\r\nimport org.joget.commons.util.UuidGenerator;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport org.joget.apps.app.model.AppDefinition;\r\nimport org.joget.directory.model.User;\r\nimport org.joget.directory.model.service.ExtDirectoryManager;\r\nimport org.joget.workflow.model.service.*;\r\nimport org.joget.workflow.model.WorkflowActivity;\r\nimport org.joget.workflow.model.WorkflowProcessResult;\r\nimport org.joget.workflow.model.service.WorkflowManager;\r\n\r\npublic Collection getValidadorInicial(WorkflowActivity activity) {\r\n    \/\/ [TO DO] Obter qual a entidade autenticadora do processo\r\n    \r\n    Collection participantes = new ArrayList();\r\n    ExtDirectoryManager directoryManager = (ExtDirectoryManager) pluginManager.getBean(\&quot;directoryManager\&quot;);\r\n    WorkflowManager wm = (WorkflowManager) AppUtil.getApplicationContext().getBean(\&quot;workflowManager\&quot;);\r\n\r\n    String recordId = \&quot;#process.recordId#\&quot;;\r\n    String tipoEntidade = \&quot;#variable.tipo_entidade#\&quot;;\r\n    \r\n    if (tipoEntidade.equals(\&quot;AUT\&quot;)) {\r\n        participantes.add(\&quot;variable.nome_entidade#\&quot;);\r\n    }\r\n    \r\n    if (tipoEntidade.equals(\&quot;NAUT\&quot;) || tipoEntidade.equals(\&quot;SEMI\&quot;)) {\r\n        String userDistribuicaoManual = \&quot;#variable.username_distribuicao_manual#\&quot;;\r\n        \r\n        if (userDistribuicaoManual.isEmpty()) {\r\n            Connection con = null;\r\n            PreparedStatement stmt = null;\r\n            ResultSet rs = null;\r\n            \r\n            try {\r\n                DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\&quot;setupDataSource\&quot;);\r\n                con = ds.getConnection();\r\n                \r\n                if(!con.isClosed()) {\r\n                    String dataOutorga = \&quot;\&quot;;\r\n                    String horaOutorga = \&quot;\&quot;;\r\n                    String username = \&quot;\&quot;;\r\n                    \r\n                    String queryObterDataOutorga = \&quot;SELECT c_dataOutorga, c_horaOutorga FROM app_fd_atos a WHERE c_id_processo LIKE ? AND c_status LIKE &apos;AGD&apos;;\&quot;;\r\n                    stmt = con.prepareStatement(queryObterDataOutorga);\r\n                    stmt.setObject(1, recordId);\r\n                    rs = stmt.executeQuery();\r\n                    \r\n                    if (rs.next()) {\r\n                        dataOutorga = rs.getObject(\&quot;c_dataOutorga\&quot;);\r\n                        horaOutorga = rs.getObject(\&quot;c_horaOutorga\&quot;);\r\n                    }\r\n                    \r\n                    \r\n                    \/\/ Obter Gestor com menos processos alocados\r\n                    String queryObterGestor = \&quot;SELECT c_user_colaborador, c_email_profissional, numero_processos, estado, data_outorga, hora_outorga FROM app_fd_info_colaboradores col LEFT JOIN (SELECT ato.c_status AS estado, ato.c_dataOutorga AS data_outorga, ato.c_horaOutorga AS hora_outorga, p.id AS idProc, count(p.id) as numero_processos, dp.c_n_wf_pl AS NProc, dp.c_nome_banco AS Banco, dp.c_tipo_processo AS TipoProcesso, sp.Id AS processId, sp.Name AS processName, sact.Id AS instanceId, sact.Name AS activityName, sass.ResourceId AS assignee FROM shkprocesses sp LEFT JOIN shkprocesses sp2 ON sp.ActivityRequesterProcessId = sp2.Id LEFT JOIN app_fd_processos p ON sp.ActivityRequesterProcessId = p.id LEFT JOIN app_fd_detalhe_processo dp ON dp.id = p.c_detalhe_processo LEFT JOIN shkprocessstates sps ON sps.oid = sp.State LEFT JOIN SHKActivities sact ON sact.ProcessId = sp.Id LEFT JOIN SHKActivityStates ssta ON ssta.oid = sact.State LEFT JOIN (SELECT ActivityId, group_concat(ResourceId separator &apos;; &apos;) AS ResourceId FROM SHKAssignmentsTable GROUP BY ActivityId) sass ON sact.Id = sass.ActivityId LEFT JOIN app_fd_atos ato ON ato.c_id_processo = p.id WHERE sps.KeyValue LIKE &apos;open.running&apos; AND p.id IS NOT NULL AND (ssta.oid = &apos;1000001&apos; OR ssta.oid = &apos;1000003&apos; OR ssta.oid = &apos;1000005&apos;) AND ato.c_status = &apos;AGD&apos; AND ato.c_dataOutorga = ? AND ato.c_horaOutorga = ?) tot ON (col.c_user_colaborador = tot.assignee) WHERE c_departamentos LIKE &apos;%PL_INT_AO%&apos; ORDER BY numero_processos ASC LIMIT 1;\&quot;;\r\n                    stmt = con.prepareStatement(queryObterGestor);\r\n                    stmt.setObject(1, dataOutorga);\r\n                    stmt.setObject(2, horaOutorga);\r\n                    rs = stmt.executeQuery();\r\n                    \r\n                    if (rs.next()) {\r\n                        username = rs.getObject(\&quot;c_user_colaborador\&quot;);\r\n                    } else {\r\n                        username = \&quot;acompanhamento_outorgas_geral\&quot;;\r\n                    }\r\n                    \r\n                    participantes.add(username);\r\n                }\r\n              \r\n            } catch(Exception e) {\r\n                \/\/LogUtil.error(appDef.toString(), e, \&quot;Error getting info from DB\&quot;);\r\n                LogUtil.error(\&quot;AO | Mapear Validador Inicial\&quot;, e, \&quot;Error getting info from DB\&quot;);\r\n            } finally {\r\n                try {\r\n                    if(rs != null) {\r\n                        rs.close();\r\n                    }\r\n                    if(stmt != null) {\r\n                        stmt.close();\r\n                    }\r\n                    if(con != null &amp;&amp; !con.isClosed()) {\r\n                        con.close();\r\n                    }\r\n                } catch(Exception e) {\r\n                    \/\/LogUtil.error(appDef.toString(), e, \&quot;Error closing DB connection\&quot;);\r\n                    LogUtil.error(\&quot;AO | Mapear Validador Inicial\&quot;, e, \&quot;Error closing DB connection\&quot;);\r\n                }\r\n            }\r\n            \r\n            \/*\r\n                Distribuição Automática:\r\n                \r\n                2 processos por gestor por hora\r\n                    Se não houver disponibilidade serão atribuídos manualmente\r\n                    Exceção para NBAOPC e DL -&gt; 1 por gestor por hora\r\n            *\/\r\n            \r\n        }\r\n    }\r\n    \r\n    return participantes;\r\n}\r\n \r\nreturn getValidadorInicial(workflowActivity);&quot;}</pluginProperties>
               </packageParticipant>
            </entry>
            <entry>
               <string>notificacoes::notificacaoStarter</string>
               <packageParticipant>
                  <processDefId>notificacoes</processDefId>
                  <participantId>notificacaoStarter</participantId>
                  <type>requester</type>
                  <value></value>
               </packageParticipant>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::contratacao_mtg1_com</string>
               <packageParticipant>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <participantId>contratacao_mtg1_com</participantId>
                  <type>plugin</type>
                  <value>org.joget.marketplace.EnhancedLoadBalancedParticipant</value>
                  <pluginProperties>{&quot;orgId&quot;:&quot;PL&quot;,&quot;deptId&quot;:&quot;PL_INT_CNT_MTG_COM_CRH&quot;,&quot;deptIdDesc&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;getChoiceThisApp&quot;:&quot;&quot;,&quot;getChoiceDatabaseType&quot;:&quot;mySql&quot;,&quot;getChoiceDatabaseAddress&quot;:&quot;#envVariable.databaseAddress#&quot;,&quot;getChoiceDatabasePort&quot;:&quot;#envVariable.databasePort#&quot;,&quot;getChoiceDatabaseUser&quot;:&quot;#envVariable.databaseUser#&quot;,&quot;getChoiceDatabasePass&quot;:&quot;%%%%zn4tFoUHKCp6yg9NhX9ZD5C1WqCCF8c5GmJa2wKoM2p54HjqbHojdA==%%%%&quot;,&quot;getChoiceAssignToLastPerformer&quot;:&quot;true&quot;,&quot;getChoiceLastLanePerformer&quot;:&quot;#variable.user_contratacao_mtg1_com#&quot;,&quot;getChoiceCurrentUser&quot;:&quot;&quot;,&quot;exclusion&quot;:&quot;&quot;,&quot;debugMode&quot;:&quot;true&quot;}</pluginProperties>
               </packageParticipant>
            </entry>
            <entry>
               <string>CHContratacaoNormal::contratacao_bic</string>
               <packageParticipant>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <participantId>contratacao_bic</participantId>
                  <type>plugin</type>
                  <value>org.joget.marketplace.EnhancedLoadBalancedParticipant</value>
                  <pluginProperties>{&quot;orgId&quot;:&quot;PL&quot;,&quot;deptId&quot;:&quot;PL_INT_CNT_BIC_NOR_CRH&quot;,&quot;deptIdDesc&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;getChoiceThisApp&quot;:&quot;&quot;,&quot;getChoiceDatabaseType&quot;:&quot;mySql&quot;,&quot;getChoiceDatabaseAddress&quot;:&quot;#envVariable.databaseAddress#&quot;,&quot;getChoiceDatabasePort&quot;:&quot;#envVariable.databasePort#&quot;,&quot;getChoiceDatabaseUser&quot;:&quot;#envVariable.databaseUser#&quot;,&quot;getChoiceDatabasePass&quot;:&quot;%%%%CULfPd5cbN1a6ndTvP6IQAkEl68WvLGi9xQUKNFzg+8wkZc9VI3++Q==%%%%&quot;,&quot;getChoiceAssignToLastPerformer&quot;:&quot;true&quot;,&quot;getChoiceLastLanePerformer&quot;:&quot;#variable.user_contratacao_bic#&quot;,&quot;getChoiceCurrentUser&quot;:&quot;&quot;,&quot;exclusion&quot;:&quot;&quot;,&quot;debugMode&quot;:&quot;true&quot;}</pluginProperties>
               </packageParticipant>
            </entry>
            <entry>
               <string>DISTdistribuicaoProcessosABN::processStartWhiteList</string>
               <packageParticipant>
                  <processDefId>DISTdistribuicaoProcessosABN</processDefId>
                  <participantId>processStartWhiteList</participantId>
                  <type>role</type>
                  <value>loggedInUser</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>HIPValidacao::process29_validacao</string>
               <packageParticipant>
                  <processDefId>HIPValidacao</processDefId>
                  <participantId>process29_validacao</participantId>
                  <type>plugin</type>
                  <value>org.joget.marketplace.EnhancedLoadBalancedParticipant</value>
                  <pluginProperties>{&quot;orgId&quot;:&quot;PL&quot;,&quot;deptId&quot;:&quot;PL_INT_VAL_GEN_NOR_CRH&quot;,&quot;deptIdDesc&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;getChoiceThisApp&quot;:&quot;&quot;,&quot;getChoiceDatabaseType&quot;:&quot;mySql&quot;,&quot;getChoiceDatabaseAddress&quot;:&quot;#envVariable.databaseAddress#&quot;,&quot;getChoiceDatabasePort&quot;:&quot;#envVariable.databasePort#&quot;,&quot;getChoiceDatabaseUser&quot;:&quot;#envVariable.databaseUser#&quot;,&quot;getChoiceDatabasePass&quot;:&quot;%%%%uh9ErZQQWi0WRqDhvHG6Mfi+BvsfEJa++kV9KlMGjpld02mDQr+AWg==%%%%&quot;,&quot;getChoiceAssignToLastPerformer&quot;:&quot;true&quot;,&quot;getChoiceLastLanePerformer&quot;:&quot;#variable.user_validacao#&quot;,&quot;getChoiceCurrentUser&quot;:&quot;&quot;,&quot;exclusion&quot;:&quot;&quot;,&quot;debugMode&quot;:&quot;true&quot;}</pluginProperties>
               </packageParticipant>
            </entry>
            <entry>
               <string>poll_email::processStartWhiteList</string>
               <packageParticipant>
                  <processDefId>poll_email</processDefId>
                  <participantId>processStartWhiteList</participantId>
                  <type>role</type>
                  <value>adminUser</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>DSTDistrates::dist_bic_3</string>
               <packageParticipant>
                  <processDefId>DSTDistrates</processDefId>
                  <participantId>dist_bic_3</participantId>
                  <type>plugin</type>
                  <value>org.joget.marketplace.EnhancedLoadBalancedParticipant</value>
                  <pluginProperties>{&quot;orgId&quot;:&quot;PL&quot;,&quot;deptId&quot;:&quot;PL_INT_DIST_BIC&quot;,&quot;deptIdDesc&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;getChoiceThisApp&quot;:&quot;&quot;,&quot;getChoiceDatabaseType&quot;:&quot;mySql&quot;,&quot;getChoiceDatabaseAddress&quot;:&quot;#envVariable.databaseAddress#&quot;,&quot;getChoiceDatabasePort&quot;:&quot;#envVariable.databasePort#&quot;,&quot;getChoiceDatabaseUser&quot;:&quot;#envVariable.databaseUser#&quot;,&quot;getChoiceDatabasePass&quot;:&quot;%%%%kNEccsKtiYreT+hCf3H8WBfvysPSnu4CDWPv1+Vid6KUau1javdVFw==%%%%&quot;,&quot;getChoiceAssignToLastPerformer&quot;:&quot;true&quot;,&quot;getChoiceLastLanePerformer&quot;:&quot;#variable.user_dist_bic2#&quot;,&quot;getChoiceCurrentUser&quot;:&quot;&quot;,&quot;exclusion&quot;:&quot;&quot;,&quot;debugMode&quot;:&quot;&quot;}</pluginProperties>
               </packageParticipant>
            </entry>
            <entry>
               <string>DSTDistrates::dist_bic_2</string>
               <packageParticipant>
                  <processDefId>DSTDistrates</processDefId>
                  <participantId>dist_bic_2</participantId>
                  <type>plugin</type>
                  <value>org.joget.marketplace.EnhancedLoadBalancedParticipant</value>
                  <pluginProperties>{&quot;orgId&quot;:&quot;PL&quot;,&quot;deptId&quot;:&quot;PL_SIS_DIST_BIC&quot;,&quot;deptIdDesc&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;getChoiceThisApp&quot;:&quot;&quot;,&quot;getChoiceDatabaseType&quot;:&quot;mySql&quot;,&quot;getChoiceDatabaseAddress&quot;:&quot;#envVariable.databaseAddress#&quot;,&quot;getChoiceDatabasePort&quot;:&quot;#envVariable.databasePort#&quot;,&quot;getChoiceDatabaseUser&quot;:&quot;#envVariable.databaseUser#&quot;,&quot;getChoiceDatabasePass&quot;:&quot;%%%%dFruTtPy0EMosZhe6+4WyA4XZSnv9arDBr3R6tFAbOT8nBwB/wFTlw==%%%%&quot;,&quot;getChoiceAssignToLastPerformer&quot;:&quot;true&quot;,&quot;getChoiceLastLanePerformer&quot;:&quot;#variable.user_dist_geral_bic#&quot;,&quot;getChoiceCurrentUser&quot;:&quot;&quot;,&quot;exclusion&quot;:&quot;&quot;,&quot;debugMode&quot;:&quot;&quot;}</pluginProperties>
               </packageParticipant>
            </entry>
            <entry>
               <string>DSTDistrates::dist_bic_1</string>
               <packageParticipant>
                  <processDefId>DSTDistrates</processDefId>
                  <participantId>dist_bic_1</participantId>
                  <type>plugin</type>
                  <value>org.joget.marketplace.EnhancedLoadBalancedParticipant</value>
                  <pluginProperties>{&quot;orgId&quot;:&quot;PL&quot;,&quot;deptId&quot;:&quot;PL_INT_DIST_BIC&quot;,&quot;deptIdDesc&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;getChoiceThisApp&quot;:&quot;&quot;,&quot;getChoiceDatabaseType&quot;:&quot;mySql&quot;,&quot;getChoiceDatabaseAddress&quot;:&quot;#envVariable.databaseAddress#&quot;,&quot;getChoiceDatabasePort&quot;:&quot;#envVariable.databasePort#&quot;,&quot;getChoiceDatabaseUser&quot;:&quot;#envVariable.databaseUser#&quot;,&quot;getChoiceDatabasePass&quot;:&quot;%%%%ietSbhVaVKdKw+QT+WBJwNYSCr2Qo/82+NulhjY5rCM477KBVVvUpA==%%%%&quot;,&quot;getChoiceAssignToLastPerformer&quot;:&quot;true&quot;,&quot;getChoiceLastLanePerformer&quot;:&quot;#variable.user_dist_bic1#&quot;,&quot;getChoiceCurrentUser&quot;:&quot;&quot;,&quot;exclusion&quot;:&quot;&quot;,&quot;debugMode&quot;:&quot;&quot;}</pluginProperties>
               </packageParticipant>
            </entry>
            <entry>
               <string>HIPProducao::processStartWhiteList</string>
               <packageParticipant>
                  <processDefId>HIPProducao</processDefId>
                  <participantId>processStartWhiteList</participantId>
                  <type>role</type>
                  <value>adminUser</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>REGdistribuicaoProcessos::processStartWhiteList</string>
               <packageParticipant>
                  <processDefId>REGdistribuicaoProcessos</processDefId>
                  <participantId>processStartWhiteList</participantId>
                  <type>role</type>
                  <value>loggedInUser</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>CHValidacaoNormal::processStartWhiteList</string>
               <packageParticipant>
                  <processDefId>CHValidacaoNormal</processDefId>
                  <participantId>processStartWhiteList</participantId>
                  <type>role</type>
                  <value>adminUser</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::contratacao_bst_com</string>
               <packageParticipant>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <participantId>contratacao_bst_com</participantId>
                  <type>plugin</type>
                  <value>org.joget.marketplace.EnhancedLoadBalancedParticipant</value>
                  <pluginProperties>{&quot;orgId&quot;:&quot;PL&quot;,&quot;deptId&quot;:&quot;PL_INT_CNT_BST_COM_CRH&quot;,&quot;deptIdDesc&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;getChoiceThisApp&quot;:&quot;&quot;,&quot;getChoiceDatabaseType&quot;:&quot;mySql&quot;,&quot;getChoiceDatabaseAddress&quot;:&quot;#envVariable.databaseAddress#&quot;,&quot;getChoiceDatabasePort&quot;:&quot;#envVariable.databasePort#&quot;,&quot;getChoiceDatabaseUser&quot;:&quot;#envVariable.databaseUser#&quot;,&quot;getChoiceDatabasePass&quot;:&quot;%%%%Bj5E99XTv0O8bSVIMwam9FHc5WurfJFHWCgPtPsEr8aEdO4Be9e9gw==%%%%&quot;,&quot;getChoiceAssignToLastPerformer&quot;:&quot;true&quot;,&quot;getChoiceLastLanePerformer&quot;:&quot;#variable.user_contratacao_bst_com#&quot;,&quot;getChoiceCurrentUser&quot;:&quot;&quot;,&quot;exclusion&quot;:&quot;&quot;,&quot;debugMode&quot;:&quot;true&quot;}</pluginProperties>
               </packageParticipant>
            </entry>
            <entry>
               <string>diligenciaAut::processStartWhiteList</string>
               <packageParticipant>
                  <processDefId>diligenciaAut</processDefId>
                  <participantId>processStartWhiteList</participantId>
                  <type>role</type>
                  <value>loggedInUser</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::contratacao_mtg2_com</string>
               <packageParticipant>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <participantId>contratacao_mtg2_com</participantId>
                  <type>plugin</type>
                  <value>org.joget.marketplace.EnhancedLoadBalancedParticipant</value>
                  <pluginProperties>{&quot;orgId&quot;:&quot;PL&quot;,&quot;deptId&quot;:&quot;PL_INT_CNT_MTG_COM_CRH&quot;,&quot;deptIdDesc&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;getChoiceThisApp&quot;:&quot;&quot;,&quot;getChoiceDatabaseType&quot;:&quot;mySql&quot;,&quot;getChoiceDatabaseAddress&quot;:&quot;#envVariable.databaseAddress#&quot;,&quot;getChoiceDatabasePort&quot;:&quot;#envVariable.databasePort#&quot;,&quot;getChoiceDatabaseUser&quot;:&quot;#envVariable.databaseUser#&quot;,&quot;getChoiceDatabasePass&quot;:&quot;%%%%ZIw1l/bdvIfSqq6KOxa5KzH44ep3pLxF/OlJQm9NrBpGEDo1IKvHvg==%%%%&quot;,&quot;getChoiceAssignToLastPerformer&quot;:&quot;true&quot;,&quot;getChoiceLastLanePerformer&quot;:&quot;#variable.user_contratacao_mtg2_com#&quot;,&quot;getChoiceCurrentUser&quot;:&quot;&quot;,&quot;exclusion&quot;:&quot;&quot;,&quot;debugMode&quot;:&quot;true&quot;}</pluginProperties>
               </packageParticipant>
            </entry>
            <entry>
               <string>DISTdistribuicaoProcessosBCP::processStartWhiteList</string>
               <packageParticipant>
                  <processDefId>DISTdistribuicaoProcessosBCP</processDefId>
                  <participantId>processStartWhiteList</participantId>
                  <type>role</type>
                  <value>loggedInUser</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>PCDProcuradoria::procu_procuradoria</string>
               <packageParticipant>
                  <processDefId>PCDProcuradoria</processDefId>
                  <participantId>procu_procuradoria</participantId>
                  <type>plugin</type>
                  <value>org.joget.marketplace.EnhancedLoadBalancedParticipant</value>
                  <pluginProperties>{&quot;orgId&quot;:&quot;PL&quot;,&quot;deptId&quot;:&quot;PL_SIS_PROCU&quot;,&quot;deptIdDesc&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;getChoiceThisApp&quot;:&quot;&quot;,&quot;getChoiceDatabaseType&quot;:&quot;mySql&quot;,&quot;getChoiceDatabaseAddress&quot;:&quot;#envVariable.databaseAddress#&quot;,&quot;getChoiceDatabasePort&quot;:&quot;#envVariable.databasePort#&quot;,&quot;getChoiceDatabaseUser&quot;:&quot;#envVariable.databaseUser#&quot;,&quot;getChoiceDatabasePass&quot;:&quot;%%%%BAO/8fRdgitYu3TN2q/DK7Ja5jvTawab9Fcp2A49mZ/ty0/jdYrSiQ==%%%%&quot;,&quot;getChoiceAssignToLastPerformer&quot;:&quot;true&quot;,&quot;getChoiceLastLanePerformer&quot;:&quot;#variable.user_procuradoria#&quot;,&quot;getChoiceCurrentUser&quot;:&quot;&quot;,&quot;exclusion&quot;:&quot;&quot;,&quot;debugMode&quot;:&quot;true&quot;}</pluginProperties>
               </packageParticipant>
            </entry>
            <entry>
               <string>CHModelo11::robot</string>
               <packageParticipant>
                  <processDefId>CHModelo11</processDefId>
                  <participantId>robot</participantId>
                  <type>department</type>
                  <value>PL_INT_MOD11_GEN_RPA_CRH</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>CHContratacaoNormal::contratacao_abn</string>
               <packageParticipant>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <participantId>contratacao_abn</participantId>
                  <type>plugin</type>
                  <value>org.joget.marketplace.EnhancedLoadBalancedParticipant</value>
                  <pluginProperties>{&quot;orgId&quot;:&quot;PL&quot;,&quot;deptId&quot;:&quot;PL_INT_CNT_ABN_NOR_CRH&quot;,&quot;deptIdDesc&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;getChoiceThisApp&quot;:&quot;&quot;,&quot;getChoiceDatabaseType&quot;:&quot;mySql&quot;,&quot;getChoiceDatabaseAddress&quot;:&quot;#envVariable.databaseAddress#&quot;,&quot;getChoiceDatabasePort&quot;:&quot;#envVariable.databasePort#&quot;,&quot;getChoiceDatabaseUser&quot;:&quot;#envVariable.databaseUser#&quot;,&quot;getChoiceDatabasePass&quot;:&quot;%%%%drhgcb9IAbedPiVk9BDkm8OrCebdi7HT1y94ojOcb44TPSJnPpSRUg==%%%%&quot;,&quot;getChoiceAssignToLastPerformer&quot;:&quot;true&quot;,&quot;getChoiceLastLanePerformer&quot;:&quot;#variable.user_contratacao_abn#&quot;,&quot;getChoiceCurrentUser&quot;:&quot;&quot;,&quot;exclusion&quot;:&quot;&quot;,&quot;debugMode&quot;:&quot;true&quot;}</pluginProperties>
               </packageParticipant>
            </entry>
            <entry>
               <string>CHArquivo::arquivo</string>
               <packageParticipant>
                  <processDefId>CHArquivo</processDefId>
                  <participantId>arquivo</participantId>
                  <type>plugin</type>
                  <value>org.joget.marketplace.EnhancedLoadBalancedParticipant</value>
                  <pluginProperties>{&quot;orgId&quot;:&quot;PL&quot;,&quot;deptId&quot;:&quot;PL_SIS_ARQ&quot;,&quot;deptIdDesc&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;getChoiceThisApp&quot;:&quot;&quot;,&quot;getChoiceDatabaseType&quot;:&quot;mySql&quot;,&quot;getChoiceDatabaseAddress&quot;:&quot;#envVariable.databaseAddress#&quot;,&quot;getChoiceDatabasePort&quot;:&quot;#envVariable.databasePort#&quot;,&quot;getChoiceDatabaseUser&quot;:&quot;#envVariable.databaseUser#&quot;,&quot;getChoiceDatabasePass&quot;:&quot;%%%%1lfqdxkcQPZSeZMTT9eoq0dqFpEGlXVJHJiv1R8q0B1EAvPSr0cuHw==%%%%&quot;,&quot;getChoiceAssignToLastPerformer&quot;:&quot;&quot;,&quot;getChoiceLastLanePerformer&quot;:&quot;#variable.user_arquivo#&quot;,&quot;getChoiceCurrentUser&quot;:&quot;&quot;,&quot;exclusion&quot;:&quot;&quot;,&quot;debugMode&quot;:&quot;true&quot;}</pluginProperties>
               </packageParticipant>
            </entry>
            <entry>
               <string>CHConclusoes::processStartWhiteList</string>
               <packageParticipant>
                  <processDefId>CHConclusoes</processDefId>
                  <participantId>processStartWhiteList</participantId>
                  <type>role</type>
                  <value>adminUser</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>DISTdistribuicaoProcessosMTG2::processStartWhiteList</string>
               <packageParticipant>
                  <processDefId>DISTdistribuicaoProcessosMTG2</processDefId>
                  <participantId>processStartWhiteList</participantId>
                  <type>role</type>
                  <value>loggedInUser</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>HIPContratacao::processStartWhiteList</string>
               <packageParticipant>
                  <processDefId>HIPContratacao</processDefId>
                  <participantId>processStartWhiteList</participantId>
                  <type>role</type>
                  <value>adminUser</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>HIPProducao::process29_producao</string>
               <packageParticipant>
                  <processDefId>HIPProducao</processDefId>
                  <participantId>process29_producao</participantId>
                  <type>workflowVariable</type>
                  <value>user_producao,user</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>processoTesteAssync::processStartWhiteList</string>
               <packageParticipant>
                  <processDefId>processoTesteAssync</processDefId>
                  <participantId>processStartWhiteList</participantId>
                  <type>role</type>
                  <value>loggedInUser</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>diligencias::remetente</string>
               <packageParticipant>
                  <processDefId>diligencias</processDefId>
                  <participantId>remetente</participantId>
                  <type>plugin</type>
                  <value>org.joget.marketplace.EnhancedLoadBalancedParticipant</value>
                  <pluginProperties>{&quot;orgId&quot;:&quot;PL&quot;,&quot;deptId&quot;:&quot;&quot;,&quot;deptIdDesc&quot;:&quot;#variable.equipa_remetente#&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;getChoiceThisApp&quot;:&quot;&quot;,&quot;getChoiceDatabaseType&quot;:&quot;mySql&quot;,&quot;getChoiceDatabaseAddress&quot;:&quot;#envVariable.databaseAddress#&quot;,&quot;getChoiceDatabasePort&quot;:&quot;#envVariable.databasePort#&quot;,&quot;getChoiceDatabaseUser&quot;:&quot;#envVariable.databaseUser#&quot;,&quot;getChoiceDatabasePass&quot;:&quot;%%%%02nLVdReyWa2cn2dB1QXtMyuzTv0jg1GAv5gI2ylqxcpcyLIHPQ1UQ==%%%%&quot;,&quot;getChoiceAssignToLastPerformer&quot;:&quot;true&quot;,&quot;getChoiceLastLanePerformer&quot;:&quot;#variable.gestor_remetente#&quot;,&quot;getChoiceCurrentUser&quot;:&quot;&quot;,&quot;exclusion&quot;:&quot;&quot;,&quot;debugMode&quot;:&quot;true&quot;}</pluginProperties>
               </packageParticipant>
            </entry>
            <entry>
               <string>HIPValidacao::processStartWhiteList</string>
               <packageParticipant>
                  <processDefId>HIPValidacao</processDefId>
                  <participantId>processStartWhiteList</participantId>
                  <type>role</type>
                  <value>adminUser</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>DISTdistribuicaoProcessosBCP2::processStartWhiteList</string>
               <packageParticipant>
                  <processDefId>DISTdistribuicaoProcessosBCP2</processDefId>
                  <participantId>processStartWhiteList</participantId>
                  <type>role</type>
                  <value>loggedInUser</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>CHContratacaoNormal::contratacao_nvb</string>
               <packageParticipant>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <participantId>contratacao_nvb</participantId>
                  <type>plugin</type>
                  <value>org.joget.marketplace.EnhancedLoadBalancedParticipant</value>
                  <pluginProperties>{&quot;orgId&quot;:&quot;PL&quot;,&quot;deptId&quot;:&quot;PL_INT_CNT_NVB_NOR_CRH&quot;,&quot;deptIdDesc&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;getChoiceThisApp&quot;:&quot;&quot;,&quot;getChoiceDatabaseType&quot;:&quot;mySql&quot;,&quot;getChoiceDatabaseAddress&quot;:&quot;#envVariable.databaseAddress#&quot;,&quot;getChoiceDatabasePort&quot;:&quot;#envVariable.databasePort#&quot;,&quot;getChoiceDatabaseUser&quot;:&quot;#envVariable.databaseUser#&quot;,&quot;getChoiceDatabasePass&quot;:&quot;%%%%3fP6G27tW4j8qkHaMzF0935BEvzicq/dhu+o2r9mXlT9S6j7c3s9Xg==%%%%&quot;,&quot;getChoiceAssignToLastPerformer&quot;:&quot;true&quot;,&quot;getChoiceLastLanePerformer&quot;:&quot;#variable.user_contratacao_nvb#&quot;,&quot;getChoiceCurrentUser&quot;:&quot;&quot;,&quot;exclusion&quot;:&quot;&quot;,&quot;debugMode&quot;:&quot;true&quot;}</pluginProperties>
               </packageParticipant>
            </entry>
            <entry>
               <string>CHProducaoNormal::ProdRobot</string>
               <packageParticipant>
                  <processDefId>CHProducaoNormal</processDefId>
                  <participantId>ProdRobot</participantId>
                  <type>department</type>
                  <value>PL_INT_PRD_GEN_RPA_CRH</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>CHRegistos::registos</string>
               <packageParticipant>
                  <processDefId>CHRegistos</processDefId>
                  <participantId>registos</participantId>
                  <type>plugin</type>
                  <value>org.joget.marketplace.EnhancedLoadBalancedParticipant</value>
                  <pluginProperties>{&quot;orgId&quot;:&quot;PL&quot;,&quot;deptId&quot;:&quot;PL_SIS_REG&quot;,&quot;deptIdDesc&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;getChoiceThisApp&quot;:&quot;&quot;,&quot;getChoiceDatabaseType&quot;:&quot;mySql&quot;,&quot;getChoiceDatabaseAddress&quot;:&quot;#envVariable.databaseAddress#&quot;,&quot;getChoiceDatabasePort&quot;:&quot;#envVariable.databasePort#&quot;,&quot;getChoiceDatabaseUser&quot;:&quot;#envVariable.databaseUser#&quot;,&quot;getChoiceDatabasePass&quot;:&quot;%%%%dL3RaLkPaaSjBqkSUhTSzLOiWJclIdtvSNjHwsx71iqeo6wMd98KIQ==%%%%&quot;,&quot;getChoiceAssignToLastPerformer&quot;:&quot;true&quot;,&quot;getChoiceLastLanePerformer&quot;:&quot;#variable.user_registos#&quot;,&quot;getChoiceCurrentUser&quot;:&quot;&quot;,&quot;exclusion&quot;:&quot;&quot;,&quot;debugMode&quot;:&quot;&quot;}</pluginProperties>
               </packageParticipant>
            </entry>
            <entry>
               <string>DISTdistribuicaoProcessosMTG::processStartWhiteList</string>
               <packageParticipant>
                  <processDefId>DISTdistribuicaoProcessosMTG</processDefId>
                  <participantId>processStartWhiteList</participantId>
                  <type>role</type>
                  <value>loggedInUser</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>CHConclusoes::conclusoes</string>
               <packageParticipant>
                  <processDefId>CHConclusoes</processDefId>
                  <participantId>conclusoes</participantId>
                  <type>plugin</type>
                  <value>org.joget.marketplace.EnhancedLoadBalancedParticipant</value>
                  <pluginProperties>{&quot;orgId&quot;:&quot;PL&quot;,&quot;deptId&quot;:&quot;PL_INT_CON&quot;,&quot;deptIdDesc&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;getChoiceThisApp&quot;:&quot;&quot;,&quot;getChoiceDatabaseType&quot;:&quot;mySql&quot;,&quot;getChoiceDatabaseAddress&quot;:&quot;#envVariable.databaseAddress#&quot;,&quot;getChoiceDatabasePort&quot;:&quot;#envVariable.databasePort#&quot;,&quot;getChoiceDatabaseUser&quot;:&quot;#envVariable.databaseUser#&quot;,&quot;getChoiceDatabasePass&quot;:&quot;%%%%dKnKTCdH9GkR2HCyYvHCsPFw3udihRv/2OURsBPURNDtXV2bV0WcNQ==%%%%&quot;,&quot;getChoiceAssignToLastPerformer&quot;:&quot;true&quot;,&quot;getChoiceLastLanePerformer&quot;:&quot;#variable.user_conclusoes#&quot;,&quot;getChoiceCurrentUser&quot;:&quot;&quot;,&quot;exclusion&quot;:&quot;&quot;,&quot;debugMode&quot;:&quot;true&quot;}</pluginProperties>
               </packageParticipant>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::processStartWhiteList</string>
               <packageParticipant>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <participantId>processStartWhiteList</participantId>
                  <type>role</type>
                  <value>adminUser</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::contratacao_bcp_com</string>
               <packageParticipant>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <participantId>contratacao_bcp_com</participantId>
                  <type>plugin</type>
                  <value>org.joget.marketplace.EnhancedLoadBalancedParticipant</value>
                  <pluginProperties>{&quot;orgId&quot;:&quot;PL&quot;,&quot;deptId&quot;:&quot;PL_INT_CNT_BCP_COM_CRH&quot;,&quot;deptIdDesc&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;getChoiceThisApp&quot;:&quot;&quot;,&quot;getChoiceDatabaseType&quot;:&quot;mySql&quot;,&quot;getChoiceDatabaseAddress&quot;:&quot;#envVariable.databaseAddress#&quot;,&quot;getChoiceDatabasePort&quot;:&quot;#envVariable.databasePort#&quot;,&quot;getChoiceDatabaseUser&quot;:&quot;#envVariable.databaseUser#&quot;,&quot;getChoiceDatabasePass&quot;:&quot;%%%%0upT2UV47Atz57Uj0TVpKiRolw9jbCEyVCEGI6B9lNa4KX/pkOARzA==%%%%&quot;,&quot;getChoiceAssignToLastPerformer&quot;:&quot;true&quot;,&quot;getChoiceLastLanePerformer&quot;:&quot;#variable.user_contratacao_bcp_com#&quot;,&quot;getChoiceCurrentUser&quot;:&quot;&quot;,&quot;exclusion&quot;:&quot;&quot;,&quot;debugMode&quot;:&quot;true&quot;}</pluginProperties>
               </packageParticipant>
            </entry>
            <entry>
               <string>hipotecas::processStartWhiteList</string>
               <packageParticipant>
                  <processDefId>hipotecas</processDefId>
                  <participantId>processStartWhiteList</participantId>
                  <type>role</type>
                  <value>adminUser</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>notificacoes::processStartWhiteList</string>
               <packageParticipant>
                  <processDefId>notificacoes</processDefId>
                  <participantId>processStartWhiteList</participantId>
                  <type>role</type>
                  <value>adminUser</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>CHContratacaoNormal::contratacao_bni</string>
               <packageParticipant>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <participantId>contratacao_bni</participantId>
                  <type>plugin</type>
                  <value>org.joget.marketplace.EnhancedLoadBalancedParticipant</value>
                  <pluginProperties>{&quot;orgId&quot;:&quot;PL&quot;,&quot;deptId&quot;:&quot;PL_INT_CNT_BNI_NOR_CRH&quot;,&quot;deptIdDesc&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;getChoiceThisApp&quot;:&quot;&quot;,&quot;getChoiceDatabaseType&quot;:&quot;mySql&quot;,&quot;getChoiceDatabaseAddress&quot;:&quot;#envVariable.databaseAddress#&quot;,&quot;getChoiceDatabasePort&quot;:&quot;#envVariable.databasePort#&quot;,&quot;getChoiceDatabaseUser&quot;:&quot;#envVariable.databaseUser#&quot;,&quot;getChoiceDatabasePass&quot;:&quot;%%%%p2COi7VSyIpfvF8pu/Pg/9kikR114Gm24blrdSD+2aOU2dz5ODJbGg==%%%%&quot;,&quot;getChoiceAssignToLastPerformer&quot;:&quot;true&quot;,&quot;getChoiceLastLanePerformer&quot;:&quot;#variable.user_contratacao_bni#&quot;,&quot;getChoiceCurrentUser&quot;:&quot;&quot;,&quot;exclusion&quot;:&quot;&quot;,&quot;debugMode&quot;:&quot;true&quot;}</pluginProperties>
               </packageParticipant>
            </entry>
            <entry>
               <string>diligenciaAut::participant50</string>
               <packageParticipant>
                  <processDefId>diligenciaAut</processDefId>
                  <participantId>participant50</participantId>
                  <type>user</type>
                  <value>a_aferreira</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>REGdistribuicaoProcessosDeposito::processStartWhiteList</string>
               <packageParticipant>
                  <processDefId>REGdistribuicaoProcessosDeposito</processDefId>
                  <participantId>processStartWhiteList</participantId>
                  <type>role</type>
                  <value>loggedInUser</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>CHModelo11::processStartWhiteList</string>
               <packageParticipant>
                  <processDefId>CHModelo11</processDefId>
                  <participantId>processStartWhiteList</participantId>
                  <type>role</type>
                  <value>adminUser</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>alertasValidacao::alertaStarter</string>
               <packageParticipant>
                  <processDefId>alertasValidacao</processDefId>
                  <participantId>alertaStarter</participantId>
                  <type>requester</type>
               </packageParticipant>
            </entry>
            <entry>
               <string>CHFiltroNormal::processStartWhiteList</string>
               <packageParticipant>
                  <processDefId>CHFiltroNormal</processDefId>
                  <participantId>processStartWhiteList</participantId>
                  <type>role</type>
                  <value>adminUser</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>diligencias::destinatario</string>
               <packageParticipant>
                  <processDefId>diligencias</processDefId>
                  <participantId>destinatario</participantId>
                  <type>plugin</type>
                  <value>org.joget.marketplace.EnhancedLoadBalancedParticipant</value>
                  <pluginProperties>{&quot;orgId&quot;:&quot;PL&quot;,&quot;deptId&quot;:&quot;&quot;,&quot;deptIdDesc&quot;:&quot;#variable.equipa_destinataria#&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;getChoiceThisApp&quot;:&quot;&quot;,&quot;getChoiceDatabaseType&quot;:&quot;mySql&quot;,&quot;getChoiceDatabaseAddress&quot;:&quot;#envVariable.databaseAddress#&quot;,&quot;getChoiceDatabasePort&quot;:&quot;#envVariable.databasePort#&quot;,&quot;getChoiceDatabaseUser&quot;:&quot;#envVariable.databaseUser#&quot;,&quot;getChoiceDatabasePass&quot;:&quot;%%%%pwzNjaKXFHBzMeBgsaGdD7m/8VyXoHEwai8IwFPbxQl5RYwLyEVNvQ==%%%%&quot;,&quot;getChoiceAssignToLastPerformer&quot;:&quot;true&quot;,&quot;getChoiceLastLanePerformer&quot;:&quot;#variable.gestor_destinatario#&quot;,&quot;getChoiceCurrentUser&quot;:&quot;&quot;,&quot;exclusion&quot;:&quot;&quot;,&quot;debugMode&quot;:&quot;true&quot;}</pluginProperties>
               </packageParticipant>
            </entry>
            <entry>
               <string>DISTdistribuicaoProcessosBIC2::processStartWhiteList</string>
               <packageParticipant>
                  <processDefId>DISTdistribuicaoProcessosBIC2</processDefId>
                  <participantId>processStartWhiteList</participantId>
                  <type>role</type>
                  <value>loggedInUser</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>CHValidacaoComplexo::processStartWhiteList</string>
               <packageParticipant>
                  <processDefId>CHValidacaoComplexo</processDefId>
                  <participantId>processStartWhiteList</participantId>
                  <type>role</type>
                  <value>adminUser</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>CHAcompanhamentoOutorgas::validadorFinal</string>
               <packageParticipant>
                  <processDefId>CHAcompanhamentoOutorgas</processDefId>
                  <participantId>validadorFinal</participantId>
                  <type>plugin</type>
                  <value>org.joget.apps.app.lib.BeanShellTool</value>
                  <pluginProperties>{&quot;script&quot;:&quot;import java.lang.Exception;\r\nimport java.util.ArrayList;\r\nimport java.util.Collection;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport javax.sql.DataSource;\r\nimport org.joget.workflow.model.WorkflowActivity;\r\nimport org.joget.workflow.model.service.*;\r\nimport org.joget.plugin.base.PluginManager;\r\nimport org.joget.commons.util.UuidGenerator;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.directory.model.User;\r\nimport org.joget.directory.model.service.ExtDirectoryManager;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport org.joget.workflow.model.WorkflowProcessResult;\r\nimport org.joget.workflow.model.service.WorkflowManager;\r\n \r\npublic Collection getValidadorFinal(WorkflowActivity activity) {\r\n    Collection participantes = new ArrayList();\r\n    ExtDirectoryManager directoryManager = (ExtDirectoryManager) pluginManager.getBean(\&quot;directoryManager\&quot;);\r\n    WorkflowManager wm = (WorkflowManager) AppUtil.getApplicationContext().getBean(\&quot;workflowManager\&quot;);\r\n    \r\n    String tipoEntidade = \&quot;#variable.tipo_entidade#\&quot;;\r\n    \r\n    \/\/if(tipoEntidade.contains(\&quot;semi-autonoma\&quot;)) {\r\n    if(tipoEntidade.contains(\&quot;SEMI\&quot;)) {\r\n        \/\/ ALTERAR -&gt; Alocar para a Entidade\r\n        \/*\r\n            participantes.add(\&quot;#variable.nome_entidade#\&quot;);\r\n        *\/\r\n        \r\n        \r\n        String deptId = \&quot;PL_SIS_AO\&quot;;\r\n        \r\n        \/\/Get users using directory manager\r\n        Collection userList = directoryManager.getUserByDepartmentId(deptId);\r\n        for(Object u : userList){\r\n            User user = (User) u;\r\n            participantes.add(user.getUsername());\r\n        }\r\n    }\r\n    \r\n    return participantes;\r\n}\r\n \r\n\/\/call getAssignees method with injected variable\r\nreturn getValidadorFinal(workflowActivity);&quot;}</pluginProperties>
               </packageParticipant>
            </entry>
            <entry>
               <string>CHModelo11::modelo11</string>
               <packageParticipant>
                  <processDefId>CHModelo11</processDefId>
                  <participantId>modelo11</participantId>
                  <type>plugin</type>
                  <value>org.joget.marketplace.EnhancedLoadBalancedParticipant</value>
                  <pluginProperties>{&quot;orgId&quot;:&quot;PL&quot;,&quot;deptId&quot;:&quot;PL_INT_MOD11&quot;,&quot;deptIdDesc&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;getChoiceThisApp&quot;:&quot;&quot;,&quot;getChoiceDatabaseType&quot;:&quot;mySql&quot;,&quot;getChoiceDatabaseAddress&quot;:&quot;#envVariable.databaseAddress#&quot;,&quot;getChoiceDatabasePort&quot;:&quot;#envVariable.databasePort#&quot;,&quot;getChoiceDatabaseUser&quot;:&quot;#envVariable.databaseUser#&quot;,&quot;getChoiceDatabasePass&quot;:&quot;%%%%DuUmw27nSdWod5b+2G79Ch6LuAwXmPri7D9Yd86nMU40YAzYtLdXJA==%%%%&quot;,&quot;getChoiceAssignToLastPerformer&quot;:&quot;true&quot;,&quot;getChoiceLastLanePerformer&quot;:&quot;#variable.user_modelo11#&quot;,&quot;getChoiceCurrentUser&quot;:&quot;&quot;,&quot;exclusion&quot;:&quot;&quot;,&quot;debugMode&quot;:&quot;&quot;}</pluginProperties>
               </packageParticipant>
            </entry>
            <entry>
               <string>processoTesteAssync::participant48</string>
               <packageParticipant>
                  <processDefId>processoTesteAssync</processDefId>
                  <participantId>participant48</participantId>
                  <type>user</type>
                  <value>a_aferreira</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>CHContratacaoNormal::processStartWhiteList</string>
               <packageParticipant>
                  <processDefId>CHContratacaoNormal</processDefId>
                  <participantId>processStartWhiteList</participantId>
                  <type>role</type>
                  <value>adminUser</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>CHAcompanhamentoOutorgas::AOGeral</string>
               <packageParticipant>
                  <processDefId>CHAcompanhamentoOutorgas</processDefId>
                  <participantId>AOGeral</participantId>
                  <type>plugin</type>
                  <value>org.joget.apps.app.lib.BeanShellTool</value>
                  <pluginProperties>{&quot;script&quot;:&quot;import java.lang.Exception;\r\nimport java.util.ArrayList;\r\nimport java.util.Collection;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport javax.sql.DataSource;\r\nimport org.joget.workflow.model.WorkflowActivity;\r\nimport org.joget.workflow.model.service.*;\r\nimport org.joget.plugin.base.PluginManager;\r\nimport org.joget.commons.util.UuidGenerator;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.directory.model.User;\r\nimport org.joget.directory.model.service.ExtDirectoryManager;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport org.joget.workflow.model.WorkflowProcessResult;\r\nimport org.joget.workflow.model.service.WorkflowManager;\r\n \r\npublic Collection setParticipantUserGeralAO(WorkflowActivity activity) {\r\n    Collection participantes = new ArrayList();\r\n    ExtDirectoryManager directoryManager = (ExtDirectoryManager) pluginManager.getBean(\&quot;directoryManager\&quot;);\r\n    \r\n    String deptId = \&quot;PL_SIS_AO\&quot;;\r\n        \r\n    \/\/Get users using directory manager\r\n    Collection userList = directoryManager.getUserByDepartmentId(deptId);\r\n    for(Object u : userList) {\r\n        User user = (User) u;\r\n        participantes.add(user.getUsername());\r\n    }\r\n    \r\n    return participantes;\r\n}\r\n \r\n\/\/call getAssignees method with injected variable\r\nreturn setParticipantUserGeralAO(workflowActivity);&quot;}</pluginProperties>
               </packageParticipant>
            </entry>
            <entry>
               <string>CreditoHabitacao::processStartWhiteList</string>
               <packageParticipant>
                  <processDefId>CreditoHabitacao</processDefId>
                  <participantId>processStartWhiteList</participantId>
                  <type>role</type>
                  <value>adminUser</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>CHFiltroNormal::filtro</string>
               <packageParticipant>
                  <processDefId>CHFiltroNormal</processDefId>
                  <participantId>filtro</participantId>
                  <type>plugin</type>
                  <value>org.joget.marketplace.EnhancedLoadBalancedParticipant</value>
                  <pluginProperties>{&quot;orgId&quot;:&quot;PL&quot;,&quot;deptId&quot;:&quot;PL_INT_FLT_GEN_NOR_CRH&quot;,&quot;deptIdDesc&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;getChoiceThisApp&quot;:&quot;&quot;,&quot;getChoiceDatabaseType&quot;:&quot;mySql&quot;,&quot;getChoiceDatabaseAddress&quot;:&quot;#envVariable.databaseAddress#&quot;,&quot;getChoiceDatabasePort&quot;:&quot;#envVariable.databasePort#&quot;,&quot;getChoiceDatabaseUser&quot;:&quot;#envVariable.databaseUser#&quot;,&quot;getChoiceDatabasePass&quot;:&quot;%%%%fpnnJk0S7Uy6rnr3pwpfe9BxEwMjWg0APrZfg+10PpWwGQ+2hLnCjA==%%%%&quot;,&quot;getChoiceAssignToLastPerformer&quot;:&quot;true&quot;,&quot;getChoiceLastLanePerformer&quot;:&quot;#variable.user_filtro#&quot;,&quot;getChoiceCurrentUser&quot;:&quot;&quot;,&quot;exclusion&quot;:&quot;&quot;,&quot;debugMode&quot;:&quot;true&quot;}</pluginProperties>
               </packageParticipant>
            </entry>
            <entry>
               <string>processoTesteAssync::participant2</string>
               <packageParticipant>
                  <processDefId>processoTesteAssync</processDefId>
                  <participantId>participant2</participantId>
                  <type>user</type>
                  <value>a_aferreira</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>CHRegistos::processStartWhiteList</string>
               <packageParticipant>
                  <processDefId>CHRegistos</processDefId>
                  <participantId>processStartWhiteList</participantId>
                  <type>role</type>
                  <value>adminUser</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>CHProducaoNormal::processStartWhiteList</string>
               <packageParticipant>
                  <processDefId>CHProducaoNormal</processDefId>
                  <participantId>processStartWhiteList</participantId>
                  <type>role</type>
                  <value>adminUser</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>CHRegistos::resgistos_qualidade</string>
               <packageParticipant>
                  <processDefId>CHRegistos</processDefId>
                  <participantId>resgistos_qualidade</participantId>
                  <type>plugin</type>
                  <value>org.joget.marketplace.EnhancedLoadBalancedParticipant</value>
                  <pluginProperties>{&quot;orgId&quot;:&quot;PL&quot;,&quot;deptId&quot;:&quot;PL_INT_REG_QUAL&quot;,&quot;deptIdDesc&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;getChoiceThisApp&quot;:&quot;&quot;,&quot;getChoiceDatabaseType&quot;:&quot;mySql&quot;,&quot;getChoiceDatabaseAddress&quot;:&quot;#envVariable.databaseAddress#&quot;,&quot;getChoiceDatabasePort&quot;:&quot;#envVariable.databasePort#&quot;,&quot;getChoiceDatabaseUser&quot;:&quot;#envVariable.databaseUser#&quot;,&quot;getChoiceDatabasePass&quot;:&quot;%%%%8Raw3DzhKEDVTHbfNK2vYwmaOT3CLOWlJrLFqjqEn1iFPLOaw2Vrgg==%%%%&quot;,&quot;getChoiceAssignToLastPerformer&quot;:&quot;true&quot;,&quot;getChoiceLastLanePerformer&quot;:&quot;#variable.user_registos#&quot;,&quot;getChoiceCurrentUser&quot;:&quot;&quot;,&quot;exclusion&quot;:&quot;&quot;,&quot;debugMode&quot;:&quot;&quot;}</pluginProperties>
               </packageParticipant>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::contratacao_bic_com</string>
               <packageParticipant>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <participantId>contratacao_bic_com</participantId>
                  <type>plugin</type>
                  <value>org.joget.marketplace.EnhancedLoadBalancedParticipant</value>
                  <pluginProperties>{&quot;orgId&quot;:&quot;PL&quot;,&quot;deptId&quot;:&quot;PL_INT_CNT_BIC_COM_CRH&quot;,&quot;deptIdDesc&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;getChoiceThisApp&quot;:&quot;&quot;,&quot;getChoiceDatabaseType&quot;:&quot;mySql&quot;,&quot;getChoiceDatabaseAddress&quot;:&quot;#envVariable.databaseAddress#&quot;,&quot;getChoiceDatabasePort&quot;:&quot;#envVariable.databasePort#&quot;,&quot;getChoiceDatabaseUser&quot;:&quot;#envVariable.databaseUser#&quot;,&quot;getChoiceDatabasePass&quot;:&quot;%%%%37wHAf4qOoQraTLFyLiSSuwoKB50NQgwO6gEWu+jreohp789Buzp7A==%%%%&quot;,&quot;getChoiceAssignToLastPerformer&quot;:&quot;true&quot;,&quot;getChoiceLastLanePerformer&quot;:&quot;#variable.user_contratacao_bic_com#&quot;,&quot;getChoiceCurrentUser&quot;:&quot;&quot;,&quot;exclusion&quot;:&quot;&quot;,&quot;debugMode&quot;:&quot;true&quot;}</pluginProperties>
               </packageParticipant>
            </entry>
            <entry>
               <string>CHFiltroComplexo::filtro_com</string>
               <packageParticipant>
                  <processDefId>CHFiltroComplexo</processDefId>
                  <participantId>filtro_com</participantId>
                  <type>plugin</type>
                  <value>org.joget.marketplace.EnhancedLoadBalancedParticipant</value>
                  <pluginProperties>{&quot;orgId&quot;:&quot;PL&quot;,&quot;deptId&quot;:&quot;PL_INT_FLT_GEN_COM_CRH&quot;,&quot;deptIdDesc&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;getChoiceThisApp&quot;:&quot;&quot;,&quot;getChoiceDatabaseType&quot;:&quot;mySql&quot;,&quot;getChoiceDatabaseAddress&quot;:&quot;#envVariable.databaseAddress#&quot;,&quot;getChoiceDatabasePort&quot;:&quot;#envVariable.databasePort#&quot;,&quot;getChoiceDatabaseUser&quot;:&quot;#envVariable.databaseUser#&quot;,&quot;getChoiceDatabasePass&quot;:&quot;%%%%ZMspBTtKYs1a7MrfoIw5CwkJ2b2mWtYk6I7ODiZihPm1i3LddR1CFA==%%%%&quot;,&quot;getChoiceAssignToLastPerformer&quot;:&quot;true&quot;,&quot;getChoiceLastLanePerformer&quot;:&quot;#variable.user_filtro_com#&quot;,&quot;getChoiceCurrentUser&quot;:&quot;&quot;,&quot;exclusion&quot;:&quot;&quot;,&quot;debugMode&quot;:&quot;true&quot;}</pluginProperties>
               </packageParticipant>
            </entry>
            <entry>
               <string>DSTDistrates::dist_abn_1</string>
               <packageParticipant>
                  <processDefId>DSTDistrates</processDefId>
                  <participantId>dist_abn_1</participantId>
                  <type>plugin</type>
                  <value>org.joget.marketplace.EnhancedLoadBalancedParticipant</value>
                  <pluginProperties>{&quot;orgId&quot;:&quot;PL&quot;,&quot;deptId&quot;:&quot;PL_INT_DIST_ABN&quot;,&quot;deptIdDesc&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;getChoiceThisApp&quot;:&quot;&quot;,&quot;getChoiceDatabaseType&quot;:&quot;mySql&quot;,&quot;getChoiceDatabaseAddress&quot;:&quot;#envVariable.databaseAddress#&quot;,&quot;getChoiceDatabasePort&quot;:&quot;#envVariable.databasePort#&quot;,&quot;getChoiceDatabaseUser&quot;:&quot;#envVariable.databaseUser#&quot;,&quot;getChoiceDatabasePass&quot;:&quot;%%%%DoohpwsG++tguV04kshk216fY3T6+gkVvpZfRGzywaW2T/Z/Y60CMQ==%%%%&quot;,&quot;getChoiceAssignToLastPerformer&quot;:&quot;true&quot;,&quot;getChoiceLastLanePerformer&quot;:&quot;#variable.user_dist_abn#&quot;,&quot;getChoiceCurrentUser&quot;:&quot;&quot;,&quot;exclusion&quot;:&quot;&quot;,&quot;debugMode&quot;:&quot;&quot;}</pluginProperties>
               </packageParticipant>
            </entry>
            <entry>
               <string>DSTDistrates::dist_abn_2</string>
               <packageParticipant>
                  <processDefId>DSTDistrates</processDefId>
                  <participantId>dist_abn_2</participantId>
                  <type>plugin</type>
                  <value>org.joget.marketplace.EnhancedLoadBalancedParticipant</value>
                  <pluginProperties>{&quot;orgId&quot;:&quot;PL&quot;,&quot;deptId&quot;:&quot;PL_SIS_DIST_ABN&quot;,&quot;deptIdDesc&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;getChoiceThisApp&quot;:&quot;&quot;,&quot;getChoiceDatabaseType&quot;:&quot;mySql&quot;,&quot;getChoiceDatabaseAddress&quot;:&quot;#envVariable.databaseAddress#&quot;,&quot;getChoiceDatabasePort&quot;:&quot;#envVariable.databasePort#&quot;,&quot;getChoiceDatabaseUser&quot;:&quot;#envVariable.databaseUser#&quot;,&quot;getChoiceDatabasePass&quot;:&quot;%%%%gCE1UGK1Sq/iHSM3JLAiT/fLNsPggCMam5l3xp7tZUyj50x2uQ8H/Q==%%%%&quot;,&quot;getChoiceAssignToLastPerformer&quot;:&quot;true&quot;,&quot;getChoiceLastLanePerformer&quot;:&quot;#variable.user_dist_geral_abn#&quot;,&quot;getChoiceCurrentUser&quot;:&quot;&quot;,&quot;exclusion&quot;:&quot;&quot;,&quot;debugMode&quot;:&quot;&quot;}</pluginProperties>
               </packageParticipant>
            </entry>
            <entry>
               <string>CHValidacaoNormal::validacao</string>
               <packageParticipant>
                  <processDefId>CHValidacaoNormal</processDefId>
                  <participantId>validacao</participantId>
                  <type>plugin</type>
                  <value>org.joget.marketplace.EnhancedLoadBalancedParticipant</value>
                  <pluginProperties>{&quot;orgId&quot;:&quot;PL&quot;,&quot;deptId&quot;:&quot;PL_INT_VAL_GEN_NOR_CRH&quot;,&quot;deptIdDesc&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;getChoiceThisApp&quot;:&quot;&quot;,&quot;getChoiceDatabaseType&quot;:&quot;mySql&quot;,&quot;getChoiceDatabaseAddress&quot;:&quot;#envVariable.databaseAddress#&quot;,&quot;getChoiceDatabasePort&quot;:&quot;#envVariable.databasePort#&quot;,&quot;getChoiceDatabaseUser&quot;:&quot;#envVariable.databaseUser#&quot;,&quot;getChoiceDatabasePass&quot;:&quot;%%%%NoNJe4/VRPpdBmX9aTE/S6TNFb2KSNXlHZN2D1a8F9mjRpuvR151rQ==%%%%&quot;,&quot;getChoiceAssignToLastPerformer&quot;:&quot;true&quot;,&quot;getChoiceLastLanePerformer&quot;:&quot;#variable.user_validacao#&quot;,&quot;getChoiceCurrentUser&quot;:&quot;&quot;,&quot;exclusion&quot;:&quot;&quot;,&quot;debugMode&quot;:&quot;true&quot;}</pluginProperties>
               </packageParticipant>
            </entry>
            <entry>
               <string>Procuradoria::processStartWhiteList</string>
               <packageParticipant>
                  <processDefId>Procuradoria</processDefId>
                  <participantId>processStartWhiteList</participantId>
                  <type>role</type>
                  <value>adminUser</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::contratacao_nvb_com</string>
               <packageParticipant>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <participantId>contratacao_nvb_com</participantId>
                  <type>plugin</type>
                  <value>org.joget.marketplace.EnhancedLoadBalancedParticipant</value>
                  <pluginProperties>{&quot;orgId&quot;:&quot;PL&quot;,&quot;deptId&quot;:&quot;PL_INT_CNT_NVB_COM_CRH&quot;,&quot;deptIdDesc&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;getChoiceThisApp&quot;:&quot;&quot;,&quot;getChoiceDatabaseType&quot;:&quot;mySql&quot;,&quot;getChoiceDatabaseAddress&quot;:&quot;#envVariable.databaseAddress#&quot;,&quot;getChoiceDatabasePort&quot;:&quot;#envVariable.databasePort#&quot;,&quot;getChoiceDatabaseUser&quot;:&quot;#envVariable.databaseUser#&quot;,&quot;getChoiceDatabasePass&quot;:&quot;%%%%gabx9AjFFEm308wHVmMA9E+uepi3NS9AsCSp/XU3q69Q2URUklJQig==%%%%&quot;,&quot;getChoiceAssignToLastPerformer&quot;:&quot;true&quot;,&quot;getChoiceLastLanePerformer&quot;:&quot;#variable.user_contratacao_nvb_com#&quot;,&quot;getChoiceCurrentUser&quot;:&quot;&quot;,&quot;exclusion&quot;:&quot;&quot;,&quot;debugMode&quot;:&quot;true&quot;}</pluginProperties>
               </packageParticipant>
            </entry>
            <entry>
               <string>CHContratacaoComplexo::contratacao_gen_com</string>
               <packageParticipant>
                  <processDefId>CHContratacaoComplexo</processDefId>
                  <participantId>contratacao_gen_com</participantId>
                  <type>plugin</type>
                  <value>org.joget.marketplace.EnhancedLoadBalancedParticipant</value>
                  <pluginProperties>{&quot;orgId&quot;:&quot;PL&quot;,&quot;deptId&quot;:&quot;PL_INT_DUM&quot;,&quot;deptIdDesc&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;getChoiceThisApp&quot;:&quot;&quot;,&quot;getChoiceDatabaseType&quot;:&quot;mySql&quot;,&quot;getChoiceDatabaseAddress&quot;:&quot;#envVariable.databaseAddress#&quot;,&quot;getChoiceDatabasePort&quot;:&quot;#envVariable.databasePort#&quot;,&quot;getChoiceDatabaseUser&quot;:&quot;#envVariable.databaseUser#&quot;,&quot;getChoiceDatabasePass&quot;:&quot;%%%%vZNwNkyBNzYJDXS5nXgiSi0V24JKvPSyPYt39EfUE8ZbEgQmtDgIIQ==%%%%&quot;,&quot;getChoiceAssignToLastPerformer&quot;:&quot;true&quot;,&quot;getChoiceLastLanePerformer&quot;:&quot;#variable.user_contratacao_gen#&quot;,&quot;getChoiceCurrentUser&quot;:&quot;&quot;,&quot;exclusion&quot;:&quot;&quot;,&quot;debugMode&quot;:&quot;true&quot;}</pluginProperties>
               </packageParticipant>
            </entry>
            <entry>
               <string>process16::processStartWhiteList</string>
               <packageParticipant>
                  <processDefId>process16</processDefId>
                  <participantId>processStartWhiteList</participantId>
                  <type>role</type>
                  <value>adminUser</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>DISTdistribuicaoProcessosBIC::processStartWhiteList</string>
               <packageParticipant>
                  <processDefId>DISTdistribuicaoProcessosBIC</processDefId>
                  <participantId>processStartWhiteList</participantId>
                  <type>role</type>
                  <value>loggedInUser</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>diligencias::processStartWhiteList</string>
               <packageParticipant>
                  <processDefId>diligencias</processDefId>
                  <participantId>processStartWhiteList</participantId>
                  <type>role</type>
                  <value>loggedInUser</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>distrates::processStartWhiteList</string>
               <packageParticipant>
                  <processDefId>distrates</processDefId>
                  <participantId>processStartWhiteList</participantId>
                  <type>role</type>
                  <value>adminUser</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>CHArquivo::processStartWhiteList</string>
               <packageParticipant>
                  <processDefId>CHArquivo</processDefId>
                  <participantId>processStartWhiteList</participantId>
                  <type>role</type>
                  <value>adminUser</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>CHProducaoComplexo::producao_com</string>
               <packageParticipant>
                  <processDefId>CHProducaoComplexo</processDefId>
                  <participantId>producao_com</participantId>
                  <type>plugin</type>
                  <value>org.joget.marketplace.EnhancedLoadBalancedParticipant</value>
                  <pluginProperties>{&quot;orgId&quot;:&quot;PL&quot;,&quot;deptId&quot;:&quot;PL_INT_PRD_GEN_COM_CRH&quot;,&quot;deptIdDesc&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;getChoiceThisApp&quot;:&quot;&quot;,&quot;getChoiceDatabaseType&quot;:&quot;mySql&quot;,&quot;getChoiceDatabaseAddress&quot;:&quot;#envVariable.databaseAddress#&quot;,&quot;getChoiceDatabasePort&quot;:&quot;#envVariable.databasePort#&quot;,&quot;getChoiceDatabaseUser&quot;:&quot;#envVariable.databaseUser#&quot;,&quot;getChoiceDatabasePass&quot;:&quot;%%%%vwhLqGlOd4AGdpe44fIsIW9prErI6CK4ZaY3Gi8xzt+w2lDLaZp8wA==%%%%&quot;,&quot;getChoiceAssignToLastPerformer&quot;:&quot;true&quot;,&quot;getChoiceLastLanePerformer&quot;:&quot;#variable.user_producao_com#&quot;,&quot;getChoiceCurrentUser&quot;:&quot;&quot;,&quot;exclusion&quot;:&quot;&quot;,&quot;debugMode&quot;:&quot;true&quot;}</pluginProperties>
               </packageParticipant>
            </entry>
            <entry>
               <string>CHProducaoNormal::producao</string>
               <packageParticipant>
                  <processDefId>CHProducaoNormal</processDefId>
                  <participantId>producao</participantId>
                  <type>plugin</type>
                  <value>org.joget.marketplace.EnhancedLoadBalancedParticipant</value>
                  <pluginProperties>{&quot;orgId&quot;:&quot;PL&quot;,&quot;deptId&quot;:&quot;PL_INT_PRD_GEN_NOR_CRH&quot;,&quot;deptIdDesc&quot;:&quot;&quot;,&quot;groupId&quot;:&quot;&quot;,&quot;getChoiceThisApp&quot;:&quot;&quot;,&quot;getChoiceDatabaseType&quot;:&quot;mySql&quot;,&quot;getChoiceDatabaseAddress&quot;:&quot;#envVariable.databaseAddress#&quot;,&quot;getChoiceDatabasePort&quot;:&quot;#envVariable.databasePort#&quot;,&quot;getChoiceDatabaseUser&quot;:&quot;#envVariable.databaseUser#&quot;,&quot;getChoiceDatabasePass&quot;:&quot;%%%%k6wXX+3da1J2jXDiRVy47KmkDg9U6TRtoj9DwANcfx/2KSHD+ImAxQ==%%%%&quot;,&quot;getChoiceAssignToLastPerformer&quot;:&quot;true&quot;,&quot;getChoiceLastLanePerformer&quot;:&quot;#variable.user_producao#&quot;,&quot;getChoiceCurrentUser&quot;:&quot;&quot;,&quot;exclusion&quot;:&quot;&quot;,&quot;debugMode&quot;:&quot;true&quot;}</pluginProperties>
               </packageParticipant>
            </entry>
         </packageParticipantMap>
      </packageDefinition>
   </packageDefinitionList>
   <formDefinitionList/>
   <userviewDefinitionList/>
   <datalistDefinitionList/>
   <builderDefinitionList/>
   <pluginDefaultPropertiesList/>
   <environmentVariableList/>
   <messageList>
      <message>
         <id> serveridwf_pt_PT</id>
         <appId>workflowPL</appId>
         <appVersion>4</appVersion>
         <messageKey> serveridwf</messageKey>
         <locale>pt_PT</locale>
         <message>192.168.0.104:8080</message>
      </message>
      <message>
         <id>emailmsg_pt_PT</id>
         <appId>workflowPL</appId>
         <appVersion>4</appVersion>
         <messageKey>emailmsg</messageKey>
         <locale>pt_PT</locale>
         <message>E-mail Inválido</message>
      </message>
      <message>
         <id>mandatorymsg_pt_PT</id>
         <appId>workflowPL</appId>
         <appVersion>4</appVersion>
         <messageKey>mandatorymsg</messageKey>
         <locale>pt_PT</locale>
         <message>Campo Obrigatório</message>
      </message>
      <message>
         <id>msg_enviar_pt_PT</id>
         <appId>workflowPL</appId>
         <appVersion>4</appVersion>
         <messageKey>msg_enviar</messageKey>
         <locale>pt_PT</locale>
         <message>ENVIAR</message>
      </message>
      <message>
         <id>msg_guardar_pt_PT</id>
         <appId>workflowPL</appId>
         <appVersion>4</appVersion>
         <messageKey>msg_guardar</messageKey>
         <locale>pt_PT</locale>
         <message>GUARDAR</message>
      </message>
      <message>
         <id>msg_realocar_pt_PT</id>
         <appId>workflowPL</appId>
         <appVersion>4</appVersion>
         <messageKey>msg_realocar</messageKey>
         <locale>pt_PT</locale>
         <message>REALOCAR</message>
      </message>
   </messageList>
   <resourceList>
      <appResource>
         <id>abanca_cores_lateral.png</id>
         <appId>workflowPL</appId>
         <appVersion>4</appVersion>
         <filesize>22678</filesize>
         <permissionClass>org.joget.apps.userview.lib.LoggedInUserPermission</permissionClass>
         <permissionProperties>{&quot;permission&quot;: { &quot;className&quot;: &quot;org.joget.apps.userview.lib.LoggedInUserPermission&quot;, &quot;properties&quot;: {}}}</permissionProperties>
      </appResource>
      <appResource>
         <id>bcp_cores_lateral.png</id>
         <appId>workflowPL</appId>
         <appVersion>4</appVersion>
         <filesize>29492</filesize>
         <permissionClass>org.joget.apps.userview.lib.LoggedInUserPermission</permissionClass>
         <permissionProperties>{&quot;permission&quot;: { &quot;className&quot;: &quot;org.joget.apps.userview.lib.LoggedInUserPermission&quot;, &quot;properties&quot;: {}}}</permissionProperties>
      </appResource>
      <appResource>
         <id>bctt_cores_lateral.png</id>
         <appId>workflowPL</appId>
         <appVersion>4</appVersion>
         <filesize>13252</filesize>
         <permissionClass>org.joget.apps.userview.lib.LoggedInUserPermission</permissionClass>
         <permissionProperties>{&quot;permission&quot;: { &quot;className&quot;: &quot;org.joget.apps.userview.lib.LoggedInUserPermission&quot;, &quot;properties&quot;: {}}}</permissionProperties>
      </appResource>
      <appResource>
         <id>bni_cores_lateral.jpg</id>
         <appId>workflowPL</appId>
         <appVersion>4</appVersion>
         <filesize>16037</filesize>
         <permissionClass>org.joget.apps.userview.lib.LoggedInUserPermission</permissionClass>
         <permissionProperties>{&quot;permission&quot;: { &quot;className&quot;: &quot;org.joget.apps.userview.lib.LoggedInUserPermission&quot;, &quot;properties&quot;: {}}}</permissionProperties>
      </appResource>
      <appResource>
         <id>bst_cores_lateral.jpg</id>
         <appId>workflowPL</appId>
         <appVersion>4</appVersion>
         <filesize>11911</filesize>
         <permissionClass>org.joget.apps.userview.lib.LoggedInUserPermission</permissionClass>
         <permissionProperties>{&quot;permission&quot;: { &quot;className&quot;: &quot;org.joget.apps.userview.lib.LoggedInUserPermission&quot;, &quot;properties&quot;: {}}}</permissionProperties>
      </appResource>
      <appResource>
         <id>elemento_grafico_icone.png</id>
         <appId>workflowPL</appId>
         <appVersion>4</appVersion>
         <filesize>14102</filesize>
         <permissionProperties>{&quot;hashvariable&quot;:&quot;#appResource.elemento_grafico_icone.png#&quot;,&quot;permission&quot;:{&quot;className&quot;:&quot;&quot;,&quot;properties&quot;:{}}}</permissionProperties>
      </appResource>
      <appResource>
         <id>eurobic_cores_lateral.png</id>
         <appId>workflowPL</appId>
         <appVersion>4</appVersion>
         <filesize>12762</filesize>
         <permissionClass>org.joget.apps.userview.lib.LoggedInUserPermission</permissionClass>
         <permissionProperties>{&quot;permission&quot;: { &quot;className&quot;: &quot;org.joget.apps.userview.lib.LoggedInUserPermission&quot;, &quot;properties&quot;: {}}}</permissionProperties>
      </appResource>
      <appResource>
         <id>logo_navbar.png</id>
         <appId>workflowPL</appId>
         <appVersion>4</appVersion>
         <filesize>84605</filesize>
         <permissionProperties>{&quot;hashvariable&quot;:&quot;#appResource.logo_navbar.png#&quot;,&quot;permission&quot;:{&quot;className&quot;:&quot;&quot;,&quot;properties&quot;:{}}}</permissionProperties>
      </appResource>
      <appResource>
         <id>Millennium.jpg</id>
         <appId>workflowPL</appId>
         <appVersion>4</appVersion>
         <filesize>5742</filesize>
         <permissionProperties>{&quot;hashvariable&quot;:&quot;#appResource.Millennium.jpg#&quot;,&quot;permission&quot;:{&quot;className&quot;:&quot;&quot;,&quot;properties&quot;:{}}}</permissionProperties>
      </appResource>
      <appResource>
         <id>MillenniumFooter.jpg</id>
         <appId>workflowPL</appId>
         <appVersion>4</appVersion>
         <filesize>5903</filesize>
         <permissionProperties>{&quot;hashvariable&quot;:&quot;#appResource.MillenniumFooter.jpg#&quot;,&quot;permission&quot;:{&quot;className&quot;:&quot;&quot;,&quot;properties&quot;:{}}}</permissionProperties>
      </appResource>
      <appResource>
         <id>mtg_cores_lateral.jpg</id>
         <appId>workflowPL</appId>
         <appVersion>4</appVersion>
         <filesize>34000</filesize>
         <permissionClass>org.joget.apps.userview.lib.LoggedInUserPermission</permissionClass>
         <permissionProperties>{&quot;permission&quot;: { &quot;className&quot;: &quot;org.joget.apps.userview.lib.LoggedInUserPermission&quot;, &quot;properties&quot;: {}}}</permissionProperties>
      </appResource>
      <appResource>
         <id>nb_cores_lateral.png</id>
         <appId>workflowPL</appId>
         <appVersion>4</appVersion>
         <filesize>19069</filesize>
         <permissionClass>org.joget.apps.userview.lib.LoggedInUserPermission</permissionClass>
         <permissionProperties>{&quot;permission&quot;: { &quot;className&quot;: &quot;org.joget.apps.userview.lib.LoggedInUserPermission&quot;, &quot;properties&quot;: {}}}</permissionProperties>
      </appResource>
      <appResource>
         <id>olimpo.png</id>
         <appId>workflowPL</appId>
         <appVersion>4</appVersion>
         <filesize>76475</filesize>
         <permissionProperties>{&quot;permission&quot;: { &quot;className&quot;: &quot;&quot;, &quot;properties&quot;: {}}}</permissionProperties>
      </appResource>
      <appResource>
         <id>PL_favicon.png</id>
         <appId>workflowPL</appId>
         <appVersion>4</appVersion>
         <filesize>6039</filesize>
         <permissionProperties>{&quot;hashvariable&quot;:&quot;#appResource.PL_favicon.png#&quot;,&quot;permission&quot;:{&quot;className&quot;:&quot;&quot;,&quot;properties&quot;:{}}}</permissionProperties>
      </appResource>
      <appResource>
         <id>PL_Full_Symbol_on_Green_Background-removeb.png</id>
         <appId>workflowPL</appId>
         <appVersion>4</appVersion>
         <filesize>39906</filesize>
         <permissionProperties>{&quot;hashvariable&quot;:&quot;#appResource.PL_Full_Symbol_on_Green_Background-removeb.png#&quot;,&quot;permission&quot;:{&quot;className&quot;:&quot;&quot;,&quot;properties&quot;:{}}}</permissionProperties>
      </appResource>
      <appResource>
         <id>PL_Full_Symbol_on_Green_Background.png</id>
         <appId>workflowPL</appId>
         <appVersion>4</appVersion>
         <filesize>17660</filesize>
         <permissionProperties>{&quot;hashvariable&quot;:&quot;#appResource.PL_Full_Symbol_on_Green_Background.png#&quot;,&quot;permission&quot;:{&quot;className&quot;:&quot;&quot;,&quot;properties&quot;:{}}}</permissionProperties>
      </appResource>
      <appResource>
         <id>PL_logo.png</id>
         <appId>workflowPL</appId>
         <appVersion>4</appVersion>
         <filesize>26552</filesize>
         <permissionProperties>{&quot;hashvariable&quot;:&quot;#appResource.PL_logo.png#&quot;,&quot;permission&quot;:{&quot;className&quot;:&quot;&quot;,&quot;properties&quot;:{}}}</permissionProperties>
      </appResource>
      <appResource>
         <id>PL_Symbol_on_Green_Background.png</id>
         <appId>workflowPL</appId>
         <appVersion>4</appVersion>
         <filesize>10679</filesize>
         <permissionProperties>{&quot;hashvariable&quot;:&quot;#appResource.PL_Symbol_on_Green_Background.png#&quot;,&quot;permission&quot;:{&quot;className&quot;:&quot;&quot;,&quot;properties&quot;:{}}}</permissionProperties>
      </appResource>
      <appResource>
         <id>TE_BCP_ADJ_Dist_img1.jpg</id>
         <appId>workflowPL</appId>
         <appVersion>4</appVersion>
         <filesize>16315</filesize>
         <permissionClass>org.joget.apps.userview.lib.LoggedInUserPermission</permissionClass>
         <permissionProperties>{&quot;permission&quot;: { &quot;className&quot;: &quot;org.joget.apps.userview.lib.LoggedInUserPermission&quot;, &quot;properties&quot;: {}}}</permissionProperties>
      </appResource>
   </resourceList>
   <license>Sz7mdStux960CvUVkRnWtmo7jYQ9hWWCLgYsulcaG+KNgdsYv/sWpjKlC2kFjiG5</license>
</appDefinition>