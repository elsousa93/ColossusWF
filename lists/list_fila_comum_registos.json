{
    "actions": [{
        "className": "org.joget.plugin.enterprise.BeanShellDatalistAction",
        "icon": "<i class=\"fas fa-code\"><\/i>",
        "id": "action_0",
        "label": "Bean Shell",
        "name": "Bean Shell Datalist Action",
        "properties": {
            "confirmation": "Processo atribuido",
            "datalist_type": "action",
            "label": "Atribuir Processo",
            "script": "\r\nimport org.joget.workflow.model.service.WorkflowManager;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport org.joget.workflow.model.service.WorkflowUserManager;\r\nimport org.joget.apps.app.model.AppDefinition;\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.datalist.model.DataListBinderDefaultimport;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport javax.sql.DataSource;\r\n\r\nString idProcesso=\"\";\r\nString aid = \"\";\r\nString resourceId = \"\";\r\n\r\n    Connection con = null;\r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\n    \r\n    PreparedStatement stmt_1 = null;\r\n    ResultSet rs_1 = null;\r\n    \r\n    try{\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\"setupDataSource\");\r\n        con = ds.getConnection();\r\n        \r\n        if(!con.isClosed()){\r\n            String queryGetAid = \"SELECT p.id as 'IDProcesso' FROM shkprocesses sp LEFT JOIN shkprocesses sp2 on sp.ActivityRequesterProcessId = sp2.Id LEFT JOIN app_fd_processos p on sp.ActivityRequesterProcessId = p.id LEFT JOIN shkprocessstates sps ON sps.oid = sp.State LEFT JOIN SHKActivities sact ON sact.ProcessId = sp.Id LEFT JOIN SHKActivityStates ssta ON ssta.oid = sact.State LEFT JOIN (select ActivityId, group_concat(ResourceId separator '; ') as ResourceId from SHKAssignmentsTable group by ActivityId) sass on sact.Id = sass.ActivityId WHERE sps.KeyValue LIKE 'open.running' AND p.id is not null AND (ssta.oid = '1000001' OR ssta.oid = '1000003' OR ssta.oid = '1000005') AND sp.id like '%REGRegistos%' AND sass.ResourceId LIKE '%registos_geral%'\";\r\n\t\t\tstmt = con.prepareStatement(queryGetAid);\r\n\t\t\trs = stmt.executeQuery();\r\n\t\t\t\r\n\t\t\tif(rs.next()){\r\n\t\t\t\tidProcesso = rs.getObject(\"IDProcesso\");\r\n\t\t\t}\r\n            \r\n            if(idProcesso != null){\r\n                String queryGetAid_1 = \"SELECT a.id as 'Aid', sass.ResourceId as 'ResourceId' FROM shkprocesses p LEFT JOIN shkactivities a ON p.id = ProcessId LEFT JOIN shkprocessstates ps ON ps.oid = p.State LEFT JOIN SHKActivityStates acs ON acs.oid = a.State LEFT JOIN shkassignmentstable sass ON sass.ActivityId = a.id WHERE p.ActivityRequesterProcessId = ? AND ps.KeyValue LIKE 'open.running' AND (acs.KeyValue LIKE 'open.not_running.not_started' OR acs.KeyValue LIKE 'open.running')\";\r\n                stmt_1 = con.prepareStatement(queryGetAid_1);\r\n                stmt_1.setObject(1, idProcesso);\r\n                rs_1 = stmt_1.executeQuery();\r\n            \r\n                if(rs_1.next()){\r\n                    aid = rs_1.getObject(\"Aid\");\r\n                    resourceId = rs_1.getObject(\"ResourceId\");\r\n                    \r\n                    WorkflowManager wm = (WorkflowManager) AppUtil.getApplicationContext().getBean(\"workflowManager\");\r\n                    WorkflowUserManager wum = (WorkflowUserManager) AppUtil.getApplicationContext().getBean(\"workflowUserManager\");\r\n                    \r\n                    //get the values from the \r\n                    String replaceUser = resourceId;\r\n                    String username = \"#currentUser.username#\";\r\n                \r\n                \r\n                    //getCurrentThreadUser() Method used by system to get current thread user\r\n                    String currentUser = wum.getCurrentThreadUser();\r\n                    wum.setCurrentThreadUser(replaceUser);\r\n                    wum.setCurrentThreadUser(currentUser);\r\n                    \r\n                    //Reassigns the assignment from a user (replaceUser) to another user (username)\r\n                    wm.assignmentReassign(\"\", \"\", aid, username, replaceUser);\r\n                    \r\n                }\r\n            }\r\n            \r\n        }\r\n            \r\n    }catch(Exception e){\r\n            LogUtil.error(appDef.toString(), e, \"Error getting info from DB\");\r\n    }finally{\r\n        try{\r\n            if(rs != null){\r\n            rs.close();\r\n            }\r\n            if(stmt != null){\r\n                stmt.close();\r\n            }\r\n            if(con != null && !con.isClosed()) {\r\n                con.close();\r\n            }\r\n        }catch(Exception e){\r\n            LogUtil.error(appDef.toString(), e, \"Error closing DB connection\");\r\n        }\r\n        \r\n    }"
        },
        "type": "text"
    }],
    "binder": {
        "className": "org.joget.plugin.enterprise.JdbcDataListBinder",
        "properties": {
            "jdbcDatasource": "default",
            "optimisePaging": "",
            "primaryKey": "idReg",
            "sql": "SELECT p.id as idReg, dp.c_n_wf_banco as N_WF, dp.c_n_wf_pl as N_WF_PL, dp.c_nome_cliente as NomeCliente, dp.c_tipo_processo as TipoProcesso, sp.Id AS processId, sp.Name AS processName, sact.Id AS instanceId, sact.Name AS activityName, sass.ResourceId AS assignee, p.dateCreated\nFROM shkprocesses sp\nLEFT JOIN shkprocesses sp2 on sp.ActivityRequesterProcessId = sp2.Id\nLEFT JOIN app_fd_processos p on sp.ActivityRequesterProcessId = p.id\nLEFT JOIN app_fd_detalhe_processo dp ON dp.id = p.c_detalhe_processo\nLEFT JOIN shkprocessstates sps ON sps.oid = sp.State\nLEFT JOIN SHKActivities sact ON sact.ProcessId = sp.Id\nLEFT JOIN SHKActivityStates ssta ON ssta.oid = sact.State\nLEFT JOIN (select ActivityId, group_concat(ResourceId separator '; ') as ResourceId from SHKAssignmentsTable group by ActivityId) sass on sact.Id = sass.ActivityId\nWHERE sps.KeyValue LIKE 'open.running'\nAND p.id is not null\nAND (ssta.oid = '1000001' OR ssta.oid = '1000003' OR ssta.oid = '1000005')\nAND sp.id like '%REGRegistos%'\nAND sass.ResourceId LIKE \"%registos_geral%\"\n"
        }
    },
    "buttonPosition": "bottomLeft",
    "checkboxPosition": "left",
    "columns": [
        {
            "action": {
                "className": "",
                "properties": {}
            },
            "alignment": "",
            "datalist_type": "column",
            "exclude_export": "",
            "filterable": true,
            "format": {
                "className": "",
                "properties": {}
            },
            "headerAlignment": "",
            "hidden": "false",
            "id": "column_0",
            "label": "Nº Workflow Banco",
            "name": "N_WF",
            "sortable": "false",
            "style": "",
            "width": ""
        },
        {
            "action": {
                "className": "",
                "properties": {}
            },
            "alignment": "",
            "datalist_type": "column",
            "exclude_export": "",
            "filterable": true,
            "format": {
                "className": "",
                "properties": {}
            },
            "headerAlignment": "",
            "hidden": "false",
            "id": "column_1",
            "label": "Nº Workflow PL",
            "name": "N_WF_PL",
            "sortable": "false",
            "style": "",
            "width": ""
        },
        {
            "action": {
                "className": "",
                "properties": {}
            },
            "alignment": "",
            "datalist_type": "column",
            "exclude_export": "",
            "filterable": true,
            "format": {
                "className": "",
                "properties": {}
            },
            "headerAlignment": "",
            "hidden": "false",
            "id": "column_2",
            "label": "Cliente",
            "name": "NomeCliente",
            "sortable": "false",
            "style": "",
            "width": ""
        },
        {
            "action": {
                "className": "",
                "properties": {}
            },
            "alignment": "",
            "datalist_type": "column",
            "exclude_export": "",
            "filterable": true,
            "format": {
                "className": "",
                "properties": {}
            },
            "headerAlignment": "",
            "hidden": "false",
            "id": "column_3",
            "label": "Tipo Processo",
            "name": "TipoProcesso",
            "sortable": "false",
            "style": "",
            "width": ""
        },
        {
            "action": {
                "className": "",
                "properties": {}
            },
            "alignment": "",
            "datalist_type": "column",
            "exclude_export": "",
            "filterable": true,
            "format": {
                "className": "",
                "properties": {}
            },
            "headerAlignment": "",
            "hidden": "false",
            "id": "column_4",
            "label": "Atividade",
            "name": "activityName",
            "sortable": "false",
            "style": "",
            "width": ""
        },
        {
            "action": {
                "className": "",
                "properties": {}
            },
            "alignment": "",
            "datalist_type": "column",
            "exclude_export": "",
            "filterable": true,
            "format": {
                "className": "",
                "properties": {}
            },
            "headerAlignment": "",
            "hidden": "false",
            "id": "column_5",
            "label": "Data de Criação",
            "name": "dateCreated",
            "sortable": "false",
            "style": "",
            "width": ""
        }
    ],
    "considerFilterWhenGetTotal": "",
    "description": "",
    "disableResponsive": "",
    "filters": [],
    "hidePageSize": "",
    "id": "list_fila_comum_registos",
    "name": "Registos - Fila Comum",
    "order": "",
    "orderBy": "",
    "pageSize": "0",
    "pageSizeSelectorOptions": "10,20,30,40,50,100",
    "responsiveView": [
        {
            "breakpoint": "",
            "columns": "",
            "view": "Mobile"
        },
        {
            "breakpoint": "",
            "columns": "",
            "view": "Tablet"
        }
    ],
    "rowActions": [],
    "searchPopup": "",
    "showDataWhenFilterSet": "",
    "showPageSizeSelector": "true",
    "useSession": ""
}