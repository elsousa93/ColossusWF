{
    "actions": [],
    "binder": {
        "className": "org.joget.plugin.enterprise.JdbcDataListBinder",
        "properties": {
            "jdbcDatasource": "default",
            "optimisePaging": "",
            "primaryKey": "procId",
            "sql": "SELECT p.id as procId, dp.c_n_wf_banco as N_WF, dp.c_n_wf_pl as N_WF_PL, dp.c_urgencia_registo AS Urgencia,dp.c_categoria_processo as CategoriaProcesso, ip.c_nome as NomeCliente, dp.c_tipo_processo as TipoProcesso, sp.Id AS processId, sp.Name AS processName, sact.Id AS instanceId, sact.Name AS activityName, sass.ResourceId AS assignee, p.dateCreated, dp.c_tipo_entidade as Entidade, dp.c_estado_agendamento as EstadoAgendamento, ag.c_data_agendamento AS DataAgendamento, ROW_NUMBER() OVER (ORDER BY ag.c_data_agendamento ASC, dp.c_urgencia_registo DESC) AS No\nFROM shkprocesses sp\nLEFT JOIN shkprocesses sp2 on sp.ActivityRequesterProcessId = sp2.Id\nLEFT JOIN app_fd_processos p on sp.ActivityRequesterProcessId = p.id\nLEFT JOIN app_fd_detalhe_processo dp ON dp.id = p.c_detalhe_processo\nLEFT JOIN shkprocessstates sps ON sps.oid = sp.State\nLEFT JOIN SHKActivities sact ON sact.ProcessId = sp.Id\nLEFT JOIN SHKActivityStates ssta ON ssta.oid = sact.State\nLEFT JOIN (select ActivityId, group_concat(ResourceId separator '; ') as ResourceId from SHKAssignmentsTable group by ActivityId) sass on sact.Id = sass.ActivityId\nLEFT JOIN app_fd_intervenientes_proc ip ON ip.c_id_processo = p.id\n\tAND ip.c_cliente_principal LIKE (SELECT i.c_cliente_principal \n                                    FROM app_fd_intervenientes_proc i \n                                    WHERE i.c_id_processo = p.id\n                                    AND i.c_cliente_principal = 'CHECK')\nLEFT JOIN app_fd_agendamento ag ON  ag.id = p.c_agendamento\nWHERE sps.KeyValue LIKE 'open.running'\nAND p.id is not null\nAND (ssta.oid = '1000001' OR ssta.oid = '1000003' OR ssta.oid = '1000005')\nAND sact.Id like '%validacaoEntidadesAutonomas%'\nAND sass.ResourceId LIKE \"%registos_geral%\""
        }
    },
    "buttonPosition": "bottomLeft",
    "checkboxPosition": "left",
    "columns": [
        {
            "action": {
                "className": "",
                "properties": {}
            },
            "alignment": "",
            "datalist_type": "column",
            "exclude_export": "",
            "filterable": true,
            "format": {
                "className": "",
                "properties": {}
            },
            "headerAlignment": "",
            "hidden": "false",
            "id": "column_8",
            "label": "Data Agendamento",
            "name": "DataAgendamento",
            "permission_rules": {"5e537661-bb86-1b93-2668-597b70ee8074": {}},
            "sortable": "true",
            "style": "",
            "width": ""
        },
        {
            "action": {
                "className": "",
                "properties": {}
            },
            "alignment": "",
            "datalist_type": "column",
            "exclude_export": "",
            "filterable": true,
            "format": {
                "className": "",
                "properties": {}
            },
            "headerAlignment": "",
            "hidden": "false",
            "id": "column_0",
            "label": "Nº Workflow Banco",
            "name": "N_WF",
            "permission_rules": {"5e537661-bb86-1b93-2668-597b70ee8074": {}},
            "sortable": "false",
            "style": "",
            "width": ""
        },
        {
            "action": {
                "className": "",
                "properties": {}
            },
            "alignment": "",
            "datalist_type": "column",
            "exclude_export": "",
            "filterable": true,
            "format": {
                "className": "",
                "properties": {}
            },
            "headerAlignment": "",
            "hidden": "false",
            "id": "column_1",
            "label": "Nº Workflow PL",
            "name": "N_WF_PL",
            "permission_rules": {"5e537661-bb86-1b93-2668-597b70ee8074": {}},
            "sortable": "false",
            "style": "",
            "width": ""
        },
        {
            "action": {
                "className": "",
                "properties": {}
            },
            "alignment": "",
            "datalist_type": "column",
            "exclude_export": "",
            "filterable": true,
            "format": {
                "className": "",
                "properties": {}
            },
            "headerAlignment": "",
            "hidden": "false",
            "id": "column_2",
            "label": "Cliente",
            "name": "NomeCliente",
            "permission_rules": {"5e537661-bb86-1b93-2668-597b70ee8074": {}},
            "sortable": "false",
            "style": "",
            "width": ""
        },
        {
            "action": {
                "className": "",
                "properties": {}
            },
            "alignment": "",
            "datalist_type": "column",
            "exclude_export": "",
            "filterable": true,
            "format": {
                "className": "org.joget.plugin.enterprise.OptionsValueFormatter",
                "properties": {
                    "options": [],
                    "optionsBinder": {
                        "className": "org.joget.apps.form.lib.FormOptionsBinder",
                        "properties": {
                            "addEmptyOption": "",
                            "cacheInterval": "",
                            "emptyLabel": "",
                            "extraCondition": "c_nome_campo = 'tipo_entidade'",
                            "formDefId": "adicionarOpcaoLV",
                            "groupingColumn": "",
                            "idColumn": "value",
                            "labelColumn": "label",
                            "useAjax": ""
                        }
                    }
                }
            },
            "headerAlignment": "",
            "hidden": "false",
            "id": "column_7",
            "label": "Entidade",
            "name": "Entidade",
            "permission_rules": {"5e537661-bb86-1b93-2668-597b70ee8074": {}},
            "sortable": "false",
            "style": "",
            "width": ""
        },
        {
            "action": {
                "className": "",
                "properties": {}
            },
            "alignment": "",
            "datalist_type": "column",
            "exclude_export": "",
            "filterable": true,
            "format": {
                "className": "",
                "properties": {}
            },
            "headerAlignment": "",
            "hidden": "false",
            "id": "column_3",
            "label": "Tipo Processo",
            "name": "TipoProcesso",
            "permission_rules": {"5e537661-bb86-1b93-2668-597b70ee8074": {}},
            "sortable": "false",
            "style": "",
            "width": ""
        },
        {
            "action": {
                "className": "",
                "properties": {}
            },
            "alignment": "",
            "datalist_type": "column",
            "exclude_export": "",
            "filterable": true,
            "format": {
                "className": "org.joget.plugin.enterprise.OptionsValueFormatter",
                "properties": {
                    "options": [],
                    "optionsBinder": {
                        "className": "org.joget.apps.form.lib.FormOptionsBinder",
                        "properties": {
                            "addEmptyOption": "",
                            "cacheInterval": "",
                            "emptyLabel": "",
                            "extraCondition": "c_nome_campo = 'categoria_processo'",
                            "formDefId": "adicionarOpcaoLV",
                            "groupingColumn": "",
                            "idColumn": "value",
                            "labelColumn": "label",
                            "useAjax": ""
                        }
                    }
                }
            },
            "headerAlignment": "",
            "hidden": "false",
            "id": "column_9",
            "label": "Categoria Processo",
            "name": "CategoriaProcesso",
            "permission_rules": {"5e537661-bb86-1b93-2668-597b70ee8074": {}},
            "sortable": "false",
            "style": "",
            "width": ""
        },
        {
            "action": {
                "className": "",
                "properties": {}
            },
            "alignment": "",
            "datalist_type": "column",
            "exclude_export": "",
            "filterable": true,
            "format": {
                "className": "org.joget.plugin.enterprise.OptionsValueFormatter",
                "properties": {
                    "options": [
                        {
                            "label": "Sim",
                            "value": "SIM"
                        },
                        {
                            "label": "Não",
                            "value": "NAO"
                        }
                    ],
                    "optionsBinder": {
                        "className": "",
                        "properties": {}
                    }
                }
            },
            "headerAlignment": "",
            "hidden": "false",
            "id": "column_6",
            "label": "Urgência Registo",
            "name": "Urgencia",
            "permission_rules": {"5e537661-bb86-1b93-2668-597b70ee8074": {}},
            "sortable": "true",
            "style": "",
            "width": ""
        },
        {
            "filterable": true,
            "hidden": "false",
            "id": "column_10",
            "label": "EstadoAgendamento",
            "name": "EstadoAgendamento",
            "sortable": "false"
        },
        {
            "action": {
                "className": "",
                "properties": {}
            },
            "alignment": "",
            "datalist_type": "column",
            "exclude_export": "",
            "filterable": true,
            "format": {
                "className": "",
                "properties": {}
            },
            "headerAlignment": "",
            "hidden": "false",
            "id": "column_4",
            "label": "Atividade",
            "name": "activityName",
            "permission_rules": {"5e537661-bb86-1b93-2668-597b70ee8074": {}},
            "sortable": "false",
            "style": "",
            "width": ""
        },
        {
            "action": {
                "className": "",
                "properties": {}
            },
            "alignment": "",
            "datalist_type": "column",
            "exclude_export": "",
            "filterable": true,
            "format": {
                "className": "org.joget.plugin.enterprise.DateFormatter",
                "properties": {
                    "dataFormat": "yyyy-MM-dd HH:mm:ss",
                    "dateStoreInUTC": "",
                    "displayFormat": "dd/MM/yyyy HH:mm:ss"
                }
            },
            "headerAlignment": "",
            "hidden": "false",
            "id": "column_5",
            "label": "Data de Criação",
            "name": "dateCreated",
            "permission_rules": {"5e537661-bb86-1b93-2668-597b70ee8074": {}},
            "sortable": "false",
            "style": "",
            "width": ""
        }
    ],
    "considerFilterWhenGetTotal": "",
    "description": "",
    "disableResponsive": "",
    "filters": [],
    "hidePageSize": "",
    "id": "list_validacao_entidades_autonomas_reg",
    "name": "Registos - Validação Entidades Autónomas",
    "order": "2",
    "orderBy": "No",
    "pageSize": "0",
    "pageSizeSelectorOptions": "10,20,30,40,50,100",
    "permission_rules": [{
        "permission": {
            "className": "org.joget.apps.userview.lib.DepartmentPermission",
            "properties": {
                "allowedDeptIds": "PL_INT_REG_VAL_ENT",
                "orgId": "PL"
            }
        },
        "permission_key": "5e537661-bb86-1b93-2668-597b70ee8074",
        "permission_name": "Registos - Validação Entidades"
    }],
    "responsiveView": [
        {
            "breakpoint": "",
            "columns": "",
            "view": "Mobile"
        },
        {
            "breakpoint": "",
            "columns": "",
            "view": "Tablet"
        }
    ],
    "rowActions": [{
        "className": "org.joget.plugin.enterprise.BeanShellDatalistAction",
        "icon": "<i class=\"fas fa-code\"><\/i>",
        "id": "rowAction_1",
        "label": "Bean Shell",
        "name": "Bean Shell Datalist Action",
        "properties": {
            "confirmation": "",
            "datalist_type": "row_action",
            "label": "Realocar",
            "rules": [],
            "script": "import org.joget.workflow.model.service.WorkflowManager;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport org.joget.workflow.model.service.WorkflowUserManager;\r\nimport org.joget.apps.app.model.AppDefinition;\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.datalist.model.DataListBinderDefaultimport;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport javax.sql.DataSource;\r\n\r\nString idProcesso=\"\";\r\nString aid = \"\";\r\nString resourceId = \"\";\r\nfor (String key : rowKeys) {\r\n    idProcesso = key;\r\n    \r\n}\r\n\r\n    Connection con = null;\r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\n    \r\n    try{\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\"setupDataSource\");\r\n        con = ds.getConnection();\r\n        \r\n        if(!con.isClosed()){\r\n\t\t\tString queryGetAid = \"SELECT a.id as 'Aid', sass.ResourceId as 'ResourceId' FROM shkprocesses p LEFT JOIN shkactivities a ON p.id = ProcessId LEFT JOIN shkprocessstates ps ON ps.oid = p.State LEFT JOIN SHKActivityStates acs ON acs.oid = a.State LEFT JOIN shkassignmentstable sass ON sass.ActivityId = a.id WHERE p.ActivityRequesterProcessId = ? AND ps.KeyValue LIKE 'open.running' AND (acs.KeyValue LIKE 'open.not_running.not_started' OR acs.KeyValue LIKE 'open.running');\";\r\n\t\t\tstmt = con.prepareStatement(queryGetAid);\r\n\t\t\tstmt.setObject(1, idProcesso);\r\n\t\t\trs = stmt.executeQuery();\r\n    \t\t\r\n    \t\tif(rs.next()){\r\n    \t\t\taid = rs.getObject(\"Aid\");\r\n                resourceId = rs.getObject(\"ResourceId\");\r\n\t\t\t\r\n\t\t\t    WorkflowManager wm = (WorkflowManager) AppUtil.getApplicationContext().getBean(\"workflowManager\");\r\n                WorkflowUserManager wum = (WorkflowUserManager) AppUtil.getApplicationContext().getBean(\"workflowUserManager\");\r\n                \r\n                //get the values from the \r\n                String replaceUser = resourceId;\r\n                String username = \"#currentUser.username#\";\r\n            \r\n            \r\n                //getCurrentThreadUser() Method used by system to get current thread user\r\n                String currentUser = wum.getCurrentThreadUser();\r\n                wum.setCurrentThreadUser(replaceUser);\r\n                wum.setCurrentThreadUser(currentUser);\r\n                \r\n                //Reassigns the assignment from a user (replaceUser) to another user (username)\r\n                wm.assignmentReassign(\"\", \"\", aid, username, replaceUser);\r\n    \t\t}\r\n        }\r\n            \r\n    }catch(Exception e){\r\n            LogUtil.error(appDef.toString(), e, \"Error getting info from DB\");\r\n    }finally{\r\n        try{\r\n            if(rs != null){\r\n            rs.close();\r\n            }\r\n            if(stmt != null){\r\n                stmt.close();\r\n            }\r\n            if(con != null && !con.isClosed()) {\r\n                con.close();\r\n            }\r\n        }catch(Exception e){\r\n            LogUtil.error(appDef.toString(), e, \"Error closing DB connection\");\r\n        }\r\n        \r\n    }"
        },
        "type": "text"
    }],
    "searchPopup": "",
    "showDataWhenFilterSet": "",
    "showPageSizeSelector": "true",
    "useSession": ""
}