{
    "actions": [],
    "binder": {
        "className": "org.joget.plugin.enterprise.JdbcDataListBinder",
        "properties": {
            "jdbcDatasource": "default",
            "optimisePaging": "",
            "primaryKey": "idProc",
            "sql": "SELECT p.id as idProc, dp.c_n_processo as NProc, dp.c_banco_fundo as Banco, dp.c_tipo_processo as TipoProcesso, sp.Id AS processId, sp.Name AS processName, sact.Id AS instanceId, sact.Name AS activityName, sass.ResourceId AS assignee\nFROM shkprocesses sp\nLEFT JOIN shkprocesses sp2 on sp.ActivityRequesterProcessId = sp2.Id\nLEFT JOIN app_fd_processos_procu p on sp.ActivityRequesterProcessId = p.id\nLEFT JOIN app_fd_detalhe_proce_procu dp ON dp.id = p.c_detalhe_processo\nLEFT JOIN shkprocessstates sps ON sps.oid = sp.State\nLEFT JOIN SHKActivities sact ON sact.ProcessId = sp.Id\nLEFT JOIN SHKActivityStates ssta ON ssta.oid = sact.State\nLEFT JOIN (select ActivityId, group_concat(ResourceId separator '; ') as ResourceId from SHKAssignmentsTable group by ActivityId) sass on sact.Id = sass.ActivityId\nWHERE sps.KeyValue LIKE 'open.running'\nAND p.id is not null\nAND (ssta.oid = '1000001' OR ssta.oid = '1000003' OR ssta.oid = '1000005')\nAND sp.id like '%PCDProcuradoria%'"
        }
    },
    "buttonPosition": "bottomLeft",
    "checkboxPosition": "left",
    "columns": [
        {
            "filterable": true,
            "hidden": "false",
            "id": "column_3",
            "label": "NProc",
            "name": "NProc",
            "sortable": "false"
        },
        {
            "filterable": true,
            "hidden": "false",
            "id": "column_4",
            "label": "Banco",
            "name": "Banco",
            "sortable": "false"
        },
        {
            "filterable": true,
            "hidden": "false",
            "id": "column_6",
            "label": "TipoProcesso",
            "name": "TipoProcesso",
            "sortable": "false"
        },
        {
            "filterable": true,
            "hidden": "false",
            "id": "column_5",
            "label": "assignee",
            "name": "assignee",
            "sortable": "false"
        },
        {
            "filterable": true,
            "hidden": "false",
            "id": "column_7",
            "label": "activityName",
            "name": "activityName",
            "sortable": "false"
        }
    ],
    "considerFilterWhenGetTotal": "",
    "description": "",
    "filters": [],
    "id": "list_consultar_processo_procu",
    "name": "List - Consultar Processos Procu",
    "order": "",
    "orderBy": "",
    "pageSize": "0",
    "pageSizeSelectorOptions": "10,20,30,40,50,100",
    "rowActions": [{
        "className": "org.joget.plugin.enterprise.BeanShellDatalistAction",
        "icon": "<i class=\"fas fa-code\"><\/i>",
        "id": "rowAction_0",
        "label": "Bean Shell",
        "name": "Bean Shell Datalist Action",
        "properties": {
            "confirmation": "",
            "datalist_type": "row_action",
            "label": "Puxar Processo",
            "rules": [],
            "script": "\nimport org.joget.workflow.model.service.WorkflowManager;\nimport org.joget.apps.app.service.AppUtil;\nimport org.joget.workflow.model.service.WorkflowUserManager;\nimport org.joget.apps.app.model.AppDefinition;\nimport javax.servlet.http.HttpServletRequest;\nimport org.joget.commons.util.LogUtil;\nimport org.joget.apps.datalist.model.DataListBinderDefault\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport javax.sql.DataSource;\n\n\n\nfor (String key : rowKeys) {\n    \n   LogUtil.info(\"Record key is \", \"AAAAAAA\" + key);\n}\n\nfor(DataListColumn col: datalist.getColumns()){\n    \n     LogUtil.info(\"Datalist \", \"BBBBBBB\" + col);\n    \n    \n}\n\n\n/*\n    WorkflowManager wm = (WorkflowManager) AppUtil.getApplicationContext().getBean(\"workflowManager\");\n    WorkflowUserManager wum = (WorkflowUserManager) AppUtil.getApplicationContext().getBean(\"workflowUserManager\");\n    \n    //get the values from the \n    String aid = \"#requestParam.aid#\";\n    String replaceUser = \"#requestParam.replaceUser#\";\n    String username = \"#form.realocar_processo.user#\";\n    String comentarios = \"\";\n    String idProcesso=\"#form.realocar_processo.id_processo#\";\n    String idRealocacao = \"#form.realocar_processo.id#\";\n\n\n    //getCurrentThreadUser() Method used by system to get current thread user\n    String currentUser = wum.getCurrentThreadUser();\n    wum.setCurrentThreadUser(replaceUser);\n    wum.setCurrentThreadUser(currentUser);\n    \n    //Reassigns the assignment from a user (replaceUser) to another user (username)\n    wm.assignmentReassign(\"\", \"\", aid, username, replaceUser);\n    \n    //set workflow variable \"approver\" to the new user as well\n    //wm.activityVariable(aid, \"approver\", username);\n    */\n\n\n\n"
        },
        "type": "text"
    }],
    "showPageSizeSelector": "true",
    "useSession": "false"
}