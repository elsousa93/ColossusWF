{
    "actions": [],
    "binder": {
        "className": "org.joget.plugin.enterprise.JdbcDataListBinder",
        "properties": {
            "jdbcDatasource": "default",
            "optimisePaging": "",
            "primaryKey": "idProc",
            "sql": "SELECT p.dateCreated, p.id AS idProc, dp.c_scoring AS scoring, dp.c_data_entrada AS dataEntrada, dp.c_via_entrada AS viaEntrada, sp.Id AS processId,\n\t\tsp.Name AS processName, sact.Id AS instanceId, sact.Name AS activityName, sass.ResourceId AS assignee, dp.c_n_agenda as NAgenda, dp.c_n_entrada as numEntrada, \n\t\tdp.c_fase as fase, dp.c_tipo as tipo, dp.c_valor as valor, dp.c_tipo_garantia as tipoGarantia, dp.c_gestor as gestor, dp.c_nivel_servico as nivelServico, dp.c_urgente as urgente,\n\t\tdp.c_status as status, dp.c_estado as estado, dp.c_data_tratamento as dataTratamento, dp.c_banco as banco\nFROM shkprocesses sp\nLEFT JOIN app_fd_processos_cp p ON sp.Id = p.id\nLEFT JOIN app_fd_detalhe_proce_cp dp ON dp.id = p.c_detalhe_processo\nLEFT JOIN shkprocessstates sps ON sps.oid = sp.State\nLEFT JOIN SHKActivities sact ON sact.ProcessId = sp.Id\nLEFT JOIN SHKActivityStates ssta ON ssta.oid = sact.State\nLEFT JOIN (select ActivityId, group_concat(ResourceId separator '; ') as ResourceId from SHKAssignmentsTable group by ActivityId) sass on sact.Id = sass.ActivityId\nWHERE sps.KeyValue LIKE 'open.running'\nAND p.id is not null\nAND (ssta.oid = '1000001' OR ssta.oid = '1000003' OR ssta.oid = '1000005')\nAND sp.id like '%CreditoPessoal%'\nAND sass.ResourceId like '%credito_pessoal_geral%'"
        }
    },
    "buttonPosition": "bottomLeft",
    "checkboxPosition": "left",
    "columns": [
        {
            "action": {
                "className": "",
                "properties": {}
            },
            "alignment": "",
            "datalist_type": "column",
            "exclude_export": "",
            "filterable": true,
            "format": {
                "className": "org.joget.plugin.enterprise.DateFormatter",
                "properties": {
                    "dateStoreInUTC": "true",
                    "displayFormat": "dd/MM/yyyy HH:mm:ss"
                }
            },
            "headerAlignment": "",
            "hidden": "false",
            "id": "column_2",
            "label": "Data de Entrada",
            "name": "dateCreated",
            "sortable": "false",
            "style": "",
            "width": ""
        },
        {
            "action": {
                "className": "",
                "properties": {}
            },
            "alignment": "",
            "datalist_type": "column",
            "exclude_export": "",
            "filterable": true,
            "format": {
                "className": "",
                "properties": {}
            },
            "headerAlignment": "",
            "hidden": "false",
            "id": "column_0",
            "label": "Via de Entrada",
            "name": "viaEntrada",
            "sortable": "false",
            "style": "",
            "width": ""
        },
        {
            "action": {
                "className": "",
                "properties": {}
            },
            "alignment": "",
            "datalist_type": "column",
            "exclude_export": "",
            "filterable": true,
            "format": {
                "className": "",
                "properties": {}
            },
            "headerAlignment": "",
            "hidden": "false",
            "id": "column_8",
            "label": "Scoring",
            "name": "scoring",
            "sortable": "false",
            "style": "",
            "width": ""
        },
        {
            "action": {
                "className": "",
                "properties": {}
            },
            "alignment": "",
            "datalist_type": "column",
            "exclude_export": "",
            "filterable": true,
            "format": {
                "className": "",
                "properties": {}
            },
            "headerAlignment": "",
            "hidden": "false",
            "id": "column_1",
            "label": "NÂº Entrada",
            "name": "numEntrada",
            "sortable": "false",
            "style": "",
            "width": ""
        },
        {
            "action": {
                "className": "",
                "properties": {}
            },
            "alignment": "",
            "datalist_type": "column",
            "exclude_export": "",
            "filterable": true,
            "format": {
                "className": "",
                "properties": {}
            },
            "headerAlignment": "",
            "hidden": "false",
            "id": "column_3",
            "label": "Tipo",
            "name": "tipo",
            "sortable": "false",
            "style": "",
            "width": ""
        },
        {
            "filterable": true,
            "hidden": "false",
            "id": "column_4",
            "label": "valor",
            "name": "valor",
            "sortable": "false"
        },
        {
            "filterable": true,
            "hidden": "false",
            "id": "column_6",
            "label": "tipoGarantia",
            "name": "tipoGarantia",
            "sortable": "false"
        },
        {
            "filterable": true,
            "hidden": "false",
            "id": "column_9",
            "label": "gestor",
            "name": "gestor",
            "sortable": "false"
        },
        {
            "action": {
                "className": "",
                "properties": {}
            },
            "alignment": "",
            "datalist_type": "column",
            "exclude_export": "",
            "filterable": true,
            "format": {
                "className": "org.joget.plugin.enterprise.OptionsValueFormatter",
                "properties": {
                    "options": [],
                    "optionsBinder": {
                        "className": "org.joget.plugin.enterprise.UserOptionsBinder",
                        "properties": {
                            "addEmptyOption": "",
                            "cacheInterval": "",
                            "deptId": "",
                            "emptyLabel": "",
                            "groupId": "",
                            "grouping": "",
                            "optionLabel": "fullname",
                            "orgId": "",
                            "useAjax": ""
                        }
                    }
                }
            },
            "headerAlignment": "",
            "hidden": "false",
            "id": "column_5",
            "label": "Alocado a",
            "name": "assignee",
            "sortable": "false",
            "style": "",
            "width": ""
        },
        {
            "filterable": true,
            "hidden": "false",
            "id": "column_10",
            "label": "nivelServico",
            "name": "nivelServico",
            "sortable": "false"
        },
        {
            "filterable": true,
            "hidden": "false",
            "id": "column_11",
            "label": "urgente",
            "name": "urgente",
            "sortable": "false"
        },
        {
            "filterable": true,
            "hidden": "false",
            "id": "column_12",
            "label": "status",
            "name": "status",
            "sortable": "false"
        },
        {
            "filterable": true,
            "hidden": "false",
            "id": "column_13",
            "label": "estado",
            "name": "estado",
            "sortable": "false"
        },
        {
            "filterable": true,
            "hidden": "false",
            "id": "column_14",
            "label": "dataTratamento",
            "name": "dataTratamento",
            "sortable": "false"
        },
        {
            "filterable": true,
            "hidden": "false",
            "id": "column_15",
            "label": "banco",
            "name": "banco",
            "sortable": "false"
        }
    ],
    "considerFilterWhenGetTotal": "",
    "description": "",
    "disableResponsive": "",
    "filters": [
        {
            "datalist_type": "filter",
            "filterParamName": "d-1381974-fn_scoring",
            "hidden": "",
            "id": "filter_5",
            "label": "Scoring",
            "name": "scoring",
            "type": {
                "className": "org.joget.apps.datalist.lib.TextFieldDataListFilterType",
                "properties": {"defaultValue": ""}
            }
        },
        {
            "datalist_type": "filter",
            "filterParamName": "d-1381974-fn_assignee",
            "hidden": "",
            "id": "filter_3",
            "label": "Gestor",
            "name": "assignee",
            "type": {
                "className": "org.joget.plugin.enterprise.SelectBoxDataListFilterType",
                "properties": {
                    "defaultValue": "",
                    "multiple": "autocomplete",
                    "options": [],
                    "optionsBinder": {
                        "className": "org.joget.plugin.enterprise.UserOptionsBinder",
                        "properties": {
                            "addEmptyOption": "",
                            "cacheIdlePause": "120",
                            "cacheInterval": "",
                            "deptId": "",
                            "emptyLabel": "",
                            "groupId": "",
                            "grouping": "",
                            "optionLabel": "",
                            "orgId": "",
                            "useAjax": ""
                        }
                    },
                    "size": ""
                }
            }
        }
    ],
    "hidePageSize": "",
    "id": "list_fila_comum_credito_pessoal",
    "name": "CP - Fila Comum",
    "order": "",
    "orderBy": "",
    "pageSize": "0",
    "pageSizeSelectorOptions": "10,20,30,40,50,100",
    "responsiveView": [
        {
            "breakpoint": "",
            "columns": "",
            "view": "Mobile"
        },
        {
            "breakpoint": "",
            "columns": "",
            "view": "Tablet"
        }
    ],
    "rowActions": [{
        "className": "org.joget.plugin.enterprise.BeanShellDatalistAction",
        "icon": "<i class=\"fas fa-code\"><\/i>",
        "id": "rowAction_1",
        "label": "Bean Shell",
        "name": "Bean Shell Datalist Action",
        "properties": {
            "confirmation": "",
            "datalist_type": "row_action",
            "label": "Puxar Processo",
            "rules": [],
            "script": "import org.joget.workflow.model.service.WorkflowManager;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport org.joget.workflow.model.service.WorkflowUserManager;\r\nimport org.joget.apps.app.model.AppDefinition;\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.datalist.model.DataListBinderDefaultimport;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport javax.sql.DataSource;\r\nimport org.joget.commons.util.UuidGenerator;\r\n\r\npublic void puxarProcesso() {\r\n    String idProcesso = \"\";\r\n    String aid = \"\";\r\n    String resourceId = \"\";\r\n    String idToUpdate = \"\";\r\n\r\n    for (String key : rowKeys) {\r\n        idProcesso = key;\r\n    }\r\n    \r\n    Connection con = null;\r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\n    \r\n    try{\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\"setupDataSource\");\r\n        con = ds.getConnection();\r\n        \r\n        if(!con.isClosed()){\r\n            String queryGetAid = \"SELECT a.id as 'Aid', sass.ResourceId as 'ResourceId' FROM shkprocesses p LEFT JOIN shkactivities a ON p.id = ProcessId LEFT JOIN shkprocessstates ps ON ps.oid = p.State LEFT JOIN SHKActivityStates acs ON acs.oid = a.State LEFT JOIN shkassignmentstable sass ON sass.ActivityId = a.id WHERE sass.ActivityProcessId = ? AND a.id LIKE '%CreditoPessoal%' AND ps.KeyValue LIKE 'open.running' AND (acs.KeyValue LIKE 'open.not_running.not_started' OR acs.KeyValue LIKE 'open.running');\";\r\n            stmt = con.prepareStatement(queryGetAid);\r\n            stmt.setObject(1, idProcesso);\r\n            rs = stmt.executeQuery();\r\n            \r\n            if(rs.next()) {\r\n                aid = rs.getObject(\"Aid\");\r\n                resourceId= rs.getObject(\"ResourceId\");\r\n                    \r\n                WorkflowManager wm = (WorkflowManager) AppUtil.getApplicationContext().getBean(\"workflowManager\");\r\n                WorkflowUserManager wum = (WorkflowUserManager) AppUtil.getApplicationContext().getBean(\"workflowUserManager\");\r\n                \r\n                //get the values from the \r\n                String replaceUser = resourceId;\r\n                String username = \"#currentUser.username#\";\r\n                \r\n                //getCurrentThreadUser() Method used by system to get current thread user\r\n                String currentUser = wum.getCurrentThreadUser();\r\n                wum.setCurrentThreadUser(replaceUser);\r\n                wum.setCurrentThreadUser(currentUser);\r\n                    \r\n                //Reassigns the assignment from a user (replaceUser) to another user (username)\r\n                wm.assignmentReassign(\"\", \"\", aid, username, replaceUser);\r\n                \r\n                \r\n                /*\r\n                // Atualizar o colaborador de arquivo na BD\r\n                String queryGetIdToUpdate = \"SELECT id FROM app_fd_geral WHERE c_id_processo = ?\";\r\n                stmt = con.prepareStatement(queryGetIdToUpdate);\r\n                stmt.setObject(1, idProcesso);\r\n                rs = stmt.executeQuery();\r\n                \r\n                if(rs.next()) {\r\n                    idToUpdate = rs.getObject(\"id\");\r\n                }\r\n                \r\n                String queryUpdateColaborador = \"UPDATE app_fd_geral SET c_colaborador_arquivo = ? WHERE id = ?\";\r\n                stmt = con.prepareStatement(queryUpdateColaborador);\r\n                stmt.setObject(1, username);\r\n                stmt.setObject(2, idToUpdate);\r\n                rs = stmt.executeQuery();\r\n                */\r\n            }\r\n        }\r\n            \r\n    }catch(Exception e){\r\n        LogUtil.error(\"Arquivo - Puxar Processo\", e, \"Error getting info from DB\");\r\n    }finally{\r\n        try{\r\n            if(rs != null) {\r\n                rs.close();\r\n            }\r\n                \r\n            if(stmt != null) {\r\n                stmt.close();\r\n            }\r\n            \r\n            if(con != null && !con.isClosed()) {\r\n                con.close();\r\n            }\r\n        }catch(Exception e){\r\n            LogUtil.error(appDef.toString(), e, \"Error closing DB connection\");\r\n        }\r\n    }    \r\n}\r\n\r\n\r\npuxarProcesso();"
        },
        "type": "text"
    }],
    "searchPopup": "",
    "showDataWhenFilterSet": "",
    "showPageSizeSelector": "true",
    "useSession": ""
}