{
    "className": "org.joget.apps.form.model.Form",
    "elements": [
        {
            "className": "org.joget.apps.form.model.Section",
            "elements": [{
                "className": "org.joget.apps.form.model.Column",
                "elements": [
                    {
                        "className": "org.joget.plugin.enterprise.MultiPagedForm",
                        "properties": {
                            "ajaxMode": "",
                            "css": "",
                            "displayMode": "tab",
                            "id": "multiPaged",
                            "nextButtonlabel": "PRÓXIMO",
                            "numberOfPage": {
                                "className": "11",
                                "properties": {
                                    "page10_formDefId": "comunicacoes",
                                    "page10_label": "Comunicações",
                                    "page10_parentSubFormId": "comunicacoes",
                                    "page10_readonly": "",
                                    "page10_readonlyLabel": "",
                                    "page10_subFormParentId": "id_processo",
                                    "page10_validate": "",
                                    "page11_formDefId": "geral",
                                    "page11_label": "Operativa",
                                    "page11_parentSubFormId": "geral",
                                    "page11_readonly": "",
                                    "page11_readonlyLabel": "",
                                    "page11_subFormParentId": "id_processo",
                                    "page11_validate": "",
                                    "page1_formDefId": "menuPrincipal2",
                                    "page1_label": "Resumo",
                                    "page1_parentSubFormId": "detalhe_processo",
                                    "page1_readonly": "",
                                    "page1_readonlyLabel": "",
                                    "page1_subFormParentId": "",
                                    "page1_validate": "",
                                    "page2_formDefId": "detalheProcesso",
                                    "page2_label": "Processo",
                                    "page2_parentSubFormId": "detalhe_processo",
                                    "page2_readonly": "",
                                    "page2_readonlyLabel": "",
                                    "page2_subFormParentId": "id_processo",
                                    "page2_validate": "",
                                    "page3_formDefId": "intervenientes",
                                    "page3_label": "Intervenientes",
                                    "page3_parentSubFormId": "intervenientes",
                                    "page3_readonly": "",
                                    "page3_readonlyLabel": "",
                                    "page3_subFormParentId": "id_processo",
                                    "page3_validate": "",
                                    "page4_formDefId": "documentos",
                                    "page4_label": "Documentos",
                                    "page4_parentSubFormId": "docs",
                                    "page4_readonly": "",
                                    "page4_readonlyLabel": "",
                                    "page4_subFormParentId": "id_processo",
                                    "page4_validate": "",
                                    "page5_formDefId": "imoveis",
                                    "page5_label": "Imóveis",
                                    "page5_parentSubFormId": "imoveis",
                                    "page5_readonly": "",
                                    "page5_readonlyLabel": "",
                                    "page5_subFormParentId": "id_processo",
                                    "page5_validate": "",
                                    "page6_formDefId": "banco",
                                    "page6_label": "Banco",
                                    "page6_parentSubFormId": "banco",
                                    "page6_readonly": "",
                                    "page6_readonlyLabel": "",
                                    "page6_subFormParentId": "id_processo",
                                    "page6_validate": "",
                                    "page7_formDefId": "analiseBancaria",
                                    "page7_label": "Análise Bancária",
                                    "page7_parentSubFormId": "anal_banc",
                                    "page7_readonly": "",
                                    "page7_readonlyLabel": "",
                                    "page7_subFormParentId": "id_processo",
                                    "page7_validate": "",
                                    "page8_formDefId": "analiseLegal",
                                    "page8_label": "Análise Legal",
                                    "page8_parentSubFormId": "anal_legal",
                                    "page8_readonly": "",
                                    "page8_readonlyLabel": "",
                                    "page8_subFormParentId": "id_processo",
                                    "page8_validate": "",
                                    "page9_formDefId": "esclarecimentos",
                                    "page9_label": "Diligências",
                                    "page9_parentSubFormId": "esclarecimentos",
                                    "page9_readonly": "",
                                    "page9_readonlyLabel": "",
                                    "page9_subFormParentId": "id_processo",
                                    "page9_validate": ""
                                }
                            },
                            "onlyAllowSubmitOnLastPage": "",
                            "partiallyStore": "true",
                            "prevButtonlabel": "ANTERIOR",
                            "storeMainFormOnPartiallyStore": "true"
                        }
                    },
                    {
                        "className": "org.joget.apps.form.lib.CustomHTML",
                        "properties": {
                            "autoPopulate": "",
                            "id": "edicao_botoes_default",
                            "label": "",
                            "value": "<script type=\"text/javascript\">\r\n$(function(){\r\n    var flagUltimaAtividade='#variable.flag_ultima_atividade#';\r\n    console.log(flagUltimaAtividade);\r\n    if(flagUltimaAtividade == 1){\r\n        $(\"#assignmentComplete\").val(\"PROXIMA OPERATIVA\");\r\n        $(\"#saveAsDraft\").val(\"GUARDAR\");\r\n        $(\"#cancel\").text(\"CANCELAR\"); \r\n\r\n    }else{\r\n        $(\"#assignmentComplete\").val(\"PROXIMA ATIVIDADE\");\r\n        $(\"#saveAsDraft\").val(\"GUARDAR\");~~\r\n        $(\"#cancel\").text(\"CANCELAR\"); \r\n    }\r\n\r\n \r\n});\r\n<\/script>"
                        }
                    }
                ],
                "properties": {"width": "100%"}
            }],
            "properties": {
                "comment": "",
                "id": "section1",
                "join": "",
                "label": "Plataforma Legal",
                "loadBinder": {
                    "className": "",
                    "properties": {}
                },
                "permission": {
                    "className": "",
                    "properties": {}
                },
                "permissionReadonly": "",
                "readonly": "",
                "readonlyLabel": "",
                "regex": "",
                "reverse": "",
                "storeBinder": {
                    "className": "",
                    "properties": {}
                },
                "visibilityControl": "",
                "visibilityValue": ""
            }
        },
        {
            "className": "org.joget.apps.form.model.Section",
            "elements": [{
                "className": "org.joget.apps.form.model.Column",
                "elements": [{
                    "className": "org.joget.apps.form.lib.TextField",
                    "properties": {
                        "encryption": "",
                        "id": "robot",
                        "label": "Robot",
                        "maxlength": "",
                        "placeholder": "",
                        "readonly": "",
                        "readonlyLabel": "",
                        "size": "",
                        "storeNumeric": "",
                        "style": "",
                        "validator": {
                            "className": "",
                            "properties": {}
                        },
                        "value": "",
                        "workflowVariable": ""
                    }
                }],
                "properties": {"width": "100%"}
            }],
            "properties": {
                "comment": "",
                "id": "section2",
                "join": "",
                "label": "Robot",
                "loadBinder": {
                    "className": "",
                    "properties": {}
                },
                "permission": {
                    "className": "",
                    "properties": {}
                },
                "permissionReadonly": "",
                "readonly": "",
                "readonlyLabel": "",
                "regex": "",
                "reverse": "",
                "storeBinder": {
                    "className": "",
                    "properties": {}
                },
                "visibilityControl": "",
                "visibilityValue": ""
            }
        }
    ],
    "properties": {
        "description": "",
        "id": "processo",
        "loadBinder": {
            "className": "org.joget.apps.form.lib.WorkflowFormBinder",
            "properties": {}
        },
        "name": "CHG - 1 - Processo",
        "noPermissionMessage": "",
        "permission": {
            "className": "",
            "properties": {}
        },
        "postProcessor": {
            "className": "org.joget.apps.app.lib.BeanShellTool",
            "properties": {"script": "import org.joget.apps.form.model.Element;\r\nimport org.joget.workflow.model.service.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport java.util.Arrays;\r\nimport org.joget.apps.form.model.Form;\r\nimport org.joget.apps.form.model.FormData;\r\nimport org.joget.apps.form.service.FormUtil;\r\nimport java.util.Map;\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport org.joget.apps.app.model.AppDefinition;\r\nimport org.joget.apps.app.service.AppPluginUtil;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport org.joget.plugin.base.ApplicationPlugin;\r\nimport org.joget.plugin.base.Plugin;\r\nimport org.joget.plugin.base.PluginManager;\r\nimport org.joget.plugin.property.model.PropertyEditable;\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport javax.sql.DataSource;\r\nimport org.joget.commons.util.UuidGenerator;\r\nimport java.time.LocalDate;\r\n  \r\n\r\npublic Object execute(AppDefinition appDef, HttpServletRequest request) {\r\n\r\n    String ProcessID = workflowAssignment.getProcessId();\r\n    String Username = \"#currentUser.username#\";\r\n    String Performer = \"#process.activityInst.{assignment.activityDefId}.performer#\";\r\n    String LaneUser = \"user_\" + Performer;\r\n    String EstadoContratacao = \"#form.detalhe_processo.estado_contratacao[{form.processos.detalhe_processo}]#\";\r\n    String EstadoContratacaoEval = \"\";\r\n    String DetalheProcesso = \"#form.processos.detalhe_processo#\";\r\n    int SlaToApplyMin = 0;\r\n    WorkflowManager wm = (WorkflowManager) pluginManager.getBean(\"workflowManager\");\r\n    //Set workflow variables- \r\n    //Last Lane user for reasignment purposes\r\n    wm.processVariable(ProcessID, LaneUser , Username);\r\n    LogUtil.info(\"BeanShell set WF Var\", \"Detalhe do Processo: \" + DetalheProcesso);\r\n    LogUtil.info(\"BeanShell set WF Var\", \"Estado de Contratacao: \" + EstadoContratacao);\r\n   // wm.processVariable(ProcessID, \"estado\" , EstadoContratacao);\r\n    // - State - \"estado\"\r\n    \r\n    /*    EstadoContratacaoEval = AppUtil.processHashVariable(EstadoContratacao,null,null,null);\r\n    LogUtil.info(\"BeanShell set WF Var\", \"Estado de Contratacao EVAL: \" + EstadoContratacaoEval);\r\n    EstadoContratacao = \"#form.detalhe_processo.estado_contratacao#\";\r\n    LogUtil.info(\"BeanShell set WF Var\", \"Estado de Contratacao: \" + EstadoContratacao);*/\r\n    \r\n    \r\n    //SlaToApplyMin = 5;\r\n    \r\n    Connection con = null;\r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\n    try{\r\n            DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\"setupDataSource\");\r\n            con = ds.getConnection();\r\n            \r\n            if(!con.isClosed()){\r\n               \r\n               //Dar reset ao sla caso o estado seja pendente\r\n               if(EstadoContratacao == \"PND\"){\r\n                   //Atualizar o sla para fechado\r\n                    String queryReset= \"UPDATE app_fd_sla_atividade SET c_estado_atividade = 'fechada' WHERE c_id_processo=? AND c_estado_atividade = 'Em curso';\"; \r\n                    stmt = con.prepareStatement(queryReset);\r\n                    stmt.setObject(1, ProcessID);\r\n                    rs = stmt.executeQuery();\r\n                   \r\n                   //Obter detalhes da tarefa\r\n                    String queryGetAssignment = \"SELECT name FROM shkprocesses WHERE id=?;\";\r\n                    String queryGetUserAssign = \"SELECT resourceid FROM shkassignmentstable WHERE activityprocessid =?\";\r\n                    String nomeAtividade = \"\";\r\n                    String utilizador = \"\";\r\n                    stmt = con.prepareStatement(queryGetAssignment);\r\n                    stmt.setObject(1, ProcessID);\r\n                    rs = stmt.executeQuery();\r\n                    \r\n                    if(rs.next()){\r\n                        nomeAtividade= rs.getObject(\"name\").toString();\r\n                    }\r\n                    \r\n                    stmt = con.prepareStatement(queryGetUserAssign);\r\n                    stmt.setObject(1, ProcessID);\r\n                    rs = stmt.executeQuery();\r\n                    \r\n                    if(rs.next()){\r\n                        utilizador= rs.getObject(\"resourceid\").toString();\r\n                    }\r\n                   \r\n                   //Criar novo SLA\r\n                   String queryCreateSLA = \"INSERT INTO app_fd_sla_atividade (id, dateCreated, dateModified, createdBy,createdByName ,modifiedBy, modifiedByName, c_data_inicio, c_data_fim, c_nome_atividade, c_sla, c_id_processo, c_utilizador_atribuido, c_estado_atividade) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?);\";\r\n                   stmt = con.prepareStatement(queryCreateSLA);\r\n                   \r\n                   var idSLA = UuidGenerator.getInstance().getUuid();\r\n                   var dateNow =\"#date.yyyy-MM-dd h:mm:ss#\";\r\n                   var currentUsername = \"#currentUser.username#\";\r\n                   var currentNameUser = \"#currentUser.firstName#\" + \"#currentUser.lastName#\";\r\n                   \r\n                   var estadoAtividade = \"Em curso\";\r\n                   stmt.setObject(1, idSLA);\r\n                   stmt.setObject(2, dateNow);\r\n                   stmt.setObject(3, dateNow);\r\n                   stmt.setObject(4, currentUsername);\r\n                   stmt.setObject(5, currentNameUser);\r\n                   stmt.setObject(6, currentUsername);\r\n                   stmt.setObject(7, currentNameUser);\r\n                   stmt.setObject(8, dateNow);\r\n                   stmt.setObject(9, dateNow);   //Falta calcular a data de Fim\r\n                   stmt.setObject(10, nomeAtividade);\r\n                   stmt.setObject(11, ProcessID);\r\n                   stmt.setObject(12, ProcessID);\r\n                   stmt.setObject(13, utilizador);\r\n                   stmt.setObject(14, estadoAtividade);\r\n\r\n                   rs = stmt.executeQuery();\r\n                   \r\n                   \r\n               }else{\r\n                   \r\n                   \r\n                   \r\n                   \r\n               }\r\n            }\r\n            \r\n        }catch(Exception e){\r\n            LogUtil.error(appDef.toString(), e, \"Error getting info from DB\");\r\n        }finally{\r\n            try{\r\n                if(rs != null){\r\n                rs.close();\r\n                }\r\n                if(stmt != null){\r\n                    stmt.close();\r\n                }\r\n                if(con != null && !con.isClosed()) {\r\n                    con.close();\r\n                }\r\n            }catch(Exception e){\r\n                LogUtil.error(appDef.toString(), e, \"Error closing DB connection\");\r\n            }\r\n            \r\n        }\r\n    \r\n    \r\n    return null;\r\n    \r\n}\r\n\r\nreturn execute(appDef, request);\r\n        \r\n\r\n"}
        },
        "postProcessorRunOn": "both",
        "storeBinder": {
            "className": "org.joget.apps.form.lib.BeanShellFormBinder",
            "properties": {
                "autoHandleFiles": "",
                "autoHandleWorkflowVariable": "true",
                "cacheInterval": "",
                "script": "import org.joget.apps.app.service.AppUtil;\nimport org.joget.apps.form.model.Element;\nimport org.joget.apps.form.model.FormData;\nimport org.joget.apps.form.model.FormRow;\nimport org.joget.apps.form.model.FormRowSet;\nimport org.joget.apps.form.model.FormStoreBinder;\nimport org.joget.plugin.base.PluginManager;\n\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport javax.sql.DataSource;\nimport org.joget.commons.util.UuidGenerator;\nimport java.time.LocalDate;\nimport org.joget.workflow.model.service.*;\n  \n\npublic FormRowSet store(Element element, FormRowSet rows, FormData formData) {\n    \n    if (rows != null && !rows.isEmpty()) {\n    \n        PluginManager pluginManager = (PluginManager) AppUtil.getApplicationContext().getBean(\"pluginManager\");\n        FormStoreBinder binder = (FormStoreBinder) pluginManager.getPlugin(\"org.joget.apps.form.lib.WorkflowFormBinder\");\n        binder.store(element, rows, formData);\n    }\n    \n    String ProcessID = \"#process.processId#\";\n    \n    LogUtil.info(\"ProcessID:\", \"\"+ ProcessId);\n    String EstadoContratacao = \"#form.detalhe_processo.estado_contratacao[{form.processos.detalhe_processo}]#\";\n    \n    Connection con = null;\n    PreparedStatement stmt = null;\n    ResultSet rs = null;\n    try{\n            DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\"setupDataSource\");\n            con = ds.getConnection();\n            \n            if(!con.isClosed()){\n               \n               //Dar reset ao sla caso o estado seja pendente\n               if(EstadoContratacao == \"PND\"){\n                   //Atualizar o sla para fechado\n                    String queryReset= \"UPDATE app_fd_sla_atividade SET c_estado_atividade = 'fechada' WHERE c_id_processo=? AND c_estado_atividade = 'Em curso';\"; \n                    stmt = con.prepareStatement(queryReset);\n                    stmt.setObject(1, ProcessID);\n                    rs = stmt.executeQuery();\n                   \n                   //Obter detalhes da tarefa\n                    String queryGetAssignment = \"SELECT name FROM shkprocesses WHERE id=?;\";\n                    String queryGetUserAssign = \"SELECT resourceid FROM shkassignmentstable WHERE activityprocessid =?\";\n                    String nomeAtividade = \"\";\n                    String utilizador = \"\";\n                    stmt = con.prepareStatement(queryGetAssignment);\n                    stmt.setObject(1, ProcessID);\n                    rs = stmt.executeQuery();\n                    \n                    if(rs.next()){\n                        nomeAtividade= rs.getObject(\"name\").toString();\n                    }\n                    \n                    stmt = con.prepareStatement(queryGetUserAssign);\n                    stmt.setObject(1, ProcessID);\n                    rs = stmt.executeQuery();\n                    \n                    if(rs.next()){\n                        utilizador= rs.getObject(\"resourceid\").toString();\n                    }\n                   \n                   //Criar novo SLA\n                   String queryCreateSLA = \"INSERT INTO app_fd_sla_atividade (id, dateCreated, dateModified, createdBy,createdByName ,modifiedBy, modifiedByName, c_data_inicio, c_data_fim, c_nome_atividade, c_sla, c_id_processo, c_utilizador_atribuido, c_estado_atividade) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?);\";\n                   stmt = con.prepareStatement(queryCreateSLA);\n                   \n                   var idSLA = UuidGenerator.getInstance().getUuid();\n                   var dateNow =\"#date.yyyy-MM-dd h:mm:ss#\";\n                   var currentUsername = \"#currentUser.username#\";\n                   var currentNameUser = \"#currentUser.firstName#\" + \"#currentUser.lastName#\";\n                   \n                   var estadoAtividade = \"Em curso\";\n                   stmt.setObject(1, idSLA);\n                   stmt.setObject(2, dateNow);\n                   stmt.setObject(3, dateNow);\n                   stmt.setObject(4, currentUsername);\n                   stmt.setObject(5, currentNameUser);\n                   stmt.setObject(6, currentUsername);\n                   stmt.setObject(7, currentNameUser);\n                   stmt.setObject(8, dateNow);\n                   stmt.setObject(9, dateNow);   //Falta calcular a data de Fim\n                   stmt.setObject(10, nomeAtividade);\n                   stmt.setObject(11, ProcessID);\n                   stmt.setObject(12, ProcessID);\n                   stmt.setObject(13, utilizador);\n                   stmt.setObject(14, estadoAtividade);\n\n                   rs = stmt.executeQuery();\n                   \n                   \n               }else{\n                   \n                   \n                   \n                   \n               }\n            }\n            \n        }catch(Exception e){\n            LogUtil.error(appDef.toString(), e, \"Error getting info from DB\");\n        }finally{\n            try{\n                if(rs != null){\n                rs.close();\n                }\n                if(stmt != null){\n                    stmt.close();\n                }\n                if(con != null && !con.isClosed()) {\n                    con.close();\n                }\n            }catch(Exception e){\n                LogUtil.error(appDef.toString(), e, \"Error closing DB connection\");\n            }\n            \n        }\n    \n    \n    \n    \n    return rows;\n}\nreturn store(element, rows, formData);",
                "useAjax": ""
            }
        },
        "tableName": "processos"
    }
}