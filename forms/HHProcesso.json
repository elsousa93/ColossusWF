{
    "className": "org.joget.apps.form.model.Form",
    "elements": [
        {
            "className": "org.joget.apps.form.model.Section",
            "elements": [{
                "className": "org.joget.apps.form.model.Column",
                "elements": [
                    {
                        "className": "org.joget.plugin.enterprise.MultiPagedForm",
                        "properties": {
                            "ajaxMode": "",
                            "css": "p {\n    display: inline;\n    position: relative;\n    top: -52px;\n    left: 320px;\n    color: #777!important;\n}\n\ndiv#section-actions {\n    width: 75%;\n    position: relative;\n    top: -121px;\n    left: 250px;\n    padding-bottom: 0px!important;\n}\n\ni.page-button-prev.btn.button.waves-input-wrapper.waves-effect.btn.waves-button.waves-float {\n    background-color: #67a168!important;\n}\n\ni.page-button-next.btn.button.waves-input-wrapper.waves-effect.btn.waves-button.waves-float {\n    background-color: #67a168!important;\n}\n\n.panel.panel-default.formRecordLockContainer {\n    height: 48px!important;\n    margin: 0px!important;\n    padding: 0px!important;\n}\n\n.panel-heading {\n    background-color: #EAEE7A!important;\n}\n\n/* borda_exterior-formulários */ \nbody #form-canvas .form-section {\n  padding-bottom: 100px;\n}\n\nh4.panel-title {\n    color: #777;\n}\n\n.page-container {\n    min-height: 500px;\n}",
                            "displayMode": "wizard",
                            "id": "multiPagedHH",
                            "nextButtonlabel": "PRÓXIMO",
                            "numberOfPage": {
                                "className": "4",
                                "properties": {
                                    "page1_formDefId": "detalheProcessoHH",
                                    "page1_label": "Detalhe do Processo",
                                    "page1_parentSubFormId": "detalhe_processo",
                                    "page1_readonly": "",
                                    "page1_readonlyLabel": "",
                                    "page1_subFormParentId": "",
                                    "page1_validate": "true",
                                    "page2_formDefId": "tomadaConhecimentoHH",
                                    "page2_label": "Tomada de Conhecimento",
                                    "page2_parentSubFormId": "tomada_conhecimento",
                                    "page2_readonly": "",
                                    "page2_readonlyLabel": "",
                                    "page2_subFormParentId": "id_processo",
                                    "page2_validate": "",
                                    "page3_formDefId": "relacoesdeBensHH",
                                    "page3_label": "Relações de Bem",
                                    "page3_parentSubFormId": "relacoes_bem",
                                    "page3_readonly": "",
                                    "page3_readonlyLabel": "",
                                    "page3_subFormParentId": "id_processo",
                                    "page3_validate": "true",
                                    "page4_formDefId": "analiseFinanceiraHH",
                                    "page4_label": "Análise Financeira",
                                    "page4_parentSubFormId": "analise_financeira",
                                    "page4_readonly": "",
                                    "page4_readonlyLabel": "",
                                    "page4_subFormParentId": "id_processo",
                                    "page4_validate": "true"
                                }
                            },
                            "onlyAllowSubmitOnLastPage": "",
                            "partiallyStore": "true",
                            "prevButtonlabel": "ANTERIOR",
                            "storeMainFormOnPartiallyStore": "true"
                        }
                    },
                    {
                        "className": "org.joget.apps.form.lib.SelectBox",
                        "properties": {
                            "controlField": "",
                            "id": "envio_processo",
                            "label": "Enviar processo para:",
                            "multiple": "",
                            "options": [],
                            "optionsBinder": {
                                "className": "org.joget.apps.form.lib.BeanShellFormBinder",
                                "properties": {
                                    "cacheInterval": "",
                                    "script": "import org.joget.apps.app.service.AppUtil;\r\nimport org.joget.apps.form.model.Element;\r\nimport org.joget.apps.form.model.Form;\r\nimport org.joget.apps.form.model.FormData;\r\nimport org.joget.apps.form.model.FormRow;\r\nimport org.joget.apps.form.model.FormRowSet;\r\nimport org.joget.apps.form.model.defaultHashVariablePlugin;\r\nimport org.joget.apps.form.service.FormUtil;\r\nimport org.joget.commons.util.LogUtil;\r\nimport java.util.*;\r\n \r\npublic FormRowSet load(Element element, String primaryKey, FormData formData) {\r\n    \r\n    FormRowSet rows = new FormRowSet();\r\n    String processDefId = \"#process.processDefId#\";\r\n    String passagem = \"#envVariable.passagem#\";\r\n    int flagFinalHH = 0;\r\n\r\n\r\n\r\n    }if(processDefId.toLowerCase().contains(\"habilitacaoHerdeiros\")){\r\n      flagFinalHH =1;\r\n    }\r\n\r\n    \r\n        //add filtro Option\r\n\r\n        \r\n        //add blank Option\r\n        FormRow option = new FormRow();\r\n        option.setProperty(FormUtil.PROPERTY_VALUE, \"\");\r\n        option.setProperty(FormUtil.PROPERTY_LABEL, \"\");\r\n        rows.add(option);\r\n        \r\n        //add Contratacao Option\r\n        if(flagFinalHH  == 1){\r\n            FormRow option = new FormRow();\r\n            option.setProperty(FormUtil.PROPERTY_VALUE, \"final\");\r\n            option.setProperty(FormUtil.PROPERTY_LABEL, \"Concluir\");\r\n            rows.add(option);\r\n        }\r\n        \r\n      \r\n     \r\n    return rows;\r\n}\r\n \r\n//call load method with injected variable\r\nreturn load(element, primaryKey, formData);",
                                    "useAjax": ""
                                }
                            },
                            "permission_rules": {
                                "3b4737b8-9f04-a406-1394-9be597a75957": {},
                                "4bd6a8aa-5603-0d51-6888-3adc2bc6cabf": {},
                                "5eaec58e-2e36-622b-6e03-4fd4d359d06d": {},
                                "a1f6b019-57c1-5d37-ff5e-d49298113548": {}
                            },
                            "readonly": "",
                            "readonlyLabel": "",
                            "size": "",
                            "validator": {
                                "className": "org.joget.apps.form.lib.BeanShellValidator",
                                "properties": {
                                    "decoration": "*",
                                    "script": "import java.util.Arrays;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport org.joget.apps.form.model.Element;\r\nimport org.joget.apps.form.model.Form;\r\nimport org.joget.apps.form.model.FormData;\r\nimport org.joget.apps.form.service.FormUtil;\r\nimport org.joget.commons.util.LogUtil;\r\n  \r\npublic boolean validate(Element element, FormData formData, String[] fileUploadValues){\r\n    \r\n    //Get value from workflow variable\r\n    String flagvalidate = \"#variable.flag_ultima_atividade#\";\r\n    \r\n    boolean result = true;\r\n    \r\n    //Only validate if it is the last activity of the subflow\r\n    if(flagvalidate.equals(\"1\")){\r\n        \r\n        //Configure field to validate - UPDATE HERE\r\n        String fieldId = \"envio_processo\";\r\n        \r\n        //Get element value\r\n        Form form = FormUtil.findRootForm(element);\r\n        Element field = FormUtil.findElement(fieldId, form, formData);\r\n        String fieldValue = FormUtil.getElementPropertyValue(field, formData);\r\n        \r\n        //If element is not filled give error message\r\n        if (fieldValue == null || fieldValue.equals(\"\")){\r\n            String id = FormUtil.getElementParameterName(element);\r\n            formData.addFormError(id, \"Campo obrigatório\");\r\n            result = false;\r\n        }else{\r\n            result = true;\r\n        }\r\n    }else{\r\n        result = true;\r\n    }\r\n\r\n    return result;\r\n\r\n}\r\n\r\n//call validate method with injected variable\r\nreturn validate(element, formData, values);"
                                }
                            },
                            "value": "",
                            "workflowVariable": "proxima_operativa"
                        }
                    },
                    {
                        "className": "org.joget.apps.form.lib.CustomHTML",
                        "properties": {
                            "autoPopulate": "",
                            "id": "logica_fases_processo",
                            "label": "",
                            "value": "<script>\n\n    $(document).change(function(){\n        var faseProcesso = $(\"select[id*=_faseProcesso]\").val();\n        var faseProcesso2 = '#form.detalhe_proce_hh.faseProcesso[{form.processos_hh.detalhe_processo}]#';\n        console.log('CCCC' + faseProcesso);\n         $(\"button[rel=2]\").hide();\n         $(\"button[rel=3]\").hide();\n         $(\"button[rel=4]\").hide();\n        if(faseProcesso === \"TC\"){\n            $(\"button[rel=2]\").show();\n            $(\"button[rel=3]\").hide();\n            $(\"button[rel=4]\").hide();\n        }else if(faseProcesso === \"RB\"){\n            $(\"button[rel=2]\").hide();\n            $(\"button[rel=3]\").show();\n            $(\"button[rel=4]\").hide();\n        }else if(faseProcesso === \"AF\"){\n            $(\"button[rel=2]\").hide();\n            $(\"button[rel=3]\").hide();\n            $(\"button[rel=4]\").show();\n        } \n        \n        \n  });\n\n<\/script>\n\n"
                        }
                    }
                ],
                "properties": {"width": "100%"}
            }],
            "properties": {
                "comment": "",
                "id": "section1",
                "join": "",
                "label": "",
                "loadBinder": {
                    "className": "",
                    "properties": {}
                },
                "permission": {
                    "className": "",
                    "properties": {}
                },
                "permissionReadonly": "",
                "readonly": "",
                "readonlyLabel": "",
                "regex": "",
                "reverse": "",
                "storeBinder": {
                    "className": "",
                    "properties": {}
                },
                "visibilityControl": "",
                "visibilityValue": ""
            }
        },
        {
            "className": "org.joget.apps.form.model.Section",
            "elements": [{
                "className": "org.joget.apps.form.model.Column",
                "elements": [{
                    "className": "org.joget.apps.form.lib.CustomHTML",
                    "properties": {
                        "autoPopulate": "",
                        "id": "field2",
                        "label": "",
                        "value": "<script>\n\n//Alterar labels de botões\n$(document).ready(function(){\n    $(\"input#assignmentComplete\").val(\"CONCLUIR\");\n    $(\"input#saveAsDraft\").val(\"GUARDAR\");\n    $(\"button#cancel\").html(\"CANCELAR\");\n     \n    var mode = \"#requestParam._mode#\";\n    if(mode=='edit'){\n        $(\"button#cancel\").html(\"VOLTAR\");\n    }\n    \n     $( \"form\" ).submit(function(){\n        var btnVal = $(document.activeElement).val();\n        if(btnVal === 'GUARDAR'){\n            window.sessionStorage.setItem(\"button\", \"guardar\");\n        }\n         \n         \n         \n     });\n});\n\n<\/script>\n"
                    }
                }],
                "properties": {"width": "100%"}
            }],
            "properties": {
                "comment": "",
                "id": "section2",
                "join": "",
                "label": "",
                "loadBinder": {
                    "className": "",
                    "properties": {}
                },
                "permission": {
                    "className": "",
                    "properties": {}
                },
                "permissionReadonly": "",
                "readonly": "",
                "readonlyLabel": "",
                "regex": "",
                "reverse": "",
                "storeBinder": {
                    "className": "",
                    "properties": {}
                },
                "visibilityControl": "",
                "visibilityValue": ""
            }
        }
    ],
    "properties": {
        "description": "",
        "id": "HHProcesso",
        "loadBinder": {
            "className": "org.joget.apps.form.lib.WorkflowFormBinder",
            "properties": {}
        },
        "name": "HH - Processo",
        "noPermissionMessage": "",
        "permission": {
            "className": "",
            "properties": {}
        },
        "postProcessor": {
            "className": "",
            "properties": {}
        },
        "postProcessorRunOn": "create",
        "storeBinder": {
            "className": "org.joget.apps.form.lib.WorkflowFormBinder",
            "properties": {}
        },
        "tableName": "processos_hh"
    }
}