{
    "className": "org.joget.apps.form.model.Form",
    "elements": [{
        "className": "org.joget.apps.form.model.Section",
        "elements": [{
            "className": "org.joget.apps.form.model.Column",
            "elements": [
                {
                    "className": "org.joget.apps.form.lib.HiddenField",
                    "properties": {
                        "id": "id_processo",
                        "useDefaultWhenEmpty": "",
                        "validator": {
                            "className": "",
                            "properties": {}
                        },
                        "value": "",
                        "workflowVariable": ""
                    }
                },
                {
                    "className": "org.joget.apps.form.lib.TextField",
                    "properties": {
                        "encryption": "",
                        "id": "n_processo",
                        "label": "Número do Processo",
                        "maxlength": "",
                        "permissionHidden": "",
                        "permission_rules": {},
                        "placeholder": "",
                        "readonly": "",
                        "readonlyLabel": "",
                        "size": "",
                        "storeNumeric": "",
                        "style": "",
                        "validator": {
                            "className": "",
                            "properties": {}
                        },
                        "value": "",
                        "workflowVariable": ""
                    }
                },
                {
                    "className": "org.joget.apps.form.lib.TextField",
                    "properties": {
                        "encryption": "",
                        "id": "n_agenda",
                        "label": "Número Workflow PL",
                        "maxlength": "",
                        "permissionHidden": "",
                        "placeholder": "",
                        "readonly": "",
                        "readonlyLabel": "",
                        "size": "",
                        "storeNumeric": "",
                        "style": "",
                        "validator": {
                            "className": "",
                            "properties": {}
                        },
                        "value": "",
                        "workflowVariable": ""
                    }
                },
                {
                    "className": "org.joget.apps.form.lib.TextField",
                    "properties": {
                        "encryption": "",
                        "id": "n_wf_agenda",
                        "label": "Número Agenda",
                        "maxlength": "",
                        "permissionHidden": "",
                        "placeholder": "",
                        "readonly": "true",
                        "readonlyLabel": "",
                        "size": "",
                        "storeNumeric": "",
                        "style": "",
                        "validator": {
                            "className": "",
                            "properties": {}
                        },
                        "value": "",
                        "workflowVariable": ""
                    }
                },
                {
                    "className": "org.joget.apps.form.lib.SelectBox",
                    "properties": {
                        "controlField": "banco_fundo",
                        "id": "tipo_processo",
                        "label": "Tipo de processo",
                        "multiple": "",
                        "options": [],
                        "optionsBinder": {
                            "className": "org.joget.apps.form.lib.BeanShellFormBinder",
                            "properties": {
                                "cacheInterval": "",
                                "script": "import org.joget.apps.app.service.AppUtil;\r\nimport org.joget.apps.form.model.Element;\r\nimport org.joget.apps.form.model.FormData;\r\nimport org.joget.apps.form.model.FormRow;\r\nimport org.joget.apps.form.model.FormRowSet;\r\nimport org.joget.apps.form.model.FormStoreBinder;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport javax.sql.DataSource;\r\nimport org.joget.apps.form.service.FormUtil;\r\nimport org.joget.apps.app.model.AppDefinition;\r\nimport org.joget.commons.util.LogUtil;\r\n\r\n \r\npublic FormRowSet load(String[] values) {\r\n\r\n    FormRowSet rows = new FormRowSet();\r\n    \r\n    FormRow option = new FormRow();\r\n    option.setProperty(FormUtil.PROPERTY_VALUE, \"\");\r\n    option.setProperty(FormUtil.PROPERTY_LABEL, \"\");\r\n    rows.add(option);\r\n    \r\n    String banco = null;\r\n    if (values != null && values.length > 0) {\r\n        banco = \"%\" + values[0] + \"%\";\r\n    \r\n        Connection con = null;\r\n        PreparedStatement stmt = null;\r\n        ResultSet rs = null;\r\n        String origem_value = \"\";\r\n        String origem_label = \"\";\r\n        \r\n        AppDefinition appDef = AppUtil.getCurrentAppDefinition();\r\n        \r\n        try{\r\n                DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\"setupDataSource\");\r\n                con = ds.getConnection();\r\n                \r\n                \r\n                if(!con.isClosed()){\r\n                    \r\n                    //Verificar o utilizador atribuido e atualizar caso esteja errado\r\n                    String query=\"SELECT c_value, c_label FROM app_fd_listas_de_valores WHERE c_nome_campo = ? AND c_banco LIKE ? AND c_servico LIKE '%PROCU%';\";\r\n                    stmt = con.prepareStatement(query);\r\n                    stmt.setObject(1, \"tipo_processo\");\r\n                    stmt.setObject(2, banco);\r\n                    rs = stmt.executeQuery();\r\n                    \r\n                    while(rs.next()){\r\n                        origem_value = rs.getString(1);\r\n                        origem_label = rs.getString(2);\r\n                        \r\n                        FormRow option = new FormRow();\r\n                        option.setProperty(FormUtil.PROPERTY_VALUE, origem_value);\r\n                        option.setProperty(FormUtil.PROPERTY_LABEL, origem_label);\r\n                        \r\n                        rows.add(option);\r\n                        \r\n                    }\r\n                }\r\n                \r\n        }catch(Exception e){\r\n            LogUtil.error(\"Importa processo - origem de processo\", e, \"Error getting info from DB\");\r\n        }finally{\r\n            try{\r\n                if(rs != null){\r\n                rs.close();\r\n                }\r\n                if(stmt != null){\r\n                    stmt.close();\r\n                }\r\n                if(con != null && !con.isClosed()) {\r\n                    con.close();\r\n                }\r\n            }catch(Exception e){\r\n                LogUtil.error(\"Importa processo - origem de processo\", e, \"Error closing DB connection\");\r\n            }\r\n            \r\n        }\r\n        \r\n    }\r\n\r\n    return rows;\r\n}\r\n \r\n//call load method with injected variable\r\nreturn load(values);",
                                "useAjax": "true"
                            }
                        },
                        "permissionHidden": "",
                        "permission_rules": {},
                        "readonly": "true",
                        "readonlyLabel": "",
                        "size": "",
                        "validator": {
                            "className": "",
                            "properties": {}
                        },
                        "value": "",
                        "workflowVariable": ""
                    }
                },
                {
                    "className": "org.joget.apps.form.lib.SelectBox",
                    "properties": {
                        "controlField": "",
                        "id": "estado",
                        "label": "Estado",
                        "multiple": "",
                        "options": [],
                        "optionsBinder": {
                            "className": "org.joget.apps.form.lib.FormOptionsBinder",
                            "properties": {
                                "addEmptyOption": "true",
                                "cacheInterval": "",
                                "emptyLabel": "",
                                "extraCondition": "c_nome_campo = 'estado_processo' AND e.customProperties.servico LIKE '%PROCU%'",
                                "formDefId": "adicionarOpcaoLV",
                                "groupingColumn": "",
                                "idColumn": "value",
                                "labelColumn": "label",
                                "useAjax": ""
                            }
                        },
                        "permissionHidden": "",
                        "readonly": "true",
                        "readonlyLabel": "",
                        "size": "",
                        "validator": {
                            "className": "",
                            "properties": {}
                        },
                        "value": "",
                        "workflowVariable": ""
                    }
                },
                {
                    "className": "org.joget.apps.form.lib.SelectBox",
                    "properties": {
                        "controlField": "",
                        "id": "banco_fundo",
                        "label": "Banco/Fundo",
                        "multiple": "",
                        "options": [],
                        "optionsBinder": {
                            "className": "org.joget.apps.form.lib.FormOptionsBinder",
                            "properties": {
                                "addEmptyOption": "true",
                                "cacheInterval": "",
                                "emptyLabel": "",
                                "extraCondition": "c_nome_campo = 'nome_banco' AND e.customProperties.servico LIKE '%PROCU%'",
                                "formDefId": "adicionarOpcaoLV",
                                "groupingColumn": "",
                                "idColumn": "value",
                                "labelColumn": "label",
                                "useAjax": ""
                            }
                        },
                        "permissionHidden": "",
                        "permission_rules": {},
                        "readonly": "true",
                        "readonlyLabel": "",
                        "size": "",
                        "validator": {
                            "className": "",
                            "properties": {}
                        },
                        "value": "",
                        "workflowVariable": ""
                    }
                },
                {
                    "className": "org.joget.apps.form.lib.Radio",
                    "properties": {
                        "controlField": "",
                        "id": "originais",
                        "label": "Tem Originais?",
                        "options": [
                            {
                                "grouping": "",
                                "label": "Sim",
                                "value": "SIM"
                            },
                            {
                                "grouping": "",
                                "label": "Não",
                                "value": "NAO"
                            }
                        ],
                        "optionsBinder": {
                            "className": "",
                            "properties": {}
                        },
                        "permissionHidden": "",
                        "readonly": "true",
                        "readonlyLabel": "",
                        "validator": {
                            "className": "",
                            "properties": {}
                        },
                        "value": "",
                        "workflowVariable": ""
                    }
                },
                {
                    "className": "org.joget.apps.form.lib.DatePicker",
                    "properties": {
                        "allowManual": "",
                        "currentDateAs": "",
                        "dataFormat": "yyyy-MM-dd",
                        "datePickerType": "dateTime",
                        "endDateFieldId": "",
                        "format": "",
                        "format24hr": "true",
                        "id": "data_conclusao",
                        "label": "Data de Conclusão",
                        "permissionHidden": "",
                        "placeholder": "",
                        "readonly": "",
                        "readonlyLabel": "",
                        "startDateFieldId": "",
                        "validator": {
                            "className": "",
                            "properties": {}
                        },
                        "value": "",
                        "workflowVariable": "",
                        "yearRange": "c-10:c+10"
                    }
                },
                {
                    "className": "org.joget.apps.form.lib.CustomHTML",
                    "properties": {
                        "autoPopulate": "",
                        "id": "field8",
                        "label": "",
                        "value": "<script>\n    $(document).ready(function(){\n        var dataConclusao = \"#form.conclusao_procu.data_conclusao[{form.processos_procu.conclusao}]#\";\n        $(\"input[id*=data_conclusao]\").attr('readonly', 'readonly');\n        if(dataConclusao != ''){\n            $(\"input[id*=data_conclusao]\").datepicker(\"setDate\", new Date(dataConclusao) );\n        }\n        $(\"input[id*=data_conclusao]\").datepicker('disable');\n        $(\"a.close-icon\").css('display','none');\n        \n        var nWfAgenda = \"#form.agendamento_procu.n_wf_agendamento[{form.processos_procu.agendamento}]#\";\n        $(\"input[id*=n_wf_agenda]\").val(nWfAgenda);\n        \n        \n        //Verificar Data de Outorga para iniciar sla\n        \n        verificarDataOutorga();\n        \n        \n    });\n    \n    \n    function verificarDataOutorga(){\n        \n        var idSubProcesso = \"#assignment.processId#\";\n        $.ajax({\n            type:\"GET\",\n            url: \"/jw/api/list/list_atos_dia_procu?processId=\"+ idSubProcesso,\n            headers:{\n                \"api_id\": \"#envVariable.apiIdComunicacaoMediaView#\",\n                \"api_key\": \"#envVariable.apiKeyComunicacaoMediaView#\",\n                \"Accept\":\"application/json\",\n                \"Content-Type\": \"application/json\"\n            },\n            success: function(response){\n                console.log(\"AAAAAAAAA\"+response.size);\n                \n                //Caso exista um Ato 'AGD' ou 'ACOM' com data de outorga >= data atual \n                if(response.size > 0){\n                    verificarSLA();\n                }\n                \n            }\n              \n          });\n        \n        \n        \n    }\n    \n    \n    function verificarSLA(){\n         var idSubProcesso = \"#assignment.processId#\";\n          $.ajax({\n            type:\"GET\",\n            url: \"/jw/api/list/listSLA?id_processo=\"+idSubProcesso+\"&estado_atividade=Em%20curso\",\n            headers:{\n                \"api_id\": \"#envVariable.apiIdAtualizarCampos#\",\n                \"api_key\": \"#envVariable.apiKeyAtualizarCampos#\",\n                \"Accept\":\"application/json\",\n                \"Content-Type\": \"application/json\"\n            },\n            success: function(response){\n                console.log(\"AAAAAAAAA\"+response.size);\n                \n                //Se não existir nenhum SLA 'Em curso'\n                if(response.size == 0){\n                    //iniciarSLA();\n                    \n                }else{\n                    var id = response.data[0].id;\n                    closeSLA(id);\n                    \n                    console.log(id);\n                    \n                }\n            }\n        });\n    }\n    \n    function iniciarSLA(){\n        \n    }\n    \n    function closeSLA(id){\n      \n        var now = \"#date.yyyy-MM-dd HH:mm#\";\n        $.ajax({\n            type:\"POST\",\n            url: \"/jw/api/form/slaAtividade/saveOrUpdate\",\n            headers:{\n                \"api_id\": \"#envVariable.apiIdAtualizarCampos#\",\n                \"api_key\": \"#envVariable.apiKeyAtualizarCampos#\",\n                \"Accept\":\"application/json\",\n                \"Content-Type\": \"application/json\"\n            },\n            data: JSON.stringify({\n                    \"id\": id,\n                    \"estado_atividade\": \"Fechada\",\n                    \"data_conclusao\": now\n                }),\n            success: function(response){\n                iniciarSLA();\n            }\n        \n        });\n          \n    }\n    \n    \n<\/script>"
                    }
                }
            ],
            "properties": {"width": "100%"}
        }],
        "properties": {
            "comment": "",
            "id": "section1_1",
            "join": "",
            "label": "Resumo",
            "loadBinder": {
                "className": "",
                "properties": {}
            },
            "permission": {
                "className": "",
                "properties": {}
            },
            "permissionHidden": "",
            "permissionReadonly": "",
            "readonly": "",
            "readonlyLabel": "",
            "regex": "",
            "reverse": "",
            "storeBinder": {
                "className": "",
                "properties": {}
            },
            "visibilityControl": "",
            "visibilityValue": ""
        }
    }],
    "properties": {
        "description": "",
        "id": "resumoProcuradoria",
        "loadBinder": {
            "className": "org.joget.apps.form.lib.BeanShellFormBinder",
            "properties": {
                "autoHandleFiles": "",
                "autoHandleWorkflowVariable": "true",
                "cacheInterval": "",
                "script": "import java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport javax.sql.DataSource;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport org.joget.apps.form.model.Element;\r\nimport org.joget.apps.form.model.FormData;\r\nimport org.joget.apps.form.model.FormRow;\r\nimport org.joget.apps.form.model.FormRowSet;\r\nimport org.joget.commons.util.LogUtil;\r\n   \r\npublic FormRowSet load(Element element, String primaryKey, FormData formData) {\r\n    FormRowSet rows = new FormRowSet();\r\n    if (primaryKey != null && !primaryKey.isEmpty()) {\r\n\r\n        Connection con = null;\r\n        try {\r\n            // retrieve connection from the default datasource\r\n            DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\"setupDataSource\");\r\n            con = ds.getConnection();\r\n          \r\n            // execute SQL query\r\n            if(!con.isClosed()) {\r\n                PreparedStatement stmt = con.prepareStatement(\"SELECT c_id_processo, c_n_processo, c_n_agenda, c_n_wf_agenda, c_tipo_processo, c_estado, c_banco_fundo, c_originais, c_data_conclusao from app_fd_detalhe_proce_procu where id=?\");\r\n                stmt.setObject(1, primaryKey);\r\n                ResultSet rs = stmt.executeQuery();\r\n                while (rs.next()) {\r\n                    FormRow row = new FormRow();\r\n\r\n                    row.setProperty(\"id_processo\", (rs.getObject(\"c_id_processo\") != null)?rs.getObject(\"c_id_processo\").toString():\"\");\r\n                    row.setProperty(\"n_processo\", (rs.getObject(\"c_n_processo\") != null)?rs.getObject(\"c_n_processo\").toString():\"\");\r\n                    row.setProperty(\"n_agenda\", (rs.getObject(\"c_n_agenda\") != null)?rs.getObject(\"c_n_agenda\").toString():\"\");\r\n                    row.setProperty(\"n_wf_agenda\", (rs.getObject(\"c_n_wf_agenda\") != null)?rs.getObject(\"c_n_wf_agenda\").toString():\"\");\r\n                    row.setProperty(\"tipo_processo\", (rs.getObject(\"c_tipo_processo\") != null)?rs.getObject(\"c_tipo_processo\").toString():\"\");\r\n                    row.setProperty(\"estado\", (rs.getObject(\"c_estado\") != null)?rs.getObject(\"c_estado\").toString():\"\");\r\n                    row.setProperty(\"banco_fundo\", (rs.getObject(\"c_banco_fundo\") != null)?rs.getObject(\"c_banco_fundo\").toString():\"\");\r\n                    row.setProperty(\"originais\", (rs.getObject(\"c_originais\") != null)?rs.getObject(\"c_originais\").toString():\"\");\r\n                    row.setProperty(\"data_conclusao\", (rs.getObject(\"c_data_conclusao\") != null)?rs.getObject(\"c_data_conclusao\").toString():\"\");\r\n                    \r\n                    \r\n                    \r\n                     \r\n                    rows.add(row);\r\n                    break;\r\n                }\r\n            }\r\n        } catch(Exception e) {\r\n            LogUtil.error(\"Load Binder - Resumo Procuradoria\", e, \"Error loading user data in load binder\");\r\n        } finally {\r\n            //always close the connection after used\r\n            try {\r\n                if(con != null) {\r\n                    con.close();\r\n                }\r\n            } catch(SQLException e) {/* ignored */}\r\n        }\r\n    }\r\n    return rows;\r\n}\r\n   \r\n//call load method with injected variable\r\nreturn load(element, primaryKey, formData);",
                "useAjax": ""
            }
        },
        "name": "Procuradoria - Resumo Processo",
        "noPermissionMessage": "",
        "permission": {
            "className": "",
            "properties": {}
        },
        "postProcessor": {
            "className": "",
            "properties": {}
        },
        "postProcessorRunOn": "create",
        "storeBinder": {
            "className": "org.joget.apps.form.lib.WorkflowFormBinder",
            "properties": {}
        },
        "tableName": "detalhe_proce_procu"
    }
}