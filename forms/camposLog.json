{
    "className": "org.joget.apps.form.model.Form",
    "elements": [{
        "className": "org.joget.apps.form.model.Section",
        "elements": [{
            "className": "org.joget.apps.form.model.Column",
            "elements": [
                {
                    "className": "org.joget.apps.form.lib.SelectBox",
                    "properties": {
                        "controlField": "",
                        "id": "formulario",
                        "label": "Formul치rio",
                        "multiple": "",
                        "options": [
                            {
                                "grouping": "",
                                "label": "Processo",
                                "value": "detalhe_processo"
                            },
                            {
                                "grouping": "",
                                "label": "Banco",
                                "value": "banco"
                            },
                            {
                                "grouping": "",
                                "label": "An치lise Banc치ria",
                                "value": "anal_banc_processo"
                            },
                            {
                                "grouping": "",
                                "label": "An치lise Legal",
                                "value": "anal_legal_processo"
                            }
                        ],
                        "optionsBinder": {
                            "className": "",
                            "properties": {}
                        },
                        "readonly": "",
                        "readonlyLabel": "",
                        "size": "",
                        "validator": {
                            "className": "",
                            "properties": {}
                        },
                        "value": "",
                        "workflowVariable": ""
                    }
                },
                {
                    "className": "org.joget.apps.form.lib.SelectBox",
                    "properties": {
                        "controlField": "formulario",
                        "id": "campo",
                        "label": "Campo",
                        "multiple": "",
                        "options": [],
                        "optionsBinder": {
                            "className": "org.joget.apps.form.lib.BeanShellFormBinder",
                            "properties": {
                                "cacheInterval": "",
                                "script": "import java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport javax.sql.DataSource;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport org.joget.apps.form.model.Element;\r\nimport org.joget.apps.form.model.FormData;\r\nimport org.joget.apps.form.model.FormRow;\r\nimport org.joget.apps.form.model.FormRowSet;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.form.model.Form;\r\nimport org.joget.apps.form.model.defaultHashVariablePlugin;\r\nimport org.joget.apps.form.service.FormUtil;\r\nimport java.util.Collection;\r\nimport org.joget.apps.form.dao.FormDataDao;\r\n\r\n \r\npublic FormRowSet load(String[] values) {\r\n    \r\n    FormRowSet rows = new FormRowSet();\r\n    Connection con = null;\r\n    \r\n    //set value of formulario based on dependency value\r\n    String formulario = \"\";\r\n    \r\n    \r\n    if (values != null && values.length > 0) {\r\n        formulario = values[0];\r\n    }\r\n    \r\n    FormDataDao formDataDao = (FormDataDao) AppUtil.getApplicationContext().getBean(\"formDataDao\");\r\n    HashSet map =formDataDao.getFormDefinitionColumnNames(formulario);\r\n    \r\n    AppDefinition appDef = AppUtil.getCurrentAppDefinition();\r\n    FormDefinition formDef = formDefinitionDao.loadById(\"detalhe_processo\", appDef);\r\n    String formJson = formDef.getJson();\r\n    Form form = (Form) formService.createElementFromJson(formJson, false);\r\n    \r\n    Element element = FormUtil.findElement(\"nome_cliente\", form, null, true);\r\n    String label = element.getPropertyString(FormUtil.PROPERTY_LABEL);\r\n    \r\n     LogUtil.info(\"LABEL\", \"------- \" + label);\r\n    \r\n    if(formulario.isEmpty()){\r\n        FormRow option = new FormRow();\r\n        option.setProperty(FormUtil.PROPERTY_VALUE, \"\");\r\n        option.setProperty(FormUtil.PROPERTY_LABEL, \"\");\r\n        rows.add(option);\r\n    }else{\r\n        \r\n        for(String field : map){\r\n            LogUtil.info(\"Campo\", \" \" + field);\r\n            FormRow option = new FormRow();\r\n            option.setProperty(FormUtil.PROPERTY_VALUE, field);\r\n            option.setProperty(FormUtil.PROPERTY_LABEL, field);\r\n            rows.add(option);\r\n        }\r\n        \r\n    }\r\n    \r\n    \r\n    /**Data Base Connection**/\r\n    /*\r\n    String formTable= \"app_fd_\" + formulario;\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\"setupDataSource\");\r\n        con = ds.getConnection();\r\n       \r\n       if(!con.isClosed()){\r\n            String query = \"SELECT column_name FROM information_schema.columns WHERE table_schema='jwdb' AND  table_name=?\"; \r\n            PreparedStatement stmt = con.prepareStatement(query);\r\n            stmt.setObject(1, formTable);\r\n            ResultSet rs = stmt.executeQuery();\r\n            while (rs.next()) {\r\n                FormRow option = new FormRow();\r\n                option.setProperty(FormUtil.PROPERTY_VALUE, rs.getObject(\"column_name\").toString());\r\n                option.setProperty(FormUtil.PROPERTY_LABEL, rs.getObject(\"column_name\").toString());\r\n                rows.add(option);\r\n           }\r\n        } else {\r\n     \r\n            System.out.println(\"Connection Problem\");\r\n        }\r\n           \r\n        \r\n        con.close();\r\n    */\r\n\r\n    return rows;\r\n}\r\n \r\n//call load method with injected variable\r\nreturn load(values);",
                                "useAjax": "true"
                            }
                        },
                        "readonly": "",
                        "readonlyLabel": "",
                        "size": "",
                        "validator": {
                            "className": "",
                            "properties": {}
                        },
                        "value": "",
                        "workflowVariable": ""
                    }
                }
            ],
            "properties": {"width": "100%"}
        }],
        "properties": {
            "id": "section1",
            "label": "Section"
        }
    }],
    "properties": {
        "description": "",
        "id": "camposLog",
        "loadBinder": {"className": "org.joget.apps.form.lib.WorkflowFormBinder"},
        "name": "Campos Log",
        "storeBinder": {"className": "org.joget.apps.form.lib.WorkflowFormBinder"},
        "tableName": "campos_log"
    }
}