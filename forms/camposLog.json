{
    "className": "org.joget.apps.form.model.Form",
    "elements": [{
        "className": "org.joget.apps.form.model.Section",
        "elements": [{
            "className": "org.joget.apps.form.model.Column",
            "elements": [{
                "className": "org.joget.apps.form.lib.SelectBox",
                "properties": {
                    "controlField": "",
                    "id": "campo",
                    "label": "Campos",
                    "multiple": "",
                    "options": [],
                    "optionsBinder": {
                        "className": "org.joget.apps.form.lib.BeanShellFormBinder",
                        "properties": {
                            "cacheInterval": "",
                            "script": "import org.joget.apps.form.model.*;\r\nimport org.joget.apps.form.service.*;\r\nimport java.sql.*;\r\nimport org.apache.commons.collections.SequencedHashMap;\r\nimport java.util.*;\r\n\r\n \r\npublic FormRowSet load(String[] values) {\r\n    \r\n    FormRowSet rows = new FormRowSet();\r\n    \r\n    Class.forName(\"com.mysql.jdbc.Driver\").newInstance();\r\n    con = DriverManager.getConnection(\"jdbc:mysql://http://192.168.0.104:8080/jwdb?characterEncoding=UTF-8\", \"root\", \"\");\r\n   \r\n   if(!con.isClosed()){\r\n        String query = \"\"; \r\n        PreparedStatement stmt = con.prepareStatement(query);\r\n        ResultSet rs = stmt.executeQuery();\r\n        while (rs.next()) {\r\n            FormRow option = new FormRow();\r\n            option.setProperty(FormUtil.PROPERTY_VALUE, rs.getString(1));\r\n            option.setProperty(FormUtil.PROPERTY_LABEL, rs.getString(2));\r\n            rows.add(option);\r\n       }\r\n    } else {\r\n \r\n        System.out.println(\"Connection Problem\");\r\n    }\r\n       \r\n    \r\n    con.close();\r\n    /*\r\n    //set value of formulario based on dependency value\r\n    String formulario = \"\";\r\n    if (values != null && values.length > 0) {\r\n        operativa = values[0];\r\n    }\r\n    if(operativa.isEmpty()){\r\n        FormRow option = new FormRow();\r\n        option.setProperty(FormUtil.PROPERTY_VALUE, \"\");\r\n        option.setProperty(FormUtil.PROPERTY_LABEL, \"\");\r\n        rows.add(option);\r\n    }\r\n\r\n    for(Department d : departmentsList){\r\n        LogUtil.info(\"Select equipa ----->\", \"Equipa: \" + equipa);\r\n        FormRow option = new FormRow();\r\n        option.setProperty(FormUtil.PROPERTY_VALUE, d.getId());\r\n        option.setProperty(FormUtil.PROPERTY_LABEL, d.getName());\r\n        rows.add(option);\r\n    }\r\n    */\r\n    return rows;\r\n}\r\n \r\n//call load method with injected variable\r\nreturn load(values);",
                            "useAjax": ""
                        }
                    },
                    "readonly": "",
                    "readonlyLabel": "",
                    "size": "",
                    "validator": {
                        "className": "",
                        "properties": {}
                    },
                    "value": "",
                    "workflowVariable": ""
                }
            }],
            "properties": {"width": "100%"}
        }],
        "properties": {
            "id": "section1",
            "label": "Section"
        }
    }],
    "properties": {
        "description": "",
        "id": "camposLog",
        "loadBinder": {"className": "org.joget.apps.form.lib.WorkflowFormBinder"},
        "name": "Campos Log",
        "storeBinder": {"className": "org.joget.apps.form.lib.WorkflowFormBinder"},
        "tableName": "campos_log"
    }
}