{
    "className": "org.joget.apps.form.model.Form",
    "elements": [{
        "className": "org.joget.apps.form.model.Section",
        "elements": [{
            "className": "org.joget.apps.form.model.Column",
            "elements": [
                {
                    "className": "org.joget.apps.form.lib.SelectBox",
                    "properties": {
                        "controlField": "",
                        "id": "banco_fundo",
                        "label": "Banco/Fundo",
                        "multiple": "",
                        "options": [],
                        "optionsBinder": {
                            "className": "org.joget.apps.form.lib.FormOptionsBinder",
                            "properties": {
                                "addEmptyOption": "",
                                "cacheInterval": "",
                                "emptyLabel": "",
                                "extraCondition": "c_nome_campo = 'nome_banco' AND e.customProperties.servico LIKE '%PROCU%'",
                                "formDefId": "adicionarOpcaoLV",
                                "groupingColumn": "",
                                "idColumn": "value",
                                "labelColumn": "label",
                                "useAjax": ""
                            }
                        },
                        "readonly": "",
                        "readonlyLabel": "",
                        "size": "",
                        "validator": {
                            "className": "",
                            "properties": {}
                        },
                        "value": "",
                        "workflowVariable": ""
                    }
                },
                {
                    "className": "org.joget.apps.form.lib.TextField",
                    "properties": {
                        "encryption": "",
                        "id": "n_processo",
                        "label": "NÃºmero Processo",
                        "maxlength": "",
                        "placeholder": "",
                        "readonly": "",
                        "readonlyLabel": "",
                        "size": "",
                        "storeNumeric": "",
                        "style": "",
                        "validator": {
                            "className": "",
                            "properties": {}
                        },
                        "value": "",
                        "workflowVariable": ""
                    }
                },
                {
                    "className": "org.joget.apps.form.lib.TextField",
                    "properties": {
                        "encryption": "",
                        "id": "tipo_processo",
                        "label": "Tipo de Processo",
                        "maxlength": "",
                        "placeholder": "",
                        "readonly": "",
                        "readonlyLabel": "",
                        "size": "",
                        "storeNumeric": "",
                        "style": "",
                        "validator": {
                            "className": "",
                            "properties": {}
                        },
                        "value": "",
                        "workflowVariable": ""
                    }
                },
                {
                    "className": "org.joget.apps.form.lib.TextField",
                    "properties": {
                        "encryption": "",
                        "id": "estado",
                        "label": "Estado",
                        "maxlength": "",
                        "placeholder": "",
                        "readonly": "",
                        "readonlyLabel": "",
                        "size": "",
                        "storeNumeric": "",
                        "style": "",
                        "validator": {
                            "className": "",
                            "properties": {}
                        },
                        "value": "",
                        "workflowVariable": ""
                    }
                },
                {
                    "className": "org.joget.apps.form.lib.CustomHTML",
                    "properties": {
                        "autoPopulate": "",
                        "id": "field5",
                        "label": "",
                        "value": "<script>\n    //Flag para reencaminhar para o processo\n     window.sessionStorage.setItem(\"previousPage\", \"importar\");\n<\/script>"
                    }
                }
            ],
            "properties": {"width": "100%"}
        }],
        "properties": {
            "comment": "",
            "id": "section1",
            "join": "",
            "label": "Criar Processo",
            "loadBinder": {
                "className": "",
                "properties": {}
            },
            "permission": {
                "className": "",
                "properties": {}
            },
            "permissionReadonly": "",
            "readonly": "",
            "readonlyLabel": "",
            "regex": "",
            "reverse": "",
            "storeBinder": {
                "className": "",
                "properties": {}
            },
            "visibilityControl": "",
            "visibilityValue": ""
        }
    }],
    "properties": {
        "description": "",
        "id": "criarProcessoProcuradoria",
        "loadBinder": {
            "className": "org.joget.apps.form.lib.WorkflowFormBinder",
            "properties": {}
        },
        "name": "Procuradoria - Criar/Importar Processo",
        "noPermissionMessage": "",
        "permission": {
            "className": "",
            "properties": {}
        },
        "postProcessor": {
            "className": "",
            "properties": {}
        },
        "postProcessorRunOn": "create",
        "storeBinder": {
            "className": "org.joget.apps.form.lib.BeanShellFormBinder",
            "properties": {
                "autoHandleFiles": "",
                "autoHandleWorkflowVariable": "true",
                "cacheInterval": "",
                "script": "import java.util.Map;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collection;\nimport org.joget.apps.app.model.AppDefinition;\nimport org.joget.apps.app.service.AppService;\nimport org.joget.apps.app.service.AppUtil;\nimport org.joget.workflow.model.service.WorkflowManager;\nimport org.joget.workflow.model.WorkflowAssignment;\nimport org.joget.workflow.model.WorkflowProcess;\nimport org.joget.workflow.model.WorkflowProcessResult;\nimport org.joget.workflow.model.WorkflowActivity;\nimport org.joget.apps.form.model.Element;\nimport org.joget.apps.form.service.FormUtil;\nimport org.joget.apps.form.model.FormData;\nimport org.joget.apps.form.model.FormRow;\nimport org.joget.apps.form.model.FormRowSet;\nimport org.joget.commons.util.UuidGenerator;\nimport org.joget.commons.util.LogUtil;\nimport org.joget.workflow.model.service.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport javax.sql.DataSource;\nimport java.time.LocalDateTime; \nimport java.time.format.DateTimeFormatter;\n\n\n\n\npublic FormRowSet storeData(Element element, FormRowSet rows, FormData formData) {\n \n    AppService appService = (AppService) AppUtil.getApplicationContext().getBean(\"appService\");\n    WorkflowManager workflowManager = (WorkflowManager) AppUtil.getApplicationContext().getBean(\"workflowManager\");\n    AppDefinition appDef = AppUtil.getCurrentAppDefinition();\n        \n    try{\n        \n        //check for empty data\n        if (rows == null || rows.isEmpty()) {\n            return rows;\n        }\n        \n        //get value from form to set workflow variables\n        FormRow originalRow = rows.get(0);\n        banco_fundo = originalRow.getProperty(\"banco_fundo\");\n        numeroProcesso = originalRow.getProperty(\"n_processo\");\n        tipoProcesso = originalRow.getProperty(\"tipo_processo\");\n        estado = originalRow.getProperty(\"estado\");\n        \n        //start process with variables\n        Map variables = new HashMap();\n        \n        //get process\n        WorkflowProcess process = appService.getWorkflowProcessForApp(appDef.getAppId(), appDef.getVersion().toString(), \"PCDProcuradoria\");\n        //start process\n        WorkflowProcessResult result = workflowManager.processStart(process.getId(), variables);\n        //get process id\n        processId = result.getProcess().getInstanceId();\n        \n        \n        FormRowSet multipagedForms = new FormRowSet();\n        FormRow formPrimaryKey = new FormRow();\n        \n        //definition of the fields of table processos where to store each generated primary key\n        String[] fieldIds = {\"detalhe_processo\", \"agendamento\", \"documentos\"};\n        //definition of the formIds that correspond to the pages of the multipage form\n        String[] formIds = {\"detalheProcessoProcuradoria\", \"agendamentoProcuradoria\", \"ficheirosProcuradoria\"};\n        \n        for(int i = 0; i < fieldIds.length; i++){\n            String foreignKey = UuidGenerator.getInstance().getUuid();\n            formPrimaryKey.setProperty(fieldIds[i], foreignKey);\n            \n            FormRowSet newRows = new FormRowSet();\n            FormRow newRow = new FormRow();\n            if(fieldIds[i].equals(\"detalhe_processo\") ){\n                newRow.put(\"banco_fundo\", banco_fundo);\n                newRow.put(\"n_processo\", numeroProcesso);\n                newRow.put(\"tipo_processo\", tipoProcesso);\n                newRow.put(\"estado\", estado);\n            }else if(fieldIds[i].equals(\"agendamento\") ){\n                    \n            }else if(fieldIds[i].equals(\"documentos\") ){\n                    \n            }\n            newRow.setProperty(\"id_processo\", processId);\n            newRows.add(newRow);\n            storeToOtherFormDataTable(appDef, element, newRows, formData, formIds[i], foreignKey);\n        }\n        multipagedForms.add(formPrimaryKey);\n        storeToOtherFormDataTable(appDef, element, multipagedForms, formData, \"procuradoria\", processId);\n        \n        \n        \n    }catch(Exception e){\n        LogUtil.error(appDef.toString(), e, \"Error creating process\");\n    }\n    return rows;           \n}\n\npublic void storeToOtherFormDataTable(AppDefinition appDef, Element element, FormRowSet rows, FormData formData, String formId, String id) {\n    try{\n        AppService appService = (AppService) AppUtil.getApplicationContext().getBean(\"appService\");\n        FormRowSet storedInfo = appService.storeFormData(appDef.getId(), appDef.getVersion().toString(), formId, rows, id);\n    }catch(Exception e){\n        LogUtil.error(appDef.toString(), e, \"Error storing data\");\n    }\n    \n}\n\n\n//call execute method with injected variable\nreturn storeData(element, rows, formData);",
                "useAjax": ""
            }
        },
        "tableName": "processos_temp"
    }
}