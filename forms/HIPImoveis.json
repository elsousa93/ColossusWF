{
    "className": "org.joget.apps.form.model.Form",
    "elements": [
        {
            "className": "org.joget.apps.form.model.Section",
            "elements": [{
                "className": "org.joget.apps.form.model.Column",
                "elements": [],
                "properties": {"width": "100%"}
            }],
            "properties": {
                "comment": "",
                "id": "section2",
                "join": "",
                "label": "",
                "loadBinder": {
                    "className": "",
                    "properties": {}
                },
                "permission": {
                    "className": "",
                    "properties": {}
                },
                "permissionReadonly": "",
                "permission_rules": {
                    "63979d93-e2e7-3bfd-2b12-486990df460d": {},
                    "938bf617-2531-b6a0-be1b-acdc2407b563": {},
                    "a612e6c5-4cd0-d548-0179-0522483fca04": {},
                    "d0a23008-b45a-3d4d-5158-c0b1c92f3dc8": {}
                },
                "readonly": "",
                "readonlyLabel": "",
                "regex": "",
                "reverse": "",
                "storeBinder": {
                    "className": "",
                    "properties": {}
                },
                "visibilityControl": "",
                "visibilityValue": ""
            }
        },
        {
            "className": "org.joget.apps.form.model.Section",
            "elements": [{
                "className": "org.joget.apps.form.model.Column",
                "elements": [
                    {
                        "className": "org.joget.apps.form.lib.CustomHTML",
                        "properties": {
                            "autoPopulate": "",
                            "id": "field4",
                            "label": "",
                            "permission_rules": {
                                "63979d93-e2e7-3bfd-2b12-486990df460d": {},
                                "938bf617-2531-b6a0-be1b-acdc2407b563": {},
                                "a612e6c5-4cd0-d548-0179-0522483fca04": {},
                                "d0a23008-b45a-3d4d-5158-c0b1c92f3dc8": {}
                            },
                            "value": "<div class=\"col text-start\">\r\n    <span class=\"material-symbols-rounded md-40\"> house <\/span> \r\n\t<div class = \"subform-section-title\">\r\n\t\t<span>IMOVEIS<\/span>\r\n\t<\/div> \r\n<\/div>"
                        }
                    },
                    {
                        "className": "org.joget.apps.form.lib.HiddenField",
                        "properties": {
                            "id": "id_processo",
                            "permission_rules": {
                                "63979d93-e2e7-3bfd-2b12-486990df460d": {},
                                "938bf617-2531-b6a0-be1b-acdc2407b563": {},
                                "a612e6c5-4cd0-d548-0179-0522483fca04": {},
                                "d0a23008-b45a-3d4d-5158-c0b1c92f3dc8": {}
                            },
                            "useDefaultWhenEmpty": "",
                            "value": "",
                            "workflowVariable": ""
                        }
                    },
                    {
                        "className": "org.joget.apps.form.lib.HiddenField",
                        "properties": {
                            "id": "id_sub_processo",
                            "useDefaultWhenEmpty": "",
                            "validator": {
                                "className": "",
                                "properties": {}
                            },
                            "value": "#process.processId#",
                            "workflowVariable": ""
                        }
                    },
                    {
                        "className": "org.joget.apps.form.lib.Radio",
                        "properties": {
                            "controlField": "",
                            "id": "imovel_banco",
                            "label": "Imóvel do Banco",
                            "options": [
                                {
                                    "grouping": "",
                                    "label": "Sim",
                                    "value": "SIM"
                                },
                                {
                                    "grouping": "",
                                    "label": "Não",
                                    "value": "NAO"
                                },
                                {
                                    "grouping": "",
                                    "label": "Por Validar",
                                    "value": "VAL"
                                }
                            ],
                            "optionsBinder": {
                                "className": "",
                                "properties": {}
                            },
                            "permission_rules": {
                                "0d6bd36c-8423-b830-526f-d71499d72a55": {},
                                "1405d883-3f63-bc1e-7949-1ce7e4457892": {},
                                "276487d8-0482-7519-09fd-807e28473a83": {},
                                "63979d93-e2e7-3bfd-2b12-486990df460d": {
                                    "permissionHidden": "",
                                    "readonly": "true"
                                },
                                "740d9ecd-911b-7df4-474a-0d7f0cf81147": {},
                                "79f8c35b-a7ad-ec7e-b9d8-f656d6176fa7": {},
                                "7cb0a003-f9de-cb30-4a9f-c17080392739": {
                                    "permissionHidden": "",
                                    "readonly": "true"
                                },
                                "7f975a7f-0e81-1fe8-a41b-b5ae7202b9be": {},
                                "8ed12735-d92c-74bd-444f-888db20bd46a": {},
                                "938bf617-2531-b6a0-be1b-acdc2407b563": {
                                    "permissionHidden": "",
                                    "readonly": "true"
                                },
                                "a612e6c5-4cd0-d548-0179-0522483fca04": {},
                                "aea23972-1f73-2c75-befa-3c2288f6d5bb": {},
                                "d0a23008-b45a-3d4d-5158-c0b1c92f3dc8": {}
                            },
                            "readonly": "",
                            "readonlyLabel": "",
                            "validator": {
                                "className": "",
                                "properties": {}
                            },
                            "value": "",
                            "workflowVariable": ""
                        }
                    },
                    {
                        "className": "org.joget.plugin.enterprise.FormGrid",
                        "properties": {
                            "abortRelatedRunningProcesses": "",
                            "deleteFiles": "",
                            "deleteGridData": "",
                            "deleteMessage": "Apagar linha?",
                            "deleteSubformData": "",
                            "disabledAdd": "",
                            "disabledDelete": "",
                            "enableSorting": "",
                            "errorMessage": "Invalid number of rows",
                            "formDefId": "HIPImovel",
                            "height": "85%",
                            "id": "lista_imoveis",
                            "label": "Imóveis",
                            "loadBinder": {
                                "className": "org.joget.plugin.enterprise.MultirowFormBinder",
                                "properties": {
                                    "foreignKey": "imoveis_id",
                                    "formDefId": "HIPImovel"
                                }
                            },
                            "options": [
                                {
                                    "format": "",
                                    "formatType": "text",
                                    "label": "Descrição Predial",
                                    "value": "descricao_predial",
                                    "width": ""
                                },
                                {
                                    "format": "",
                                    "formatType": "text",
                                    "label": "Fração",
                                    "value": "fracao",
                                    "width": ""
                                },
                                {
                                    "format": "",
                                    "formatType": "text",
                                    "label": "Conservatória",
                                    "value": "conservatoria",
                                    "width": ""
                                },
                                {
                                    "format": "",
                                    "formatType": "text",
                                    "label": "Freguesia",
                                    "value": "freguesia",
                                    "width": ""
                                },
                                {
                                    "format": "",
                                    "formatType": "text",
                                    "label": "Valor de Compra e Venda",
                                    "value": "valor_cv",
                                    "width": ""
                                },
                                {
                                    "format": "opcoesDisplayGrid",
                                    "formatType": "options",
                                    "label": "Ação",
                                    "value": "imovel_comprar_hipotecar",
                                    "width": ""
                                },
                                {
                                    "format": "opcoesDisplayGrid",
                                    "formatType": "options",
                                    "label": "Checklist",
                                    "value": "resultado_checklist",
                                    "width": ""
                                }
                            ],
                            "pageSize": "20",
                            "permission_rules": {
                                "63979d93-e2e7-3bfd-2b12-486990df460d": {
                                    "permissionHidden": "",
                                    "readonly": "true"
                                },
                                "938bf617-2531-b6a0-be1b-acdc2407b563": {},
                                "a612e6c5-4cd0-d548-0179-0522483fca04": {},
                                "d0a23008-b45a-3d4d-5158-c0b1c92f3dc8": {}
                            },
                            "readonly": "",
                            "readonlyLabel": "",
                            "showRowNumber": "true",
                            "storeBinder": {
                                "className": "org.joget.plugin.enterprise.MultirowFormBinder",
                                "properties": {
                                    "foreignKey": "imoveis_id",
                                    "formDefId": "HIPImovel"
                                }
                            },
                            "submit-label-normal": "",
                            "submit-label-readonly": "",
                            "uniqueKey": "",
                            "validateMaxRow": "",
                            "validateMinRow": "",
                            "validator": {
                                "className": "org.joget.apps.form.lib.BeanShellMultiRowValidator",
                                "properties": {
                                    "decoration": "",
                                    "script": "import java.util.Arrays;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport org.joget.apps.form.model.Element;\r\nimport org.joget.apps.form.model.Form;\r\nimport org.joget.apps.form.model.FormData;\r\nimport org.joget.apps.form.model.FormRow;\r\nimport org.joget.apps.form.model.FormRowSet;\r\nimport org.joget.apps.form.service.FormUtil;\r\nimport org.joget.commons.util.LogUtil;\r\n  \r\npublic boolean validate(Element element, FormRowSet rows, FormData formData) {\r\n    boolean result = true;\r\n    \r\n    //Get value from workflow variable\r\n    String flagvalidate = \"#variable.flag_ultima_atividade#\";\r\n\r\n    //Get fase de processo through processId\r\n    String faseProcesso = \"#process.processId#\";\r\n    if(!faseProcesso.contains(\"Filtro\")){\r\n        return true;\r\n    }\r\n    \r\n    //Only validate if it is the last activity of the subflow\r\n    if(flagvalidate.equals(\"1\")){\r\n        if (rows != null && !rows.isEmpty()) {\r\n        //Sum the values from column \"amount\"\r\n            for (FormRow row : rows) {\r\n                try {\r\n                    //LogUtil.info(\"imoveis\", \"element: \" + element);\r\n                    if(row.getProperty(\"resultado_checklist\") == null || row.getProperty(\"resultado_checklist\").isEmpty() || row.getProperty(\"resultado_checklist\").equals(\"NOK\")){\r\n                        String id = FormUtil.getElementParameterName(element);\r\n                        formData.addFormError(id, \"Existem checklists incompletas\");\r\n                        result = false;\r\n                    }\r\n                } catch (Exception e) {}\r\n            }\r\n        }\r\n    }\r\n  \r\n    return result;\r\n}\r\n  \r\n//call validate method with injected variable\r\nreturn validate(element, rows, formData);"
                                }
                            },
                            "width": "85%"
                        }
                    },
                    {
                        "className": "org.joget.apps.form.lib.TextField",
                        "properties": {
                            "encryption": "",
                            "id": "valor_total_imoveis",
                            "label": "Valor Total Imoveis",
                            "maxlength": "",
                            "permission_rules": {
                                "63979d93-e2e7-3bfd-2b12-486990df460d": {},
                                "938bf617-2531-b6a0-be1b-acdc2407b563": {},
                                "a612e6c5-4cd0-d548-0179-0522483fca04": {},
                                "d0a23008-b45a-3d4d-5158-c0b1c92f3dc8": {}
                            },
                            "placeholder": "",
                            "readonly": "",
                            "readonlyLabel": "",
                            "size": "",
                            "storeNumeric": "",
                            "style": "",
                            "validator": {
                                "className": "",
                                "properties": {}
                            },
                            "value": "",
                            "workflowVariable": ""
                        }
                    },
                    {
                        "className": "org.joget.apps.form.lib.TextField",
                        "properties": {
                            "encryption": "",
                            "id": "numero_hipotecas",
                            "label": "Número de Hipotecas",
                            "maxlength": "",
                            "permission_rules": {
                                "63979d93-e2e7-3bfd-2b12-486990df460d": {},
                                "938bf617-2531-b6a0-be1b-acdc2407b563": {},
                                "a612e6c5-4cd0-d548-0179-0522483fca04": {},
                                "d0a23008-b45a-3d4d-5158-c0b1c92f3dc8": {}
                            },
                            "placeholder": "",
                            "readonly": "",
                            "readonlyLabel": "",
                            "size": "",
                            "storeNumeric": "",
                            "style": "",
                            "validator": {
                                "className": "",
                                "properties": {}
                            },
                            "value": "",
                            "workflowVariable": ""
                        }
                    },
                    {
                        "className": "org.joget.apps.form.lib.TextField",
                        "properties": {
                            "encryption": "",
                            "id": "numero_compras",
                            "label": "Ñúmero de compras",
                            "maxlength": "",
                            "permission_rules": {
                                "63979d93-e2e7-3bfd-2b12-486990df460d": {},
                                "938bf617-2531-b6a0-be1b-acdc2407b563": {},
                                "a612e6c5-4cd0-d548-0179-0522483fca04": {},
                                "d0a23008-b45a-3d4d-5158-c0b1c92f3dc8": {}
                            },
                            "placeholder": "",
                            "readonly": "",
                            "readonlyLabel": "",
                            "size": "",
                            "storeNumeric": "",
                            "style": "",
                            "validator": {
                                "className": "",
                                "properties": {}
                            },
                            "value": "",
                            "workflowVariable": ""
                        }
                    },
                    {
                        "className": "org.joget.apps.form.lib.CustomHTML",
                        "properties": {
                            "autoPopulate": "",
                            "id": "soma_valor_total",
                            "label": "",
                            "permission_rules": {
                                "63979d93-e2e7-3bfd-2b12-486990df460d": {},
                                "938bf617-2531-b6a0-be1b-acdc2407b563": {},
                                "a612e6c5-4cd0-d548-0179-0522483fca04": {},
                                "d0a23008-b45a-3d4d-5158-c0b1c92f3dc8": {}
                            },
                            "value": "<script type=\"text/javascript\">\r\n    \r\n    $(window).on('load', function(){\r\n        $(document).ready(function(){\r\n        \r\n            //Somar os valores de todas as linhas da coluna compra e venda\r\n            var valor_total = 0.0;\r\n            var linha = 0;\r\n            var imoveis_com_valor = 0;\r\n            \r\n            $(\"tr[id*=lista_imoveis] td span.tablesaw-cell-content span[id*=multiPaged_4_imoveis_lista_imoveis_valor_cv]\").each(function(){\r\n                var valor_imovel = $(\"tr[id*=lista_imoveis] td span.tablesaw-cell-content span[id*=multiPaged_4_imoveis_lista_imoveis_valor_cv]\")[linha].innerText;\r\n                \r\n                //Formatar string para permitir a soma correta\r\n                valor_imovel = valor_imovel.replaceAll('NaN', \"0\");\r\n                valor_imovel = valor_imovel.replaceAll('.', \"\");\r\n                valor_imovel = valor_imovel.replaceAll('\u20ac', \"\");\r\n                valor_imovel = valor_imovel.replaceAll('Eur', \"\");\r\n                valor_imovel = valor_imovel.replaceAll('EUR', \"\");\r\n                valor_imovel = valor_imovel.replaceAll(',', '.');\r\n                \r\n                valor_imovel = parseFloat(valor_imovel);\r\n                //console.log(valor_imovel);\r\n                \r\n                if(!isNaN(valor_imovel)){\r\n                  valor_total += valor_imovel;\r\n                  imoveis_com_valor = 1;\r\n                }\r\n                \r\n                linha++;\r\n                \r\n            });\r\n            \r\n            let num = new Intl.NumberFormat('pt-PT', { style: 'currency', currency: 'EUR' }).format(valor_total);\r\n            num = num.replace(/\\s/g, '.');\r\n            num = num.replaceAll('.\u20ac', ' EUR');\r\n            \r\n            if(imoveis_com_valor == 0){\r\n                num = \"\";\r\n            }\r\n            \r\n            //console.log(num);\r\n            \r\n            //Colocar o valor no textField respetivo\r\n            var campo_valor_total = FormUtil.getField(\"valor_total_imoveis\");\r\n            campo_valor_total.val(num);\r\n            \r\n            campo_valor_total.parent().hide();\r\n        });\r\n    });\r\n\r\n\r\n    $(document).change(function(){\r\n        \r\n       //Somar os valores de todas as linhas da coluna compra e venda\r\n        var valor_total = 0.0;\r\n        var linha = 0;\r\n        var imoveis_com_valor = 0;\r\n        \r\n         $(\"tr[id*=lista_imoveis] td span.tablesaw-cell-content span[id*=lista_imoveis_valor_cv]\").each(function(){\r\n            var valor_imovel = $(\"tr[id*=lista_imoveis] td span.tablesaw-cell-content span[id*=lista_imoveis_valor_cv]\")[linha].innerText;\r\n            \r\n            //Formatar string para permitir a soma correta\r\n            valor_imovel = valor_imovel.replaceAll('NaN', \"0\");\r\n            valor_imovel = valor_imovel.replaceAll('.', \"\");\r\n            valor_imovel = valor_imovel.replaceAll('\u20ac', \"\");\r\n            valor_imovel = valor_imovel.replaceAll('Eur', \"\");\r\n            valor_imovel = valor_imovel.replaceAll('EUR', \"\");\r\n            valor_imovel = valor_imovel.replaceAll(',', '.');\r\n            \r\n            valor_imovel = parseFloat(valor_imovel);\r\n            //console.log(valor_imovel);\r\n            \r\n            if(!isNaN(valor_imovel)){\r\n              valor_total += valor_imovel;\r\n              imoveis_com_valor = 1;\r\n            }\r\n            \r\n            linha++;\r\n            \r\n        });\r\n        \r\n        let num = new Intl.NumberFormat('pt-PT', { style: 'currency', currency: 'EUR' }).format(valor_total);\r\n        num = num.replace(/\\s/g, '.');\r\n        num = num.replaceAll('.\u20ac', ' EUR');\r\n        \r\n        if(imoveis_com_valor == 0){\r\n            num = \"\";\r\n        }\r\n        \r\n        //console.log(num);\r\n        \r\n        //Colocar o valor no textField respetivo\r\n        var campo_valor_total = FormUtil.getField(\"valor_total_imoveis\");\r\n        campo_valor_total.val(num);\r\n        \r\n        campo_valor_total.parent().hide();\r\n    });\r\n    \r\n    \r\n    \r\n<\/script>"
                        }
                    },
                    {
                        "className": "org.joget.apps.form.lib.CustomHTML",
                        "properties": {
                            "autoPopulate": "",
                            "id": "soma_hipotecas_compras",
                            "label": "",
                            "permission_rules": {
                                "63979d93-e2e7-3bfd-2b12-486990df460d": {},
                                "938bf617-2531-b6a0-be1b-acdc2407b563": {},
                                "a612e6c5-4cd0-d548-0179-0522483fca04": {},
                                "d0a23008-b45a-3d4d-5158-c0b1c92f3dc8": {}
                            },
                            "value": "<script type=\"text/javascript\">\r\n\r\n    $(window).on('load', function(){\r\n        $(document).ready(function(){\r\n            \r\n            var linha = 0;\r\n            var numero_hipotecas = 0;\r\n            var numero_compras = 0;\r\n            \r\n            $(\"tr[id*=lista_imoveis] td span.tablesaw-cell-content span[id*=lista_imoveis_imovel_comprar_hipotecar]\").each(function(){\r\n                var valor_campo = $(\"tr[id*=lista_imoveis] td span.tablesaw-cell-content span[id*=lista_imoveis_imovel_comprar_hipotecar]\")[linha].innerText;\r\n    \r\n                if(valor_campo === \"Hipotecar\"){\r\n                    numero_hipotecas++;\r\n                } else if(valor_campo === \"Transmitir\") {\r\n                    numero_compras++;\r\n                } else if(valor_campo === \"Transmitir e Hipotecar\") {\r\n                    numero_hipotecas++;\r\n                    numero_compras++;\r\n                }\r\n                \r\n                linha++; \r\n            });\r\n            \r\n            \r\n            //Colocar o valor no textField respetivo\r\n            var campo_numero_hipotecas = FormUtil.getField(\"numero_hipotecas\");\r\n            campo_numero_hipotecas.val(numero_hipotecas);\r\n            \r\n            var campo_numero_compras = FormUtil.getField(\"numero_compras\");\r\n            campo_numero_compras.val(numero_compras);\r\n            \r\n            \r\n            //Esconder os campos\r\n            campo_numero_hipotecas.parent().hide();\r\n            campo_numero_compras.parent().hide();\r\n            \r\n        });\r\n    });\r\n    \r\n    $(window).on('load', function(){\r\n        $(document).change(function(){\r\n    \r\n            var linha = 0;\r\n            var numero_hipotecas = 0;\r\n            var numero_compras = 0;\r\n            \r\n            $(\"tr[id*=lista_imoveis] td span.tablesaw-cell-content span[id*=lista_imoveis_imovel_comprar_hipotecar]\").each(function(){\r\n                var valor_campo = $(\"tr[id*=lista_imoveis] td span.tablesaw-cell-content span[id*=lista_imoveis_imovel_comprar_hipotecar]\")[linha].innerText;\r\n    \r\n                if(valor_campo === \"Hipotecar\"){\r\n                    numero_hipotecas++;\r\n                } else if(valor_campo === \"Transmitir\") {\r\n                    numero_compras++;\r\n                } else if(valor_campo === \"Transmitir e Hipotecar\") {\r\n                    numero_hipotecas++;\r\n                    numero_compras++;\r\n                }\r\n                \r\n                linha++; \r\n            });\r\n            \r\n            \r\n            //Colocar o valor no textField respetivo\r\n            var campo_numero_hipotecas = FormUtil.getField(\"numero_hipotecas\");\r\n            campo_numero_hipotecas.val(numero_hipotecas);\r\n            \r\n            var campo_numero_compras = FormUtil.getField(\"numero_compras\");\r\n            campo_numero_compras.val(numero_compras);\r\n            \r\n            //Esconder os campos\r\n            campo_numero_hipotecas.parent().hide();\r\n            campo_numero_compras.parent().hide();\r\n        });\r\n    });\r\n    \r\n<\/script>"
                        }
                    },
                    {
                        "className": "org.joget.apps.form.lib.CustomHTML",
                        "properties": {
                            "autoPopulate": "",
                            "id": "field10",
                            "label": "",
                            "value": "<script type=\"text/javascript\">\r\n\r\n    $(document).ready(function(){\r\n        var value = FormUtil.getValue(\"id_sub_processo\");\r\n        if(!value.includes(\"Filtro\")){\r\n            $(\"th[id*=lista_imoveis_resultado_checklist]\").hide();\r\n            $(\"span[id*=lista_imoveis_resultado_checklist]\").parent().hide();\r\n        }\r\n    });\r\n    \r\n<\/script>"
                        }
                    }
                ],
                "properties": {"width": "100%"}
            }],
            "properties": {
                "comment": "",
                "id": "imoveis",
                "join": "",
                "label": "",
                "loadBinder": {
                    "className": "",
                    "properties": {}
                },
                "permission": {
                    "className": "",
                    "properties": {}
                },
                "permissionReadonly": "",
                "permission_rules": {
                    "63979d93-e2e7-3bfd-2b12-486990df460d": {},
                    "938bf617-2531-b6a0-be1b-acdc2407b563": {},
                    "a612e6c5-4cd0-d548-0179-0522483fca04": {},
                    "d0a23008-b45a-3d4d-5158-c0b1c92f3dc8": {}
                },
                "readonly": "",
                "readonlyLabel": "",
                "regex": "",
                "reverse": "",
                "storeBinder": {
                    "className": "",
                    "properties": {}
                },
                "visibilityControl": "",
                "visibilityValue": ""
            }
        },
        {
            "className": "org.joget.apps.form.model.Section",
            "elements": [{
                "className": "org.joget.apps.form.model.Column",
                "elements": [
                    {
                        "className": "org.joget.plugin.enterprise.SpreadSheetGrid",
                        "properties": {
                            "customSettings": "",
                            "disabledAdd": "",
                            "disabledDelete": "",
                            "errorMessage": "Invalid number of rows",
                            "fixedColumnsLeft": "0",
                            "headerSorting": "",
                            "id": "checklist",
                            "label": "",
                            "loadBinder": {
                                "className": "org.joget.apps.form.lib.BeanShellFormBinder",
                                "properties": {
                                    "autoHandleFiles": "",
                                    "autoHandleWorkflowVariable": "true",
                                    "cacheInterval": "",
                                    "script": "import org.joget.apps.form.model.Element;\r\nimport org.joget.apps.form.model.FormData;\r\nimport org.joget.apps.form.model.FormRow;\r\nimport org.joget.apps.form.model.FormRowSet;\r\nimport org.joget.apps.app.model.AppDefinition;\r\nimport org.joget.apps.app.service.AppService;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport org.joget.apps.form.service.FormUtil;\r\nimport org.joget.plugin.base.PluginManager;\r\nimport org.joget.apps.form.model.FormLoadBinder;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport javax.sql.DataSource;\r\nimport org.joget.commons.util.LogUtil;\r\n \r\npublic FormRowSet load(Element element, String primaryKey, FormData formData) {\r\n    String formDefId = \"checkDocsImovel\";  //change this to the form id used to store grid data\r\n    String foreignKey = \"fk\"; //change this to the foreign key\r\n     \r\n    FormRowSet f = new FormRowSet();\r\n    f.setMultiRow(true);\r\n    \r\n    // Reuse Multi Row Binder to load data\r\n    PluginManager pluginManager = (PluginManager) FormUtil.getApplicationContext().getBean(\"pluginManager\");\r\n    FormLoadBinder binder = (FormLoadBinder) pluginManager.getPlugin(\"org.joget.plugin.enterprise.MultirowFormBinder\");\r\n     \r\n    //Load from the grid table\r\n    binder.setProperty(\"formDefId\", formDefId);\r\n    binder.setProperty(\"foreignKey\", foreignKey);\r\n    f = binder.load(element, primaryKey, formData);\r\n    \r\n    //if no grid data is retrieved, get from default table\r\n    if (f == null || f.isEmpty()) {\r\n        String tipo_processo = \"#form.detalhe_proce_hip.tipo_processo[{form.processos_hip.detalhe_processo}]#\";\r\n        String[] tipos_processo = tipo_processo.split(\"\\\\+\");\r\n        \r\n        Connection con = null;\r\n        PreparedStatement stmt = null;\r\n        ResultSet rs = null;\r\n    \r\n        try{\r\n            DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\"setupDataSource\");\r\n            con = ds.getConnection();\r\n            \r\n            if(!con.isClosed()){\r\n                //Build sql query with the number of inputs needed based on loop iteration\r\n                String sql = \"SELECT c_tipo_documento FROM app_fd_checklist_docs WHERE c_servico = ? AND c_banco = ? AND c_checklist = ? AND ( c_mostra LIKE \";\r\n             \r\n                StringBuilder parameterBuilder = new StringBuilder();\r\n                \r\n                for (int i = 0; i < tipos_processo.length*3; i++) {\r\n                    parameterBuilder.append(\"?\");\r\n                    if (tipos_processo.length*3 > i + 1) {\r\n                        parameterBuilder.append(\"OR c_mostra LIKE\");\r\n                    }\r\n                }\r\n                parameterBuilder.append(\")\");\r\n                \r\n                String servico = \"#form.processos_hip.servico#\";\r\n               // LogUtil.info(\"intervenientes HIP checklist\", \"serv \" + servico);\r\n                String banco = \"#form.detalhe_proce_hip.nome_banco[{form.processos_hip.detalhe_processo}]#\";\r\n               //LogUtil.info(\"intervenientes HIP checklist\", \"banco\" + banco);\r\n                \r\n                //Here you can query from one or multiple tables using JOIN etc\r\n                PreparedStatement stmt = con.prepareStatement(sql + parameterBuilder);\r\n                stmt.setString(1, servico);\r\n                stmt.setString(2, banco);\r\n                stmt.setString(3, \"imovel\");\r\n                \r\n                //Here you can query from one or multiple tables using JOIN etc\r\n              \r\n                //stmt.setString(1, \"imovel\");\r\n                \r\n                int count = 4;\r\n                //set values to the needed inputs\r\n                for(int i = 0; i < tipos_processo.length; i++){\r\n                    String tipo_processo1 = tipos_processo[i] + \";%\";\r\n                    String tipo_processo2 = \"%;\" + tipos_processo[i] + \";%\";\r\n                    String tipo_processo3 = \"%;\" + tipos_processo[i];\r\n                    //LogUtil.info(\"imovel\", \"inputs: \" + tipo_processo1 + \", \" + tipo_processo2 + \", \" + tipo_processo3);\r\n                    stmt.setString(count++, tipo_processo1);\r\n                    stmt.setString(count++, tipo_processo2);\r\n                    stmt.setString(count++, tipo_processo3);\r\n                }\r\n                //Execute the SELECT SQL statement\r\n                ResultSet rs = stmt.executeQuery();\r\n                     \r\n                //Get value from columns of record(s)\r\n                while (rs.next()) {\r\n                    ////LogUtil.info(\"imovel\", \"entra\");\r\n                    FormRow r1 = new FormRow();\r\n                    r1.put(\"tipo_documento\", rs.getString(1));\r\n                    r1.put(\"gestor\", \"\");\r\n                    r1.put(\"gestor_senior\", \"\");\r\n                    r1.put(\"validacao\", \"\");\r\n                    r1.put(\"filtro\", \"\");\r\n                    f.add(r1);\r\n                }\r\n            }\r\n                \r\n        }catch(Exception e){\r\n            LogUtil.error(\"CREDITO HABITACAO - Imóvel - Checklist\", e, \"Error getting info from DB\");\r\n        }finally{\r\n            try{\r\n                if(rs != null){\r\n                    rs.close();\r\n                }\r\n                if(stmt != null){\r\n                    stmt.close();\r\n                }\r\n                if(con != null && !con.isClosed()) {\r\n                    con.close();\r\n                }\r\n            }catch(Exception e){\r\n                LogUtil.error(\"CREDITO HABITACAO - Imóvel - Checklist\", e, \"Error closing DB connection\");\r\n            }\r\n            \r\n        }\r\n    }\r\n    \r\n    return f;\r\n}\r\n \r\n//call load method with injected variable\r\nreturn load(element, primaryKey, formData);",
                                    "useAjax": ""
                                }
                            },
                            "maxHeight": "",
                            "minSpareRows": "1",
                            "options": [
                                {
                                    "format": "",
                                    "formatType": "",
                                    "formula": "",
                                    "label": "Tipo de Documento",
                                    "readonly": "",
                                    "regexValidator": "",
                                    "value": "tipo_documento",
                                    "width": ""
                                },
                                {
                                    "format": "checkDocsImovel",
                                    "formatType": "dropdown",
                                    "formula": "",
                                    "label": "Gestor",
                                    "readonly": "",
                                    "regexValidator": "",
                                    "value": "gestor",
                                    "width": ""
                                },
                                {
                                    "format": "checkDocsImovel",
                                    "formatType": "dropdown",
                                    "formula": "",
                                    "label": "Gestor Sénior",
                                    "readonly": "",
                                    "regexValidator": "",
                                    "value": "gestor_senior",
                                    "width": ""
                                },
                                {
                                    "format": "checkDocsImovel",
                                    "formatType": "dropdown",
                                    "formula": "",
                                    "label": "Filtro",
                                    "readonly": "",
                                    "regexValidator": "",
                                    "value": "filtro",
                                    "width": ""
                                },
                                {
                                    "format": "checkDocsImovel",
                                    "formatType": "dropdown",
                                    "formula": "",
                                    "label": "Validação",
                                    "readonly": "",
                                    "regexValidator": "",
                                    "value": "validacao",
                                    "width": ""
                                }
                            ],
                            "permission_rules": {
                                "740d9ecd-911b-7df4-474a-0d7f0cf81147": {
                                    "permissionHidden": "",
                                    "readonly": ""
                                },
                                "8ed12735-d92c-74bd-444f-888db20bd46a": {}
                            },
                            "readonly": "",
                            "showRowNumber": "",
                            "sortingField": "",
                            "storeBinder": {
                                "className": "org.joget.plugin.enterprise.MultirowFormBinder",
                                "properties": {
                                    "foreignKey": "fk",
                                    "formDefId": "checkDocsImovel"
                                }
                            },
                            "validateMaxRow": "",
                            "validateMinRow": "",
                            "validator": {
                                "className": "",
                                "properties": {}
                            }
                        }
                    },
                    {
                        "className": "org.joget.apps.form.lib.HiddenField",
                        "properties": {
                            "id": "resultado_checklist",
                            "useDefaultWhenEmpty": "",
                            "validator": {
                                "className": "",
                                "properties": {}
                            },
                            "value": "",
                            "workflowVariable": ""
                        }
                    },
                    {
                        "className": "org.joget.apps.form.lib.CustomHTML",
                        "properties": {
                            "autoPopulate": "",
                            "id": "field20",
                            "label": "",
                            "value": "<script type=\"text/javascript\">\r\n    \r\n    $(\"div[name=checklist]\").change(function(){\r\n        \r\n        //get value from field that controls if the WF number is automatically generated or not\r\n        var values = FormUtil.getValues(\"checklist.filtro\");\r\n        var count = 0;\r\n        var i = 0;\r\n\r\n        if(values != null && values.length > 0){\r\n            while (count == 0 && i < values.length) {\r\n                if(values[i] === \"\"){\r\n                    count++;\r\n                }\r\n                i++;\r\n            }\r\n        }\r\n        \r\n        var field = FormUtil.getField(\"resultado_checklist\");\r\n        if(count != 0){\r\n            $(field).val(\"NOK\"); //set value\r\n        }else{\r\n            $(field).val(\"OK\"); //set value\r\n        }\r\n        \r\n        \r\n\r\n\r\n    });\r\n<\/script>"
                        }
                    }
                ],
                "properties": {"width": "100%"}
            }],
            "properties": {
                "comment": "",
                "id": "section3",
                "join": "",
                "label": "Checklist de Documentos",
                "loadBinder": {
                    "className": "",
                    "properties": {}
                },
                "permission": {
                    "className": "",
                    "properties": {}
                },
                "permissionReadonly": "",
                "permission_rules": {
                    "740d9ecd-911b-7df4-474a-0d7f0cf81147": {},
                    "8ed12735-d92c-74bd-444f-888db20bd46a": {}
                },
                "readonly": "",
                "readonlyLabel": "",
                "regex": "",
                "reverse": "",
                "storeBinder": {
                    "className": "",
                    "properties": {}
                },
                "visibilityControl": "",
                "visibilityValue": ""
            }
        }
    ],
    "properties": {
        "description": "",
        "id": "HIPImoveis",
        "loadBinder": {
            "className": "org.joget.apps.form.lib.WorkflowFormBinder",
            "properties": {}
        },
        "name": "HIP - Imóveis",
        "noPermissionMessage": "",
        "permission": {
            "className": "",
            "properties": {}
        },
        "permission_rules": [
            {
                "permission": {
                    "className": "org.joget.apps.userview.lib.DepartmentPermission",
                    "properties": {
                        "allowedDeptIds": "PL_INT_PRD_GEN_COM_CRH;PL_INT_PRD_GEN_NOR_CRH;PL_INT_PRD_GEN_RPA_CRH",
                        "orgId": "PL"
                    }
                },
                "permission_key": "a612e6c5-4cd0-d548-0179-0522483fca04",
                "permission_name": "Produção"
            },
            {
                "permission": {
                    "className": "org.joget.apps.userview.lib.DepartmentPermission",
                    "properties": {
                        "allowedDeptIds": "PL_INT_CNT_ABN_COM_CRH;PL_INT_CNT_ABN_NOR_CRH;PL_INT_CNT_BCP_COM_CRH;PL_INT_CNT_BCP_NOR_CRH;PL_INT_CNT_BIC_COM_CRH;PL_INT_CNT_BIC_NOR_CRH;PL_INT_CNT_BST_COM_CRH;PL_INT_CNT_BST_NOR_CRH;PL_INT_CNT_CTT_COM_CRH;PL_INT_CNT_CTT_NOR_CRH;PL_INT_CNT_GEN_COM_CRH;PL_INT_CNT_GEN_NOR_CRH;PL_INT_CNT_MTG_COM_CRH;PL_INT_CNT_MTG_NOR_CRH;PL_INT_CNT_NVB_COM_CRH;PL_INT_CNT_NVB_NOR_CRH",
                        "orgId": "PL"
                    }
                },
                "permission_key": "d0a23008-b45a-3d4d-5158-c0b1c92f3dc8",
                "permission_name": "Contratação"
            },
            {
                "permission": {
                    "className": "org.joget.apps.userview.lib.DepartmentPermission",
                    "properties": {
                        "allowedDeptIds": "PL_INT_FLT_GEN_COM_CRH;PL_INT_FLT_GEN_NOR_CRH",
                        "orgId": "PL"
                    }
                },
                "permission_key": "938bf617-2531-b6a0-be1b-acdc2407b563",
                "permission_name": "Filtro"
            },
            {
                "permission": {
                    "className": "org.joget.apps.userview.lib.DepartmentPermission",
                    "properties": {
                        "allowedDeptIds": "PL_INT_VAL_BCP_COM_CRH;PL_INT_VAL_BCP_NOR_CRH;PL_INT_VAL_BNI_COM_CRH;PL_INT_VAL_BNI_NOR_CRH;PL_INT_VAL_BST_COM_CRH;PL_INT_VAL_BST_NOR_CRH;PL_INT_VAL_GEN_COM_CRH;PL_INT_VAL_GEN_NOR_CRH",
                        "orgId": "PL"
                    }
                },
                "permission_key": "63979d93-e2e7-3bfd-2b12-486990df460d",
                "permission_name": "Validação"
            }
        ],
        "postProcessor": {
            "className": "",
            "properties": {}
        },
        "postProcessorRunOn": "create",
        "storeBinder": {
            "className": "org.joget.apps.form.lib.WorkflowFormBinder",
            "properties": {}
        },
        "tableName": "imoveis_hip"
    }
}