{
    "className": "org.joget.apps.form.model.Form",
    "elements": [{
        "className": "org.joget.apps.form.model.Section",
        "elements": [{
            "className": "org.joget.apps.form.model.Column",
            "elements": [
                {
                    "className": "org.joget.apps.form.lib.TextField",
                    "properties": {
                        "encryption": "",
                        "id": "n_wf_banco",
                        "label": "Número Workflow Banco",
                        "maxlength": "",
                        "placeholder": "",
                        "readonly": "",
                        "readonlyLabel": "",
                        "size": "",
                        "storeNumeric": "",
                        "style": "",
                        "validator": {
                            "className": "org.joget.apps.form.lib.DefaultValidator",
                            "properties": {
                                "mandatory": "",
                                "message": "#i18n.mandatorymsg#",
                                "type": ""
                            }
                        },
                        "value": "",
                        "workflowVariable": ""
                    }
                },
                {
                    "className": "org.joget.apps.form.lib.SelectBox",
                    "properties": {
                        "controlField": "",
                        "id": "nome_banco",
                        "label": "Nome do Banco",
                        "multiple": "",
                        "options": [
                            {
                                "grouping": "",
                                "label": "",
                                "value": ""
                            },
                            {
                                "grouping": "",
                                "label": "BCP",
                                "value": "BCP"
                            },
                            {
                                "grouping": "",
                                "label": "Novo Banco",
                                "value": "NB"
                            }
                        ],
                        "optionsBinder": {
                            "className": "",
                            "properties": {}
                        },
                        "readonly": "",
                        "readonlyLabel": "",
                        "size": "",
                        "validator": {
                            "className": "",
                            "properties": {}
                        },
                        "value": "",
                        "workflowVariable": ""
                    }
                },
                {
                    "className": "org.joget.apps.form.lib.SelectBox",
                    "properties": {
                        "controlField": "",
                        "id": "complex_processo",
                        "label": "Complexidade do Processo",
                        "multiple": "",
                        "options": [],
                        "optionsBinder": {
                            "className": "org.joget.apps.form.lib.FormOptionsBinder",
                            "properties": {
                                "addEmptyOption": "true",
                                "cacheInterval": "",
                                "emptyLabel": "",
                                "extraCondition": "c_nome_campo = 'complexidade_processo'",
                                "formDefId": "adicionarOpcaoLV",
                                "groupingColumn": "",
                                "idColumn": "value",
                                "labelColumn": "label",
                                "useAjax": ""
                            }
                        },
                        "readonly": "",
                        "readonlyLabel": "",
                        "size": "",
                        "validator": {
                            "className": "",
                            "properties": {}
                        },
                        "value": "",
                        "workflowVariable": ""
                    }
                }
            ],
            "properties": {
                "customWidth": "100%",
                "horizontal": "",
                "label": "",
                "width": "100%"
            }
        }],
        "properties": {
            "comment": "",
            "id": "section1",
            "join": "",
            "label": "Informação Geral",
            "loadBinder": {
                "className": "",
                "properties": {}
            },
            "permission": {
                "className": "",
                "properties": {}
            },
            "permissionReadonly": "",
            "readonly": "",
            "readonlyLabel": "",
            "regex": "",
            "reverse": "",
            "storeBinder": {
                "className": "",
                "properties": {}
            },
            "visibilityControl": "",
            "visibilityValue": ""
        }
    }],
    "properties": {
        "description": "",
        "id": "importaProcesso",
        "loadBinder": {
            "className": "org.joget.apps.form.lib.WorkflowFormBinder",
            "properties": {}
        },
        "name": "Importa Processo",
        "noPermissionMessage": "",
        "permission": {
            "className": "",
            "properties": {}
        },
        "postProcessor": {
            "className": "org.joget.apps.app.lib.BeanShellTool",
            "properties": {"script": "import java.util.Map;\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport org.joget.apps.app.model.AppDefinition;\r\nimport org.joget.apps.app.service.AppService;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.workflow.model.service.WorkflowManager;\r\nimport org.joget.workflow.model.WorkflowAssignment;\r\nimport org.joget.workflow.model.WorkflowProcess;\r\nimport org.joget.workflow.model.WorkflowProcessResult;\r\n  \r\npublic Object execute(WorkflowAssignment assignment, AppDefinition appDef, HttpServletRequest request) {\r\n    \r\n    try{\r\n        AppService appService = (AppService) AppUtil.getApplicationContext().getBean(\"appService\");\r\n        WorkflowManager workflowManager = (WorkflowManager) AppUtil.getApplicationContext().getBean(\"workflowManager\");\r\n        \r\n        //get process\r\n        WorkflowProcess process = appService.getWorkflowProcessForApp(appDef.getAppId(), appDef.getVersion().toString(), \"CHGlobal\");\r\n        LogUtil.info(appDef.toString(), \"ProcessDefId: \" + process.getId());\r\n        \r\n        //start process\r\n        WorkflowProcessResult result = workflowManager.processStart(process.getId());\r\n        \r\n        //get current record id\r\n        String processId = result.getProcess().getInstanceId();\r\n        LogUtil.info(appDef.toString(), \"Process id = \" + processId);\r\n         \r\n    }catch(Throwable e){\r\n        LogUtil.error(appDef.toString(), e, \"Error creating process\");\r\n    }\r\n     \r\n    return null;\r\n}\r\n  \r\n//call execute method with injected variable\r\nreturn execute(workflowAssignment, appDef, request);"}
        },
        "postProcessorRunOn": "create",
        "storeBinder": {
            "className": "org.joget.apps.form.lib.BeanShellFormBinder",
            "properties": {
                "autoHandleFiles": "",
                "autoHandleWorkflowVariable": "true",
                "cacheInterval": "",
                "script": "import java.util.Map;\r\nimport org.joget.apps.app.model.AppDefinition;\r\nimport org.joget.apps.app.service.AppService;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport org.joget.workflow.model.service.WorkflowManager;\r\nimport org.joget.workflow.model.WorkflowAssignment;\r\nimport org.joget.workflow.model.WorkflowProcess;\r\nimport org.joget.workflow.model.WorkflowProcessResult;\r\nimport org.joget.apps.form.model.FormRow;\r\nimport org.joget.apps.form.model.FormRowSet;\r\nimport org.joget.commons.util.UuidGenerator;\r\nimport org.joget.commons.util.LogUtil;\r\n  \r\npublic FormRowSet storeData(Element element, FormRowSet rows, FormData formData) {\r\n    \r\n    try{\r\n        AppService appService = (AppService) AppUtil.getApplicationContext().getBean(\"appService\");\r\n        WorkflowManager workflowManager = (WorkflowManager) AppUtil.getApplicationContext().getBean(\"workflowManager\");\r\n        AppDefinition appDef = AppUtil.getCurrentAppDefinition();\r\n        \r\n        //get process\r\n        WorkflowProcess process = appService.getWorkflowProcessForApp(appDef.getAppId(), appDef.getVersion().toString(), \"CHGlobal\");\r\n        LogUtil.info(appDef.toString(), \"ProcessDefId: \" + process.getId());\r\n        \r\n        //start process\r\n        WorkflowProcessResult result = workflowManager.processStart(process.getId());\r\n        \r\n        //get current record id\r\n        String processId = result.getProcess().getInstanceId();\r\n        LogUtil.info(appDef.toString(), \"Process id = \" + processId);\r\n        \r\n        FormRowSet multipagedForms = new FormRowSet();\r\n        String[] fieldIds = {\"detalhe_processo\", \"intervenientes\", \"docs\", \"imoveis\", \"banco\", \"anal_banc\", \"anal_legal\", \"esclarecimentos\", \"comunicacoes\", \"geral\"};\r\n        \r\n        for(int i = 0; i < fieldIds.length; i++ ){\r\n            FormRow formPrimaryKey = new FormRow();\r\n            formPrimaryKey.setProperty(i, (UuidGenerator.getInstance().getUuid()).toString());\r\n            multipagedForms.add(formPrimaryKey);\r\n        }\r\n        \r\n        FormRowSet result = storeToOtherFormDataTable(element, multipagedForms, formData, \"processo\", processId);\r\n        //storeToOtherFormDataTable(element, rows, formData, \"detalheProcesso\", processId);\r\n        LogUtil.info(appDef.toString(), \"results = \" + result);\r\n        \r\n    }catch(Throwable e){\r\n        LogUtil.error(appDef.toString(), e, \"Error creating process\");\r\n    }\r\n     \r\n    return null;\r\n}\r\n\r\npublic void storeToOtherFormDataTable(Element element, FormRowSet rows, FormData formData, String formId, String id) {\r\n    AppService appService = (AppService) AppUtil.getApplicationContext().getBean(\"appService\");\r\n  \r\n    AppDefinition appDef = AppUtil.getCurrentAppDefinition();\r\n  \r\n    appService.storeFormData(appDef.getId(), appDef.getVersion().toString(), formId, rows, id);\r\n}\r\n  \r\n//call execute method with injected variable\r\nreturn storeData(element, rows, formData);",
                "useAjax": ""
            }
        },
        "tableName": "processos_temp"
    }
}