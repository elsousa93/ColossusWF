{
    "className": "org.joget.apps.form.model.Form",
    "elements": [{
        "className": "org.joget.apps.form.model.Section",
        "elements": [{
            "className": "org.joget.apps.form.model.Column",
            "elements": [
                {
                    "className": "org.joget.plugin.enterprise.FormGrid",
                    "properties": {
                        "abortRelatedRunningProcesses": "",
                        "deleteFiles": "",
                        "deleteGridData": "",
                        "deleteMessage": "Delete row?",
                        "deleteSubformData": "",
                        "disabledAdd": "",
                        "disabledDelete": "",
                        "enableSorting": "",
                        "errorMessage": "Invalid number of rows",
                        "formDefId": "camposLog",
                        "height": "500",
                        "id": "field1",
                        "label": "",
                        "loadBinder": {
                            "className": "org.joget.plugin.enterprise.JdbcLoadBinder",
                            "properties": {
                                "autoHandleFiles": "",
                                "autoHandleWorkflowVariable": "",
                                "jdbcDatasource": "default",
                                "sql": "SELECT * FROM app_fd_campos_log ORDER BY c_formulario;"
                            }
                        },
                        "options": [
                            {
                                "format": "",
                                "formatType": "text",
                                "label": "Formulário",
                                "value": "formulario",
                                "width": ""
                            },
                            {
                                "format": "",
                                "formatType": "text",
                                "label": "Campo",
                                "value": "campo",
                                "width": ""
                            },
                            {
                                "format": "",
                                "formatType": "text",
                                "label": "Tabela",
                                "value": "tabela_formulario",
                                "width": ""
                            },
                            {
                                "format": "",
                                "formatType": "text",
                                "label": "Serviço",
                                "value": "servico",
                                "width": ""
                            }
                        ],
                        "pageSize": "20",
                        "readonly": "",
                        "readonlyLabel": "",
                        "showRowNumber": "",
                        "storeBinder": {
                            "className": "org.joget.apps.form.lib.BeanShellFormBinder",
                            "properties": {
                                "autoHandleFiles": "",
                                "autoHandleWorkflowVariable": "",
                                "cacheInterval": "",
                                "script": "import java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport javax.sql.DataSource;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport org.joget.apps.form.model.Form;\r\nimport org.joget.apps.form.model.Element;\r\nimport org.joget.apps.form.model.FormData;\r\nimport org.joget.apps.form.model.FormRow;\r\nimport org.joget.apps.form.model.FormRowSet;\r\nimport org.joget.apps.form.service.FormUtil;\r\nimport org.joget.commons.util.UuidGenerator;\r\nimport org.joget.commons.util.LogUtil;\r\n \r\npublic saveGridRows(Element element, FormRowSet rows, FormData formData) {\r\n     \r\n    String recordId = null;\r\n    Connection con = null;\r\n    PreparedStatement stmt = null;\r\n    try {\r\n        //Get Joget's current datasource configs\r\n        DataSource ds = (DataSource) AppUtil.getApplicationContext().getBean(\"setupDataSource\");\r\n \r\n        con = ds.getConnection();\r\n         \r\n        if(!con.isClosed()) {\r\n            //To generate new record IDs for storing into child table\r\n            UuidGenerator uuid = UuidGenerator.getInstance();\r\n            \r\n            String deleteQuery = \"DELETE FROM app_fd_campos_log;\";\r\n            stmt = con.prepareStatement(deleteQuery);\r\n            stmt.executeQuery();\r\n            //Iterate to add new records\r\n            Iterator i= rows.iterator();\r\n            while (i.hasNext()) {\r\n                FormRow row = (FormRow) i.next();\r\n                 \r\n                String pId = uuid.getUuid();\r\n                \r\n                String gridColumn1 = row.get(\"formulario\");\r\n                String gridColumn2 = row.get(\"campo\");\r\n                String gridColumn3 = row.get(\"tabela_formulario\");\r\n                String gridColumn4 = row.get(\"servico\");\r\n                \r\n    \r\n                String insertSql = \"INSERT INTO app_fd_campos_log (id,c_formulario,c_campo,c_tabela_formulario,c_servico) VALUES (?,?,?,?,?);\";\r\n                 \r\n                PreparedStatement stmtInsert = con.prepareStatement(insertSql);\r\n                 \r\n                stmtInsert.setString(1, pId);\r\n                stmtInsert.setString(2, gridColumn1);\r\n                stmtInsert.setString(3, gridColumn2);\r\n                stmtInsert.setString(4, gridColumn3);\r\n                stmtInsert.setString(5, gridColumn4);\r\n                \r\n                //Execute SQL statement\r\n                stmtInsert.executeUpdate();\r\n            }\r\n        }\r\n    } catch (Exception ex) {\r\n        LogUtil.error(\"Your App/Plugin Name\", ex, \"Error storing using jdbc\");\r\n    } finally {\r\n        try {\r\n            if (con != null) {\r\n                con.close();\r\n            }\r\n        } catch (Exception ex) {\r\n            LogUtil.error(\"Your App/Plugin Name\", ex, \"Error closing the jdbc connection\");\r\n        }\r\n    }\r\n}\r\n \r\n//Process and store grid rows\r\nsaveGridRows(element, rows, formData);",
                                "useAjax": ""
                            }
                        },
                        "submit-label-normal": "",
                        "submit-label-readonly": "",
                        "uniqueKey": "",
                        "validateMaxRow": "",
                        "validateMinRow": "",
                        "validator": {
                            "className": "",
                            "properties": {}
                        },
                        "width": "900"
                    }
                },
                {
                    "className": "org.joget.apps.form.lib.CustomHTML",
                    "properties": {
                        "autoPopulate": "",
                        "id": "field2",
                        "label": "",
                        "value": "<script>\n    $(document).ready(function(){\n        \n        $(\"input#export\").click(function(){\n           // window.location.href = \"#request.scheme#://#request.serverName#:#request.serverPort##request.contextPath#/web/userview/workflowPL/UV_PL_Geral/_/exportConfigLogs?d-1786728-e=2&6578706f7274=1\";\n            window.open('#request.scheme#://#request.serverName#:#request.serverPort##request.contextPath#/web/userview/workflowPL/UV_PL_Geral/_/exportConfigLogs?d-1786728-e=2&6578706f7274=1');\n        });\n        \n        $(\"input#delete\").click(function(){\n           \n            $.ajax({\n                type:\"GET\",\n                url: \"/jw/api/list/list_campos_log\",\n                headers:{\n                    \"api_id\": \"#envVariable.apiIdAtualizarCampos#\",\n                    \"api_key\": \"#envVariable.apiKeyAtualizarCampos#\",\n                    \"Accept\":\"application/json\",\n                    \"Content-Type\": \"application/json\"\n                },\n                success: function(data){\n                    if(data.total!=undefined && data.total > 0){\n                        var count = 0;\n                        while(count<=data.total-1){\n                            var idCampo = data.data[count].id;\n                            $.ajax({\n                                type:\"DELETE\",\n                                url: \"/jw/api/form/camposLog/\" + idCampo,\n                                headers:{\n                                    \"api_id\": \"#envVariable.apiIdAtualizarCampos#\",\n                                    \"api_key\": \"#envVariable.apiKeyAtualizarCampos#\",\n                                    \"Accept\":\"application/json\",\n                                    \"Content-Type\": \"application/json\"\n                                },\n                                success: function(data){\n                                    window.location = window.location.href.split(\"?\")[0];\n                                }\n                            });\n                            \n                            count+=1;\n                        }\n                        \n                    }\n                }\n            });\n        \n        });\n        \n    });\n    \n<\/script>\n<input type=\"button\" id=\"export\" value=\"EXPORTAR LISTA\" />\n<input type=\"button\" id=\"delete\" value=\"APAGAR TUDO\" />"
                    }
                }
            ],
            "properties": {"width": "100%"}
        }],
        "properties": {
            "comment": "",
            "id": "section1",
            "join": "",
            "label": "",
            "loadBinder": {
                "className": "",
                "properties": {}
            },
            "permission": {
                "className": "",
                "properties": {}
            },
            "permissionReadonly": "",
            "readonly": "",
            "readonlyLabel": "",
            "regex": "",
            "reverse": "",
            "storeBinder": {
                "className": "",
                "properties": {}
            },
            "visibilityControl": "",
            "visibilityValue": ""
        }
    }],
    "properties": {
        "description": "",
        "id": "gestaoCamposLog",
        "loadBinder": {
            "className": "org.joget.apps.form.lib.WorkflowFormBinder",
            "properties": {}
        },
        "name": "Gestão Campos  Log",
        "noPermissionMessage": "",
        "permission": {
            "className": "",
            "properties": {}
        },
        "postProcessor": {
            "className": "org.joget.apps.app.lib.BeanShellTool",
            "properties": {"script": "import java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.Statement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport javax.sql.DataSource;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport org.joget.apps.form.model.Element;\r\nimport org.joget.apps.form.model.FormData;\r\nimport org.joget.apps.form.model.FormRow;\r\nimport org.joget.apps.form.model.FormRowSet;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.joget.apps.form.model.Form;\r\nimport org.joget.apps.form.model.defaultHashVariablePlugin;\r\nimport org.joget.apps.form.service.FormUtil;\r\nimport java.util.Collection;\r\nimport org.joget.commons.util.LogUtil;\r\n\r\n    Connection con = null;\r\n    PreparedStatement stmt = null;\r\n    ResultSet rs = null;\r\nStatement stmt2=null;\r\n\r\n    try{\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\"setupDataSource\");\r\n        con = ds.getConnection();\r\n        \r\n       if(!con.isClosed()){\r\n            String query = \"SELECT c_formulario, c_campo, c_tabela_formulario, c_servico FROM app_fd_campos_log ORDER BY c_formulario, c_servico\"; \r\n            String dropQuery = \"\";\r\n            \r\n            \r\n            //Drop all log triggers\r\n            dropTriggerQuery = \"SELECT CONCAT('DROP TRIGGER IF EXISTS ', Trigger_Name, ';') as 'drop_query' FROM information_schema.TRIGGERS WHERE TRIGGER_NAME LIKE '%_logs';\";\r\n            stmt = con.prepareStatement(dropTriggerQuery);\r\n            rs = stmt.executeQuery();\r\n            \r\n            \r\n            while(rs.next()){\r\n                dropQuery= rs.getObject(\"drop_query\").toString();\r\n                stmt = con.prepareStatement(dropQuery);\r\n                stmt.executeQuery();\r\n            }\r\n            \r\n            stmt2 = con.createStatement();\r\n            \r\n            stmt = con.prepareStatement(query);\r\n            rs = stmt.executeQuery();\r\n            \r\n            String idForm = \"\";\r\n            String idField = \"\";\r\n            String formTable =\"\";\r\n            String queryTrigger = \"\";\r\n            String prevIdForm = \"\";\r\n            String dropTriggerQuery = \"\";\r\n            String servico = \"\";\r\n            String auditLogTable = \"\"; \r\n            \r\n            \r\n            \r\n            int counter = 0;\r\n            while (rs.next()) {\r\n\r\n                if(counter > 0){\r\n                    prevIdForm = idForm;\r\n                }\r\n                \r\n                idForm = rs.getObject(\"c_formulario\").toString();\r\n                idField = rs.getObject(\"c_campo\").toString();\r\n                formTable = rs.getObject(\"c_tabela_formulario\").toString();\r\n                servico = rs.getObject(\"c_servico\").toString();\r\n                \r\n                //Define audit log table per servico\r\n                if(servico.equals(\"CH\")){\r\n                    auditLogTable= \"app_fd_audit_log\";\r\n                }else if(servico.equals(\"PROCU\")){\r\n                    auditLogTable= \"app_fd_procu_audit_log\";\r\n                }else{\r\n                    auditLogTable= \"app_fd_audit_log\";\r\n                }\r\n                \r\n                \r\n                if(counter == 0){\r\n                    prevIdForm = idForm;\r\n                    queryTrigger = \"DELIMITER // CREATE TRIGGER update_\" + idForm + \"_logs AFTER UPDATE ON app_fd_\"+ formTable+\" FOR EACH ROW BEGIN\";\r\n                    queryTrigger +=\" DECLARE numero_proce_pl VARCHAR(255);\";\r\n                    //Caso o campo seja de agendamento é necessário verificar o id_processo consoante a tabela do serviço correspondente\r\n                    if(servico.equals(\"AGN\")){\r\n                        queryTrigger += \"IF OLD.c_id_processo LIKE '%CreditoHabitacao%' THEN\";\r\n                        queryTrigger += \" SET numero_proce_pl := (SELECT c_n_wf_pl FROM app_fd_detalhe_processo WHERE c_id_processo LIKE old.c_id_processo);\";\r\n                        queryTrigger += \"ELSE IF OLD.c_id_processo LIKE '%Procuradoria%' THEN\";\r\n                        queryTrigger += \" SET numero_proce_pl := (SELECT c_n_agenda FROM app_fd_detalhe_proce_procu WHERE c_id_processo LIKE old.c_id_processo);\";\r\n                        queryTrigger += \" END IF;\";\r\n                    }else if(servico.equals(\"CH\")){\r\n                        queryTrigger += \" SET numero_proce_pl := (SELECT c_n_wf_pl FROM app_fd_detalhe_processo WHERE c_id_processo LIKE old.c_id_processo);\";\r\n                    }else if(servico.equals(\"PROCU\")){\r\n                        queryTrigger += \" SET numero_proce_pl := (SELECT c_n_agenda FROM app_fd_detalhe_proce_procu WHERE c_id_processo LIKE old.c_id_processo);\";\r\n                        }else{\r\n                        queryTrigger += \" SET numero_proce_pl := (SELECT c_n_wf_pl FROM app_fd_detalhe_processo WHERE c_id_processo LIKE old.c_id_processo);\";\r\n                    }\r\n                }\r\n                \r\n\r\n                if(!prevIdForm.equals(idForm)){\r\n                    queryTrigger += \" END; //DELIMITER ;\";\r\n\r\n                    //Create Trigger\r\n                    stmt2.addBatch(queryTrigger);\r\n                    stmt2.executeBatch();\r\n                    stmt2 = con.createStatement();\r\n\r\n                    //Trigger for another table\r\n                    queryTrigger = \"DELIMITER // CREATE TRIGGER update_\" + idForm + \"_logs AFTER UPDATE ON app_fd_\"+ formTable+\" FOR EACH ROW BEGIN\";\r\n                    queryTrigger +=\" DECLARE numero_proce_pl VARCHAR(255);\";\r\n                    \r\n                    if(servico.equals(\"AGN\")){\r\n                        queryTrigger += \"IF OLD.c_id_processo LIKE '%CreditoHabitacao%' THEN\";\r\n                        queryTrigger += \" SET numero_proce_pl := (SELECT c_n_wf_pl FROM app_fd_detalhe_processo WHERE c_id_processo LIKE old.c_id_processo);\";\r\n                        queryTrigger += \"ELSE IF OLD.c_id_processo LIKE '%Procuradoria%' THEN\";\r\n                        queryTrigger += \" SET numero_proce_pl := (SELECT c_n_agenda FROM app_fd_detalhe_proce_procu WHERE c_id_processo LIKE old.c_id_processo);\";\r\n                        queryTrigger += \" END IF;\";\r\n                    }else if(servico.equals(\"CH\")){\r\n                        queryTrigger += \" SET numero_proce_pl := (SELECT c_n_wf_pl FROM app_fd_detalhe_processo WHERE c_id_processo LIKE old.c_id_processo);\";\r\n                        \r\n                    }else if(servico.equals(\"PROCU\")){\r\n                        queryTrigger += \" SET numero_proce_pl := (SELECT c_n_agenda FROM app_fd_detalhe_proce_procu WHERE c_id_processo LIKE old.c_id_processo);\";\r\n                    }else{\r\n                        queryTrigger += \" SET numero_proce_pl := (SELECT c_n_wf_pl FROM app_fd_detalhe_processo WHERE c_id_processo LIKE old.c_id_processo);\";\r\n                    }\r\n                    \r\n                   if(servico.equals(\"AGN\")){\r\n                        queryTrigger += \"IF OLD.c_id_processo LIKE '%CreditoHabitacao%' THEN\";\r\n                        queryTrigger += \" IF OLD.c_\" + idField +\" <> NEW.c_\" + idField + \" THEN INSERT INTO app_fd_audit_log (id, c_numero_proce_pl, c_process_id, c_campo, c_novo_valor, c_data_alteracao, c_utilizador) VALUES(UUID(),numero_proce_pl,old.c_id_processo, '\" + idField + \"', new.c_\" + idField+ \", now(), old.modifiedBy); END IF;\";\r\n                        queryTrigger += \"ELSE IF OLD.c_id_processo LIKE '%Procuradoria%' THEN\";\r\n                        queryTrigger += \" IF OLD.c_\" + idField +\" <> NEW.c_\" + idField + \" THEN INSERT INTO app_fd_procu_audit_log (id, c_numero_proce_pl, c_process_id, c_campo, c_novo_valor, c_data_alteracao, c_utilizador) VALUES(UUID(),numero_proce_pl,old.c_id_processo, '\" + idField + \"', new.c_\" + idField+ \", now(), old.modifiedBy); END IF;\";\r\n                        queryTrigger += \" END IF;\";\r\n                    }else{\r\n                         queryTrigger += \" IF OLD.c_\" + idField +\" <> NEW.c_\" + idField + \" THEN INSERT INTO \" + auditLogTable + \" (id, c_numero_proce_pl, c_process_id, c_campo, c_novo_valor, c_data_alteracao, c_utilizador) VALUES(UUID(),numero_proce_pl,old.c_id_processo, '\" + idField + \"', new.c_\" + idField+ \", now(), old.modifiedBy); END IF;\";\r\n                    }\r\n                    \r\n                    \r\n                }else{\r\n                    if(servico.equals(\"AGN\")){\r\n                        queryTrigger += \"IF OLD.c_id_processo LIKE '%CreditoHabitacao%' THEN\";\r\n                        queryTrigger += \" IF OLD.c_\" + idField +\" <> NEW.c_\" + idField + \" THEN INSERT INTO app_fd_audit_log (id, c_numero_proce_pl, c_process_id, c_campo, c_novo_valor, c_data_alteracao, c_utilizador) VALUES(UUID(),numero_proce_pl,old.c_id_processo, '\" + idField + \"', new.c_\" + idField+ \", now(), old.modifiedBy); END IF;\";\r\n                        queryTrigger += \"ELSE IF OLD.c_id_processo LIKE '%Procuradoria%' THEN\";\r\n                        queryTrigger += \" IF OLD.c_\" + idField +\" <> NEW.c_\" + idField + \" THEN INSERT INTO app_fd_procu_audit_log (id, c_numero_proce_pl, c_process_id, c_campo, c_novo_valor, c_data_alteracao, c_utilizador) VALUES(UUID(),numero_proce_pl,old.c_id_processo, '\" + idField + \"', new.c_\" + idField+ \", now(), old.modifiedBy); END IF;\";\r\n                        queryTrigger += \" END IF;\";\r\n                    }else{\r\n                         queryTrigger += \" IF OLD.c_\" + idField +\" <> NEW.c_\" + idField + \" THEN INSERT INTO \" + auditLogTable + \" (id, c_numero_proce_pl, c_process_id, c_campo, c_novo_valor, c_data_alteracao, c_utilizador) VALUES(UUID(),numero_proce_pl,old.c_id_processo, '\" + idField + \"', new.c_\" + idField+ \", now(), old.modifiedBy); END IF;\";\r\n                    }\r\n                }\r\n                \r\n                \r\n                \r\n                counter += 1;\r\n            }\r\n            queryTrigger += \" END; //DELIMITER ;\";\r\n            \r\n            //Create Trigger\r\n            stmt2.addBatch(queryTrigger);\r\n            stmt2.executeBatch();\r\n \r\n            LogUtil.info(\"Gerir Campos Log\", \"Post Processing Tool - Campos atualizados\");\r\n            \r\n        } else {\r\n     \r\n        }\r\n    } catch(Exception e) {\r\n            LogUtil.error(\"Sample app - Form 1\", e, \"Error loading user data in load binder\");\r\n    } finally {\r\n            //always close the connection after used\r\n            try {\r\n               if(rs != null){\r\n                    rs.close();\r\n                }\r\n                if(stmt != null){\r\n                    stmt.close();\r\n                }\r\n                if(con != null) {\r\n                    con.close();\r\n                }\r\n            } catch(SQLException e) {/* ignored */}\r\n    }\r\n        "}
        },
        "postProcessorRunOn": "create",
        "storeBinder": {
            "className": "org.joget.apps.form.lib.BeanShellFormBinder",
            "properties": {
                "autoHandleFiles": "",
                "autoHandleWorkflowVariable": "true",
                "cacheInterval": "",
                "script": "return null;",
                "useAjax": ""
            }
        },
        "tableName": "campos_log"
    }
}